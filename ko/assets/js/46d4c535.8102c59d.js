"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[3908],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3188:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],c={id:"multi-threading",title:"\uba40\ud2f0 \uc2a4\ub808\ub529",description:"Using Casbin in a multi-threading manner",keywords:["multi-threading"]},s=void 0,u={unversionedId:"multi-threading",id:"multi-threading",title:"\uba40\ud2f0 \uc2a4\ub808\ub529",description:"Using Casbin in a multi-threading manner",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/MultiThreading.mdx",sourceDirName:".",slug:"/multi-threading",permalink:"/ko/docs/multi-threading",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/ko",tags:[],version:"current",frontMatter:{id:"multi-threading",title:"\uba40\ud2f0 \uc2a4\ub808\ub529",description:"Using Casbin in a multi-threading manner",keywords:["multi-threading"]},sidebar:"docs",previous:{title:"Data Permissions",permalink:"/ko/docs/data-permissions"},next:{title:"\ubca4\uce58\ub9c8\ud06c",permalink:"/ko/docs/benchmark"}},l={},p=[],d={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you use Casbin in a multi-threading manner, you can use the synchronized wrapper of the Casbin enforcer: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/enforcer_synced.go"},"https://github.com/casbin/casbin/blob/master/enforcer_synced.go")," (GoLang) and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-cpp/blob/master/casbin/enforcer_synced.cpp"},"https://github.com/casbin/casbin-cpp/blob/master/casbin/enforcer_synced.cpp")," (C++)."),(0,o.kt)("p",null,"It also supports the ",(0,o.kt)("inlineCode",{parentName:"p"},"AutoLoad")," feature, which means the Casbin enforcer will automatically load the latest policy rules from DB if it has changed. Call ",(0,o.kt)("inlineCode",{parentName:"p"},"StartAutoLoadPolicy()")," to start automatically loading policy periodically and call ",(0,o.kt)("inlineCode",{parentName:"p"},"StopAutoLoadPolicy()")," to stop it."))}m.isMDXComponent=!0}}]);