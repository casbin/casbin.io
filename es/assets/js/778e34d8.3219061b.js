"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[6099],{3905:(e,n,o)=>{o.d(n,{Zo:()=>s,kt:()=>u});var a=o(7294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,a)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function l(e,n){if(null==e)return{};var o,a,t=function(e,n){if(null==e)return{};var o,a,t={},r=Object.keys(e);for(a=0;a<r.length;a++)o=r[a],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)o=r[a],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var c=a.createContext({}),d=function(e){var n=a.useContext(c),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},s=function(e){var n=d(e.components);return a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var o=e.components,t=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(o),u=t,g=p["".concat(c,".").concat(u)]||p[u]||m[u]||r;return o?a.createElement(g,i(i({ref:n},s),{},{components:o})):a.createElement(g,i({ref:n},s))}));function u(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var r=o.length,i=new Array(r);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var d=2;d<r;d++)i[d]=o[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,o)}p.displayName="MDXCreateElement"},6890:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=o(7462),t=(o(7294),o(3905));const r={id:"model-storage",title:"Model Storage",description:"Almacenamiento de modelos",keywords:["model storage"],authors:["hsluoyz"]},i=void 0,l={unversionedId:"model-storage",id:"model-storage",title:"Model Storage",description:"Almacenamiento de modelos",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/es/docs/model-storage",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/ModelStorage.mdx",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Model Storage",description:"Almacenamiento de modelos",keywords:["model storage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Storage",permalink:"/es/docs/category/storage"},next:{title:"Policy Storage",permalink:"/es/docs/policy-storage"}},c={},d=[{value:"Cargar modelo desde archivo .CONF",id:"cargar-modelo-desde-archivo-conf",level:2},{value:"Cargar modelo desde c\xf3digo",id:"cargar-modelo-desde-c\xf3digo",level:2},{value:"Cargar modelo desde una cadena de texto",id:"cargar-modelo-desde-una-cadena-de-texto",level:2}],s={toc:d};function m(e){let{components:n,...o}=e;return(0,t.kt)("wrapper",(0,a.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"A diferencia de la pol\xedtica, el modelo solo puede ser cargado, no puede ser guardado. Creemos que el modelo no es un componente din\xe1mico y no deber\xeda ser modificado en tiempo de ejecuci\xf3n, por lo tanto, no hemos implementado una API para guardar el modelo en el almacenamiento."),(0,t.kt)("p",null,"Sin embargo, hay buenas noticias. Ofrecemos tres maneras equivalentes de cargar un modelo, ya sea de manera est\xe1tica o din\xe1mica:"),(0,t.kt)("h2",{id:"cargar-modelo-desde-archivo-conf"},"Cargar modelo desde archivo .CONF"),(0,t.kt)("p",null,"Esta es la manera m\xe1s com\xfan de usar Casbin. Es f\xe1cil de entender para principiantes y conveniente para compartir cuando necesitas ayuda del equipo de Casbin."),(0,t.kt)("p",null,"El contenido del archivo ",(0,t.kt)("inlineCode",{parentName:"p"},".CONF")," ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"examples/rbac","_","model.conf")," es como sigue:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,t.kt)("p",null,"Entonces puedes cargar el archivo de modelo de la siguiente manera:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,t.kt)("h2",{id:"cargar-modelo-desde-c\xf3digo"},"Cargar modelo desde c\xf3digo"),(0,t.kt)("p",null,"El modelo puede ser inicializado din\xe1micamente desde el c\xf3digo en lugar de usar un archivo ",(0,t.kt)("inlineCode",{parentName:"p"},".CONF"),". Aqu\xed hay un ejemplo para el modelo RBAC:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Initialize the model from Go code.\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "some(where (p.eft == allow))")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act")\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')),(0,t.kt)("h2",{id:"cargar-modelo-desde-una-cadena-de-texto"},"Cargar modelo desde una cadena de texto"),(0,t.kt)("p",null,"Alternativamente, puedes cargar todo el texto del modelo desde una cadena de texto multil\xednea. La ventaja de este enfoque es que no necesitas mantener un archivo de modelo."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialize the model from a string.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\nm, _ := model.NewModelFromString(text)\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')))}m.isMDXComponent=!0}}]);