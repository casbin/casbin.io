"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5290],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>m});var t=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?t.createElement(b,r(r({ref:a},c),{},{components:n})):t.createElement(b,r({ref:a},c))}));function m(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<i;u++)r[u]=n[u];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7965:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var t=n(7462),o=(n(7294),n(3905));const i={title:"Autorizaci\xf3n en APISIX usando Casbin",author:"Rushikesh Tote",authorTitle:"Miembro de Casbin",authorURL:"http://github.com/rushitote",authorImageURL:"https://avatars.githubusercontent.com/rushitote"},r=void 0,l={permalink:"/es/blog/2021/08/19/apisix-casbin-authorization",editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/i18n/es/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md",source:"@site/i18n/es/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md",title:"Autorizaci\xf3n en APISIX usando Casbin",description:"Introducci\xf3n",date:"2021-08-19T00:00:00.000Z",formattedDate:"19 de agosto de 2021",tags:[],readingTime:5.84,hasTruncateMarker:!1,authors:[{name:"Rushikesh Tote",title:"Miembro de Casbin",url:"http://github.com/rushitote",imageURL:"https://avatars.githubusercontent.com/rushitote"}],frontMatter:{title:"Autorizaci\xf3n en APISIX usando Casbin",author:"Rushikesh Tote",authorTitle:"Miembro de Casbin",authorURL:"http://github.com/rushitote",authorImageURL:"https://avatars.githubusercontent.com/rushitote"},nextItem:{title:"Yang Luo - Ganador del Premio Google Open Source Peer Bonus",permalink:"/es/blog/2020/04/21/google-award"}},s={authorsImageUrls:[void 0]},u=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Creando un modelo",id:"creando-un-modelo",level:2},{value:"Creando una pol\xedtica",id:"creando-una-pol\xedtica",level:2},{value:"Habilitando el complemento en la ruta",id:"habilitando-el-complemento-en-la-ruta",level:2},{value:"Habilitando el complemento usando un modelo/pol\xedtica global",id:"habilitando-el-complemento-usando-un-modelopol\xedtica-global",level:2},{value:"Casos de uso",id:"casos-de-uso",level:2}],c={toc:u};function d(e){let{components:a,...i}=e;return(0,o.kt)("wrapper",(0,t.Z)({},c,i,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://apisix.apache.org/"},"APISIX")," es una puerta de enlace API nativa de la nube de alto rendimiento y escalable basada en Nginx y etcd. Es un proyecto de c\xf3digo abierto de la Apache Software Foundation. Adem\xe1s, lo que hace que APISIX sea tan bueno es el soporte de muchos excelentes complementos integrados que se podr\xedan usar para implementar caracter\xedsticas como autenticaci\xf3n, monitoreo, enrutamiento, etc. Y el hecho de que los complementos en APISIX se recargan en caliente (sin reinicios) lo hace muy din\xe1mico."),(0,o.kt)("p",null,"Pero al usar APISIX, puede haber escenarios en los que desees agregar l\xf3gica de autorizaci\xf3n compleja en tu aplicaci\xf3n. Aqu\xed es donde authz-casbin podr\xeda ayudarte, authz-casbin es un complemento de APISIX basado en ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/lua-casbin/"},"Lua Casbin")," que permite una autorizaci\xf3n poderosa basada en varios modelos de control de acceso. ",(0,o.kt)("a",{parentName:"p",href:"/"},"Casbin")," es una biblioteca de autorizaci\xf3n que soporta modelos de control de acceso como ACL, RBAC, ABAC. Originalmente escrito en Go, ha sido portado a muchos idiomas y Lua Casbin es la implementaci\xf3n en Lua de Casbin. El desarrollo de authz-casbin comenz\xf3 cuando propusimos un nuevo complemento para la autorizaci\xf3n en el repositorio de APISIX (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/issues/4674"},"#4674"),") al cual los miembros principales estuvieron de acuerdo. Y despu\xe9s de las \xfatiles revisiones que llevaron a algunos cambios importantes y mejoras, el PR (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/pull/4710"},"#4710"),") finalmente se fusion\xf3."),(0,o.kt)("p",null,"En este blog, usaremos el complemento authz-casbin para mostrar c\xf3mo puedes implementar un modelo de autorizaci\xf3n basado en el Control de Acceso Basado en Roles (RBAC) en APISIX."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTA"),": Necesitar\xe1s usar alg\xfan otro complemento o flujo de trabajo personalizado para autenticar al usuario, ya que Casbin solo har\xe1 autorizaci\xf3n y no autenticaci\xf3n."),(0,o.kt)("h2",{id:"creando-un-modelo"},"Creando un modelo"),(0,o.kt)("p",null,"El complemento utiliza tres par\xe1metros para autorizar cualquier solicitud: sujeto, objeto y acci\xf3n. Aqu\xed, sujeto es el valor del encabezado de nombre de usuario, que podr\xeda ser algo como ",(0,o.kt)("inlineCode",{parentName:"p"},"[username: alice]"),". Luego, el objeto es la ruta URL que se est\xe1 accediendo y la acci\xf3n es el m\xe9todo de solicitud que se est\xe1 utilizando."),(0,o.kt)("p",null,"Digamos que queremos crear un modelo con tres recursos en las rutas - ",(0,o.kt)("inlineCode",{parentName:"p"},"/"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"/res1")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"/res2"),". Y queremos tener un modelo as\xed:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"imagen",src:n(8478).Z,width:"4520",height:"1720"})),(0,o.kt)("p",null,"Esto significar\xeda que todos los usuarios (",(0,o.kt)("inlineCode",{parentName:"p"},"*"),") como por ejemplo ",(0,o.kt)("inlineCode",{parentName:"p"},"jack")," pueden acceder a la p\xe1gina de inicio (",(0,o.kt)("inlineCode",{parentName:"p"},"/"),"). Y los usuarios con permisos de ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," como ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"bob")," pueden acceder a todas las p\xe1ginas y recursos (como ",(0,o.kt)("inlineCode",{parentName:"p"},"res1")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"res2"),"). Adem\xe1s, restrinjamos a los usuarios sin ning\xfan permiso de administrador a usar solo el m\xe9todo de solicitud ",(0,o.kt)("inlineCode",{parentName:"p"},"GET"),". Para este escenario, podr\xedamos definir el modelo como:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\n")),(0,o.kt)("h2",{id:"creando-una-pol\xedtica"},"Creando una pol\xedtica"),(0,o.kt)("p",null,"Del escenario anterior, la pol\xedtica ser\xeda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csv"},"p, *, /, GET\np, admin, *, *\ng, alice, admin\ng, bob, admin\n")),(0,o.kt)("p",null,"El comparador del modelo significa:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"(g(r.sub, p.sub) || keyMatch(r.sub, p.sub))"),": O bien el sujeto de la solicitud tiene un rol como el sujeto de la pol\xedtica o el sujeto de la solicitud coincide con el sujeto de la pol\xedtica en ",(0,o.kt)("inlineCode",{parentName:"li"},"keyMatch"),". ",(0,o.kt)("inlineCode",{parentName:"li"},"keyMatch")," es una funci\xf3n integrada en Lua Casbin, puedes echar un vistazo a la descripci\xf3n de la funci\xf3n y m\xe1s funciones que podr\xedan ser \xfatiles ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua"},"aqu\xed"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"keyMatch(r.obj, p.obj)"),": El objeto de la solicitud coincide con el objeto de la pol\xedtica (ruta URL aqu\xed)."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"keyMatch(r.act, p.act)"),": La acci\xf3n de la solicitud coincide con la acci\xf3n de la pol\xedtica (m\xe9todo de solicitud HTTP aqu\xed).")),(0,o.kt)("h2",{id:"habilitando-el-complemento-en-la-ruta"},"Habilitando el complemento en la ruta"),(0,o.kt)("p",null,"Una vez que hayas creado el modelo y la pol\xedtica, puedes habilitarlo en una ruta utilizando la API de administraci\xf3n de APISIX. Para habilitarlo usando rutas de archivos de modelo y pol\xedtica:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "model_path": "/path/to/model.conf",\n            "policy_path": "/path/to/policy.csv",\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/*"\n}\'\n')),(0,o.kt)("p",null,"Aqu\xed, el campo de nombre de usuario es el nombre del encabezado que usar\xe1s para pasar el sujeto. Por ejemplo, si pasar\xe1s el encabezado de nombre de usuario como ",(0,o.kt)("inlineCode",{parentName:"p"},"user: alice"),", usar\xedas ",(0,o.kt)("inlineCode",{parentName:"p"},'"username": "user"'),"."),(0,o.kt)("p",null,"Para usar texto de modelo/pol\xedtica en lugar de archivos, puedes usar los campos ",(0,o.kt)("inlineCode",{parentName:"p"},"model")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"policy")," en su lugar:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "model": "[request_definition]\n            r = sub, obj, act\n\n            [policy_definition]\n            p = sub, obj, act\n\n            [role_definition]\n            g = _, _\n\n            [policy_effect]\n            e = some(where (p.eft == allow))\n\n            [matchers]\n            m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)",\n\n            "policy": "p, *, /, GET\n            p, admin, *, *\n            g, alice, admin\n            g, bob, admin",\n\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/*"\n}\'\n')),(0,o.kt)("h2",{id:"habilitando-el-complemento-usando-un-modelopol\xedtica-global"},"Habilitando el complemento usando un modelo/pol\xedtica global"),(0,o.kt)("p",null,"Puede haber situaciones en las que desees usar una \xfanica configuraci\xf3n de modelo y pol\xedtica en m\xfaltiples rutas. Puedes hacerlo primero enviando una solicitud ",(0,o.kt)("inlineCode",{parentName:"p"},"PUT")," para agregar la configuraci\xf3n de modelo y pol\xedtica a los metadatos del complemento por:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/plugin_metadata/authz-casbin -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -i -X PUT -d \'\n{\n"model": "[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)",\n\n"policy": "p, *, /, GET\np, admin, *, *\ng, alice, admin\ng, bob, admin"\n}\'\n')),(0,o.kt)("p",null,"Y luego para habilitar la misma configuraci\xf3n en alguna ruta, env\xeda una solicitud usando la API de administraci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/route1/*"\n}\'\n')),(0,o.kt)("p",null,"Esto agregar\xe1 la configuraci\xf3n de metadatos del complemento a la ruta. Tambi\xe9n puedes actualizar f\xe1cilmente la configuraci\xf3n de metadatos del complemento reenviando la solicitud a los metadatos del complemento con la configuraci\xf3n de modelo y pol\xedtica actualizada, el complemento actualizar\xe1 autom\xe1ticamente todas las rutas que usan la configuraci\xf3n de metadatos del complemento."),(0,o.kt)("h2",{id:"casos-de-uso"},"Casos de uso"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"El caso de uso principal de este complemento ser\xeda en la implementaci\xf3n de autorizaci\xf3n en tus API. Puedes agregar f\xe1cilmente este complemento en cualquier ruta de API que est\xe9s utilizando con tu modelo de autorizaci\xf3n y configuraci\xf3n de pol\xedtica."),(0,o.kt)("li",{parentName:"ul"},"Si deseas tener un \xfanico modelo de autorizaci\xf3n para todas tus API, puedes usar el m\xe9todo de modelo/pol\xedtica global. Esto facilita la actualizaci\xf3n de la pol\xedtica para todas las rutas, ya que solo necesitas actualizar los metadatos en etcd."),(0,o.kt)("li",{parentName:"ul"},"Mientras que si te gustar\xeda usar un modelo diferente para cada ruta diferente, puedes usar el m\xe9todo de ruta. Esto es \xfatil cuando diferentes rutas de la API tienen diferentes conjuntos de permisos de usuario. Tambi\xe9n puedes usar esto cuando est\xe1s tratando con pol\xedticas m\xe1s grandes, ya que har\xe1 que la autorizaci\xf3n sea m\xe1s r\xe1pida cuando se filtre en m\xfaltiples rutas.")))}d.isMDXComponent=!0},8478:(e,a,n)=>{n.d(a,{Z:()=>t});const t=n.p+"assets/images/model-1c0c2441dd19f8b957744635985283eb.png"}}]);