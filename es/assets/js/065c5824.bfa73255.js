"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4341],{3905:(e,a,r)=>{r.d(a,{Zo:()=>c,kt:()=>m});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var s=n.createContext({}),d=function(e){var a=n.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},c=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=t,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return r?n.createElement(f,i(i({ref:a},c),{},{components:r})):n.createElement(f,i({ref:a},c))}));function m(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4638:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=r(7462),t=(r(7294),r(3905));const o={id:"api-overview",title:"API Overview",description:"Uso de la API de Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},i=void 0,l={unversionedId:"api-overview",id:"api-overview",title:"API Overview",description:"Uso de la API de Casbin",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/APIOverview.mdx",sourceDirName:".",slug:"/api-overview",permalink:"/es/docs/api-overview",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/APIOverview.mdx",tags:[],version:"current",frontMatter:{id:"api-overview",title:"API Overview",description:"Uso de la API de Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"API",permalink:"/es/docs/category/api"},next:{title:"Management API",permalink:"/es/docs/management-api"}},s={},d=[{value:"API de Enforce",id:"api-de-enforce",level:2},{value:"EnforceEx API",id:"enforceex-api",level:2},{value:"API de Gesti\xf3n",id:"api-de-gesti\xf3n",level:2},{value:"API de Obtenci\xf3n",id:"api-de-obtenci\xf3n",level:3},{value:"Add, Delete, Update API",id:"add-delete-update-api",level:3},{value:"AddEx API",id:"addex-api",level:3},{value:"RBAC API",id:"rbac-api",level:2}],c={toc:d};function p(e){let{components:a,...r}=e;return(0,t.kt)("wrapper",(0,n.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Esta visi\xf3n general solo muestra c\xf3mo usar las APIs de Casbin y no explica c\xf3mo se instala Casbin ni c\xf3mo funciona. Puedes encontrar esos tutoriales aqu\xed: ",(0,t.kt)("a",{parentName:"p",href:"/docs/get-started"},"Instalaci\xf3n de Casbin")," y ",(0,t.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"C\xf3mo funciona Casbin"),". Entonces, cuando comiences a leer este tutorial, asumimos que ya has instalado completamente e importado Casbin en tu c\xf3digo."),(0,t.kt)("h2",{id:"api-de-enforce"},"API de Enforce"),(0,t.kt)("p",null,"Comencemos con las APIs de Enforce de Casbin. Cargaremos un modelo RBAC desde ",(0,t.kt)("inlineCode",{parentName:"p"},"model.conf")," y cargaremos pol\xedticas desde ",(0,t.kt)("inlineCode",{parentName:"p"},"policy.csv"),". Puedes aprender sobre la sintaxis del Modelo ",(0,t.kt)("a",{parentName:"p",href:"/docs/syntax-for-models"},"aqu\xed"),", y no lo discutiremos en este tutorial. Suponemos que puedes entender los archivos de configuraci\xf3n que se muestran a continuaci\xf3n:"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, admin, data1, write\np, admin, data2, read\np, admin, data2, write\np, alice, data1, read\np, bob, data2, write\ng, amber, admin\ng, abc, admin\n")),(0,t.kt)("p",null,"Despu\xe9s de leer los archivos de configuraci\xf3n, por favor lee el siguiente c\xf3digo."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// Load information from files.\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    log.Fatalf("Error, detail: %s", err)\n}\nok, err := enforcer.Enforce("alice", "data1", "read")\n')),(0,t.kt)("p",null,"Este c\xf3digo carga el modelo de control de acceso y las pol\xedticas desde archivos locales. La funci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"casbin.NewEnforcer()")," devolver\xe1 un enforcer. Reconocer\xe1 sus dos par\xe1metros como rutas de archivos y cargar\xe1 los archivos desde all\xed. Los errores ocurridos en el proceso se almacenan en la variable ",(0,t.kt)("inlineCode",{parentName:"p"},"err"),". Este c\xf3digo utiliza el adaptador predeterminado para cargar el modelo y las pol\xedticas, y por supuesto, puedes lograr el mismo resultado utilizando un adaptador de terceros."),(0,t.kt)("p",null,"El c\xf3digo ",(0,t.kt)("inlineCode",{parentName:"p"},'ok, err := enforcer.Enforce("alice", "data1", "read")')," se utiliza para confirmar permisos de acceso. Si Alice puede acceder a data1 con la operaci\xf3n de lectura, el valor devuelto de ",(0,t.kt)("inlineCode",{parentName:"p"},"ok")," ser\xe1 ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"; de lo contrario, ser\xe1 ",(0,t.kt)("inlineCode",{parentName:"p"},"false"),". En este ejemplo, el valor de ",(0,t.kt)("inlineCode",{parentName:"p"},"ok")," es ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,t.kt)("h2",{id:"enforceex-api"},"EnforceEx API"),(0,t.kt)("p",null,"A veces puedes preguntarte qu\xe9 pol\xedtica permiti\xf3 la solicitud, por eso hemos preparado la funci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),". Puedes usarla as\xed:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'ok, reason, err := enforcer.EnforceEx("amber", "data1", "read")\nfmt.Println(ok, reason) // true [admin data1 read]\n')),(0,t.kt)("p",null,"La funci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()")," devolver\xe1 la cadena de pol\xedtica exacta en el valor de retorno ",(0,t.kt)("inlineCode",{parentName:"p"},"reason"),". En este ejemplo, ",(0,t.kt)("inlineCode",{parentName:"p"},"amber")," tiene un rol de ",(0,t.kt)("inlineCode",{parentName:"p"},"admin"),", por lo que la pol\xedtica ",(0,t.kt)("inlineCode",{parentName:"p"},"p, admin, data1, read")," permiti\xf3 que esta solicitud fuera ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),". La salida de este c\xf3digo est\xe1 en el comentario."),(0,t.kt)("p",null,"Casbin ha proporcionado muchas APIs similares a esta. Estas APIs a\xf1aden algunas funciones extras a las b\xe1sicas. Incluyen:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"ok, err := enforcer.EnforceWithMatcher(matcher, request)")),(0,t.kt)("p",{parentName:"li"},"Esta funci\xf3n utiliza un matcher.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"ok, reason, err := enforcer.EnforceExWithMatcher(matcher, request)")),(0,t.kt)("p",{parentName:"li"},"Esta es una combinaci\xf3n de ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceWithMatcher()")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),".")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"boolArray, err := enforcer.BatchEnforce(requests)")),(0,t.kt)("p",{parentName:"li"},"Esta funci\xf3n permite una lista de trabajos y devuelve un array."))),(0,t.kt)("p",null,"Este es un caso de uso simple de Casbin. Puedes usar Casbin para iniciar un servidor de autorizaci\xf3n utilizando estas APIs. Te mostraremos algunos otros tipos de APIs en los siguientes p\xe1rrafos."),(0,t.kt)("h2",{id:"api-de-gesti\xf3n"},"API de Gesti\xf3n"),(0,t.kt)("h3",{id:"api-de-obtenci\xf3n"},"API de Obtenci\xf3n"),(0,t.kt)("p",null,"Estas APIs se utilizan para recuperar objetos espec\xedficos en pol\xedticas. En este ejemplo, estamos cargando un enforcer y recuperando algo de \xe9l."),(0,t.kt)("p",null,"Por favor, echa un vistazo al siguiente c\xf3digo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\nallSubjects := enforcer.GetAllSubjects()\nfmt.Println(allSubjects)\n')),(0,t.kt)("p",null,"Similar al ejemplo anterior, las primeras cuatro l\xedneas se utilizan para cargar la informaci\xf3n necesaria desde archivos locales. No discutiremos eso aqu\xed m\xe1s a fondo."),(0,t.kt)("p",null,"El c\xf3digo ",(0,t.kt)("inlineCode",{parentName:"p"},"allSubjects := enforcer.GetAllSubjects()")," recupera todos los sujetos en el archivo de pol\xedtica y los devuelve como un array. Luego imprimimos ese array."),(0,t.kt)("p",null,"T\xedpicamente, la salida del c\xf3digo deber\xeda ser:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-text"},"[admin alice bob]\n")),(0,t.kt)("p",null,"Tambi\xe9n puedes cambiar la funci\xf3n ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAllSubjects()")," por ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAllNamedSubjects()")," para obtener la lista de sujetos que aparecen en la pol\xedtica nombrada actual."),(0,t.kt)("p",null,"De manera similar, hemos preparado funciones ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAll")," para ",(0,t.kt)("inlineCode",{parentName:"p"},"Objects, Actions, Roles"),". Para acceder a estas funciones, simplemente necesitas reemplazar la palabra ",(0,t.kt)("inlineCode",{parentName:"p"},"Subject")," en el nombre de la funci\xf3n con la categor\xeda deseada."),(0,t.kt)("p",null,"Adem\xe1s, hay m\xe1s getters disponibles para pol\xedticas. El m\xe9todo de llamada y los valores de retorno son similares a los mencionados anteriormente."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"policy = e.GetPolicy()")," recupera todas las reglas de autorizaci\xf3n en la pol\xedtica."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredPolicy := e.GetFilteredPolicy(0, "alice")')," recupera todas las reglas de autorizaci\xf3n en la pol\xedtica con filtros de campo especificados."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedPolicy := e.GetNamedPolicy("p")')," recupera todas las reglas de autorizaci\xf3n en la pol\xedtica nombrada."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredNamedPolicy = e.GetFilteredNamedPolicy("p", 0, "bob")')," recupera todas las reglas de autorizaci\xf3n en la pol\xedtica nombrada con filtros de campo especificados."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"groupingPolicy := e.GetGroupingPolicy()")," recupera todas las reglas de herencia de roles en la pol\xedtica."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredGroupingPolicy := e.GetFilteredGroupingPolicy(0, "alice")')," recupera todas las reglas de herencia de roles en la pol\xedtica con filtros de campo especificados."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetNamedGroupingPolicy("g")')," recupera todas las reglas de herencia de roles en la pol\xedtica."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetFilteredNamedGroupingPolicy("g", 0, "alice")')," recupera todas las reglas de herencia de roles en la pol\xedtica con filtros de campo especificados.")),(0,t.kt)("h3",{id:"add-delete-update-api"},"Add, Delete, Update API"),(0,t.kt)("p",null,"Casbin ofrece una variedad de APIs para agregar, eliminar o modificar pol\xedticas din\xe1micamente en tiempo de ejecuci\xf3n."),(0,t.kt)("p",null,"El siguiente c\xf3digo demuestra c\xf3mo agregar, eliminar y actualizar pol\xedticas, as\xed como c\xf3mo verificar si una pol\xedtica existe:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// load information from files\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n\n// add a policy and use HasPolicy() to confirm\nenforcer.AddPolicy("added_user", "data1", "read")\nhasPolicy := enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // true, the policy was added successfully\n\n// remove a policy and use HasPolicy() to confirm\nenforcer.RemovePolicy("alice", "data1", "read")\nhasPolicy = enforcer.HasPolicy("alice", "data1", "read")\nfmt.Println(hasPolicy) // false, the policy was removed successfully\n\n// update a policy and use HasPolicy() to confirm\nenforcer.UpdatePolicy([]string{"added_user", "data1", "read"}, []string{"added_user", "data1", "write"})\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // false, the original policy has expired\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "write")\nfmt.Println(hasPolicy) // true, the new policy is in effect\n')),(0,t.kt)("p",null,"Al usar estas APIs, puedes editar tus pol\xedticas din\xe1micamente. De manera similar, hemos proporcionado APIs similares para ",(0,t.kt)("inlineCode",{parentName:"p"},"FilteredPolicy, NamedPolicy, FilteredNamedPolicy, GroupingPolicy, NamedGroupingPolicy, FilteredGroupingPolicy, FilteredNamedGroupingPolicy"),". Para usarlas, simplemente reemplaza la palabra ",(0,t.kt)("inlineCode",{parentName:"p"},"Policy")," en el nombre de la funci\xf3n con la categor\xeda apropiada."),(0,t.kt)("p",null,"Adem\xe1s, al cambiar los par\xe1metros a arreglos, puedes realizar edici\xf3n por lotes de tus pol\xedticas."),(0,t.kt)("p",null,"Por ejemplo, considera funciones como esta:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicy([]string{"eve", "data3", "read"}, []string{"eve", "data3", "write"})\n')),(0,t.kt)("p",null,"Si cambiamos ",(0,t.kt)("inlineCode",{parentName:"p"},"Policy")," por ",(0,t.kt)("inlineCode",{parentName:"p"},"Policies")," y modificamos los par\xe1metros de la siguiente manera:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicies([][]string{{"eve", "data3", "read"}, {"jack", "data3", "read"}}, [][]string{{"eve", "data3", "write"}, {"jack", "data3", "write"}})\n')),(0,t.kt)("p",null,"entonces podemos realizar edici\xf3n por lotes de estas pol\xedticas."),(0,t.kt)("p",null,"Las mismas operaciones tambi\xe9n se pueden aplicar a ",(0,t.kt)("inlineCode",{parentName:"p"},"GroupingPolicy, NamedGroupingPolicy"),"."),(0,t.kt)("h3",{id:"addex-api"},"AddEx API"),(0,t.kt)("p",null,"Casbin ofrece la serie de APIs AddEx para ayudar a los usuarios a agregar reglas en lotes."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},"AddPoliciesEx(rules [][]string) (bool, error)\nAddNamedPoliciesEx(ptype string, rules [][]string) (bool, error)\nAddGroupingPoliciesEx(rules [][]string) (bool, error)\nAddNamedGroupingPoliciesEx(ptype string, rules [][]string) (bool, error)\nSelfAddPoliciesEx(sec string, ptype string, rules [][]string) (bool, error) \n")),(0,t.kt)("p",null,"La diferencia entre estos m\xe9todos y los m\xe9todos sin el sufijo Ex es que si una de las reglas ya existe, continuar\xe1n comprobando la siguiente regla en lugar de devolver falso inmediatamente."),(0,t.kt)("p",null,"Por ejemplo, comparemos ",(0,t.kt)("inlineCode",{parentName:"p"},"AddPolicies")," y ",(0,t.kt)("inlineCode",{parentName:"p"},"AddPoliciesEx"),"."),(0,t.kt)("p",null,"Puedes ejecutar y observar el siguiente c\xf3digo copi\xe1ndolo en la prueba bajo casbin."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'func TestDemo(t *testing.T) {\n    e, err := NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n    if err != nil {\n        fmt.Printf("Error, details: %s\\n", err)\n    }\n    e.ClearPolicy()\n    e.AddPolicy("user1", "data1", "read")\n    fmt.Println(e.GetPolicy())\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // policy {"user1", "data1", "read"} now exists\n\n    // Use AddPolicies to add rules in batches\n    ok, _ := e.AddPolicies([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} failed to add because {"user1", "data1", "read"} already exists\n    // AddPolicies returns false and no other policies are checked, even though they may not exist in the existing ruleset\n    // ok == false\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // Use AddPoliciesEx to add rules in batches\n    ok, _ = e.AddPoliciesEx([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} is added successfully\n    // because AddPoliciesEx automatically filters the existing {"user1", "data1", "read"}\n    // ok == true\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n}\n')),(0,t.kt)("h2",{id:"rbac-api"},"RBAC API"),(0,t.kt)("p",null,"Casbin ofrece algunas APIs para que modifiques el modelo RBAC y las pol\xedticas. Si est\xe1s familiarizado con RBAC, puedes usar f\xe1cilmente estas APIs."),(0,t.kt)("p",null,"Aqu\xed, solo te mostramos c\xf3mo usar las APIs RBAC de Casbin y no hablaremos sobre RBAC en s\xed. Puedes obtener m\xe1s detalles ",(0,t.kt)("a",{parentName:"p",href:"/docs/rbac"},"aqu\xed"),"."),(0,t.kt)("p",null,"Usamos el siguiente c\xf3digo para cargar el modelo y las pol\xedticas, justo como antes."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n')),(0,t.kt)("p",null,"Entonces, podemos usar una instancia del Enforcer ",(0,t.kt)("inlineCode",{parentName:"p"},"enforcer")," para acceder a estas APIs."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'roles, err := enforcer.GetRolesForUser("amber")\nfmt.Println(roles) // [admin]\nusers, err := enforcer.GetUsersForRole("admin")\nfmt.Println(users) // [amber abc]\n')),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," devuelve un arreglo que contiene todos los roles que tiene amber. En este ejemplo, amber solo tiene un rol, que es admin, por lo que el arreglo ",(0,t.kt)("inlineCode",{parentName:"p"},"roles")," es ",(0,t.kt)("inlineCode",{parentName:"p"},"[admin]"),". De manera similar, puedes usar ",(0,t.kt)("inlineCode",{parentName:"p"},"GetUsersForRole()")," para obtener los usuarios que pertenecen a un rol. El valor de retorno de esta funci\xf3n tambi\xe9n es un arreglo."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.HasRoleForUser("amber", "admin") // true\n')),(0,t.kt)("p",null,"Puedes usar ",(0,t.kt)("inlineCode",{parentName:"p"},"HasRoleForUser()")," para confirmar si el usuario pertenece al rol. En este ejemplo, amber es miembro de admin, por lo que el valor de retorno de la funci\xf3n es ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("bob", "data2", "write")) // true\nenforcer.DeletePermission("data2", "write")\nfmt.Println(enforcer.Enforce("bob", "data2", "write")) // false\n')),(0,t.kt)("p",null,"Puedes usar ",(0,t.kt)("inlineCode",{parentName:"p"},"DeletePermission()")," para eliminar un permiso."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("alice", "data1", "read")) // true\nenforcer.DeletePermissionForUser("alice", "data1", "read")\nfmt.Println(enforcer.Enforce("alice", "data1", "read")) // false\n')),(0,t.kt)("p",null,"Y usar ",(0,t.kt)("inlineCode",{parentName:"p"},"DeletePermissionForUser()")," para eliminar un permiso para un usuario."),(0,t.kt)("p",null,"Casbin tiene muchas APIs como esta. Sus m\xe9todos de llamada y valores de retorno tienen el mismo estilo que las APIs anteriores. Puedes encontrar estas APIs en los ",(0,t.kt)("a",{parentName:"p",href:"/docs/rbac-api"},"pr\xf3ximos documentos"),"."))}p.isMDXComponent=!0}}]);