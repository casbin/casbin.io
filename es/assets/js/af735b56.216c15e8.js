"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[6933],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(r),b=a,d=m["".concat(c,".").concat(b)]||m[b]||p[b]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8472:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={title:"Casbin Server is Launched!",author:"Helong Zhang",authorTitle:"Casbin Maintainer",authorURL:"http://github.com/BetaCat0",authorImageURL:"https://avatars.githubusercontent.com/BetaCat0"},i=void 0,s={permalink:"/es/blog/2018/08/07/launching-casbin-server",editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/i18n/es/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md",source:"@site/i18n/es/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md",title:"Casbin Server is Launched!",description:"Some of our customers ask if Casbin can be used as a service instead of a library. The answer is YES. Today, we launched the Casbin Server project as a concrete solution for Access Control as a Service.",date:"2018-08-07T00:00:00.000Z",formattedDate:"7 de agosto de 2018",tags:[],readingTime:.69,hasTruncateMarker:!1,authors:[{name:"Helong Zhang",title:"Casbin Maintainer",url:"http://github.com/BetaCat0",imageURL:"https://avatars.githubusercontent.com/BetaCat0"}],frontMatter:{title:"Casbin Server is Launched!",author:"Helong Zhang",authorTitle:"Casbin Maintainer",authorURL:"http://github.com/BetaCat0",authorImageURL:"https://avatars.githubusercontent.com/BetaCat0"},prevItem:{title:"node-Casbin: New Member of Casbin Family",permalink:"/es/blog/2018/08/27/node-casbin"}},c={authorsImageUrls:[void 0]},l=[],u={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Some of our customers ask if Casbin can be used as a service instead of a library. The answer is ",(0,a.kt)("strong",{parentName:"p"},"YES"),". Today, we launched the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-server"},"Casbin Server")," project as a concrete solution for ",(0,a.kt)("strong",{parentName:"p"},"Access Control as a Service"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Casbin Server")," is under active development by our core team. It has several features:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Purely developed in Golang."),(0,a.kt)("li",{parentName:"ul"},"Can manage thousands of Casbin instances, so you can move policy enforcement logic from multiple services into one Casbin Server."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"gRPC")," is used to communicated with Casbin Server. We also consider to add the ",(0,a.kt)("strong",{parentName:"li"},"RESTful")," support in near future."),(0,a.kt)("li",{parentName:"ul"},"A friendly web administrator portal is provided for non-developer administrators to manage all details like Casbin instances, models, policy storage and load balancing.")),(0,a.kt)("p",null,"The source code is hosted on GitHub: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-server"},"https://github.com/casbin/casbin-server")),(0,a.kt)("p",null,"Any issues or pull requests are welcome :)"))}p.isMDXComponent=!0}}]);