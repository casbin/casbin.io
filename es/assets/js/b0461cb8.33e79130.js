"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1227],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>m});var r=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,r,o=function(e,n){if(null==e)return{};var a,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)a=t[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var a=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(a),m=o,b=p["".concat(l,".").concat(m)]||p[m]||u[m]||t;return a?r.createElement(b,i(i({ref:n},d),{},{components:a})):r.createElement(b,i({ref:n},d))}));function m(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=a.length,i=new Array(t);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<t;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8098:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var r=a(7462),o=(a(7294),a(3905));const t={id:"rbac",title:"RBAC",description:"Uso de RBAC en Casbin",keywords:["RBAC","role definition","role hierarchy"],authors:["hsluoyz"]},i=void 0,s={unversionedId:"rbac",id:"rbac",title:"RBAC",description:"Uso de RBAC en Casbin",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/RBAC.mdx",sourceDirName:".",slug:"/rbac",permalink:"/es/docs/rbac",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RBAC.mdx",tags:[],version:"current",frontMatter:{id:"rbac",title:"RBAC",description:"Uso de RBAC en Casbin",keywords:["RBAC","role definition","role hierarchy"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Functions",permalink:"/es/docs/function"},next:{title:"RBAC with Pattern",permalink:"/es/docs/rbac-with-pattern"}},l={},c=[{value:"Definici\xf3n de Rol",id:"definici\xf3n-de-rol",level:2},{value:"Jerarqu\xeda de Roles",id:"jerarqu\xeda-de-roles",level:2},{value:"\xbfC\xf3mo Distinguir un Rol de un Usuario?",id:"c\xf3mo-distinguir-un-rol-de-un-usuario",level:2},{value:"\xbfC\xf3mo Consultar Roles o Permisos Impl\xedcitos?",id:"c\xf3mo-consultar-roles-o-permisos-impl\xedcitos",level:2},{value:"Usando Coincidencia de Patrones en RBAC",id:"usando-coincidencia-de-patrones-en-rbac",level:2},{value:"Administrador de Roles",id:"administrador-de-roles",level:2}],d={toc:c};function u(e){let{components:n,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"definici\xf3n-de-rol"},"Definici\xf3n de Rol"),(0,o.kt)("p",null,"La ",(0,o.kt)("inlineCode",{parentName:"p"},"[role_definition]")," se utiliza para definir las relaciones de herencia de roles en RBAC. Casbin soporta m\xfaltiples instancias de sistemas RBAC, donde los usuarios pueden tener roles y sus relaciones de herencia, y los recursos tambi\xe9n pueden tener roles y sus relaciones de herencia. Estos dos sistemas RBAC no interferir\xe1n entre s\xed."),(0,o.kt)("p",null,"Esta secci\xf3n es opcional. Si no utilizas roles RBAC en el modelo, entonces omite esta secci\xf3n."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[role_definition]\ng = _, _\ng2 = _, _\n")),(0,o.kt)("p",null,"La definici\xf3n de rol anterior muestra que ",(0,o.kt)("inlineCode",{parentName:"p"},"g")," es un sistema RBAC, y ",(0,o.kt)("inlineCode",{parentName:"p"},"g2")," es otro sistema RBAC. ",(0,o.kt)("inlineCode",{parentName:"p"},"_,_")," significa que hay dos partes involucradas en una relaci\xf3n de herencia. En el caso m\xe1s com\xfan, usualmente usas ",(0,o.kt)("inlineCode",{parentName:"p"},"g")," solo si solo necesitas roles para usuarios. Tambi\xe9n puedes usar tanto ",(0,o.kt)("inlineCode",{parentName:"p"},"g")," como ",(0,o.kt)("inlineCode",{parentName:"p"},"g2")," cuando necesitas roles (o grupos) tanto para usuarios como para recursos. Por favor, consulta los ejemplos en ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"rbac","_","model.conf")," y ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_with_resource_roles_model.conf"},"rbac","_","model","_","with","_","resource","_","roles.conf"),"."),(0,o.kt)("p",null,"Casbin almacena el mapeo real de usuario-rol (o mapeo de recurso-rol si est\xe1s utilizando roles en recursos) en la pol\xedtica. Por ejemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csv"},"p, data2_admin, data2, read\ng, alice, data2_admin\n")),(0,o.kt)("p",null,"Significa que ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," hereda/es miembro del rol ",(0,o.kt)("inlineCode",{parentName:"p"},"data2_admin"),". Aqu\xed, ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," puede ser un usuario, un recurso o un rol. Casbin solo lo reconoce como una cadena de caracteres."),(0,o.kt)("p",null,"Entonces, en un comparador, debes verificar el rol como se muestra a continuaci\xf3n:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,o.kt)("p",null,"Significa que el ",(0,o.kt)("inlineCode",{parentName:"p"},"sub")," en la solicitud debe tener el rol ",(0,o.kt)("inlineCode",{parentName:"p"},"sub")," en la pol\xedtica."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"Casbin solo almacena el mapeo de usuario-rol."),(0,o.kt)("li",{parentName:"ol"},"Casbin no verifica si un usuario es un usuario v\xe1lido o un rol es un rol v\xe1lido. Eso debe ser manejado por la autenticaci\xf3n."),(0,o.kt)("li",{parentName:"ol"},"No uses el mismo nombre para un usuario y un rol dentro de un sistema RBAC, porque Casbin reconoce a los usuarios y roles como cadenas de caracteres, y no hay manera de que Casbin sepa si est\xe1s especificando al usuario ",(0,o.kt)("inlineCode",{parentName:"li"},"alice")," o al rol ",(0,o.kt)("inlineCode",{parentName:"li"},"alice"),". Puedes resolverlo simplemente utilizando ",(0,o.kt)("inlineCode",{parentName:"li"},"role_alice"),"."),(0,o.kt)("li",{parentName:"ol"},"Si ",(0,o.kt)("inlineCode",{parentName:"li"},"A")," tiene el rol ",(0,o.kt)("inlineCode",{parentName:"li"},"B"),", y ",(0,o.kt)("inlineCode",{parentName:"li"},"B")," tiene el rol ",(0,o.kt)("inlineCode",{parentName:"li"},"C"),", entonces ",(0,o.kt)("inlineCode",{parentName:"li"},"A")," tiene el rol ",(0,o.kt)("inlineCode",{parentName:"li"},"C"),". Esta transitividad es infinita por ahora."))),(0,o.kt)("admonition",{title:"Convenci\xf3n de Nombres de Tokens",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Convencionalmente, el nombre del token de sujeto en la definici\xf3n de la pol\xedtica es ",(0,o.kt)("inlineCode",{parentName:"p"},"sub")," y se coloca al principio. Ahora, Golang Casbin soporta nombres de tokens personalizados y sus posiciones. Si el nombre del token de sujeto es ",(0,o.kt)("inlineCode",{parentName:"p"},"sub"),", el token de sujeto puede colocarse en cualquier lugar sin ninguna acci\xf3n adicional necesaria. Si el nombre del token de sujeto no es ",(0,o.kt)("inlineCode",{parentName:"p"},"sub"),", se debe llamar a ",(0,o.kt)("inlineCode",{parentName:"p"},"e.SetFieldIndex()")," para ",(0,o.kt)("inlineCode",{parentName:"p"},"constant.SubjectIndex")," despu\xe9s de que el ejecutor se inicialice, independientemente de su posici\xf3n."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"# `subject` here is for sub\n[policy_definition]\np =  obj, act, subject\n")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-go"},'e.SetFieldIndex("p", constant.SubjectIndex, 2) // index starts from 0\nok, err := e.DeleteUser("alice") // without SetFieldIndex, it will raise an error\n'))),(0,o.kt)("h2",{id:"jerarqu\xeda-de-roles"},"Jerarqu\xeda de Roles"),(0,o.kt)("p",null,"El RBAC de Casbin soporta la caracter\xedstica de jerarqu\xeda de roles de RBAC1, lo que significa que si ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," tiene ",(0,o.kt)("inlineCode",{parentName:"p"},"role1"),", y ",(0,o.kt)("inlineCode",{parentName:"p"},"role1")," tiene ",(0,o.kt)("inlineCode",{parentName:"p"},"role2"),", entonces ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," tambi\xe9n tendr\xe1 ",(0,o.kt)("inlineCode",{parentName:"p"},"role2")," y heredar\xe1 sus permisos."),(0,o.kt)("p",null,"Aqu\xed, tenemos un concepto llamado nivel de jerarqu\xeda. Entonces, en este ejemplo, el nivel de jerarqu\xeda es 2. Para el administrador de roles incorporado en Casbin, puedes especificar el nivel m\xe1ximo de jerarqu\xeda. El valor predeterminado es 10. Esto significa que un usuario final como ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," solo puede heredar 10 niveles de roles."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// NewRoleManager is the constructor for creating an instance of the\n// default RoleManager implementation.\nfunc NewRoleManager(maxHierarchyLevel int) rbac.RoleManager {\n    rm := RoleManager{}\n    rm.allRoles = &sync.Map{}\n    rm.maxHierarchyLevel = maxHierarchyLevel\n    rm.hasPattern = false\n\n    return &rm\n}\n")),(0,o.kt)("h2",{id:"c\xf3mo-distinguir-un-rol-de-un-usuario"},"\xbfC\xf3mo Distinguir un Rol de un Usuario?"),(0,o.kt)("p",null,"Casbin no distingue entre roles y usuarios en su RBAC. Ambos se tratan como cadenas de caracteres. Si solo usas un RBAC de un solo nivel (donde un rol nunca ser\xe1 miembro de otro rol), puedes usar ",(0,o.kt)("inlineCode",{parentName:"p"},"e.GetAllSubjects()")," para obtener todos los usuarios y ",(0,o.kt)("inlineCode",{parentName:"p"},"e.GetAllRoles()")," para obtener todos los roles. Listar\xe1n todos los ",(0,o.kt)("inlineCode",{parentName:"p"},"u")," y todos los ",(0,o.kt)("inlineCode",{parentName:"p"},"r"),", respectivamente, en todas las reglas ",(0,o.kt)("inlineCode",{parentName:"p"},"g, u, r"),"."),(0,o.kt)("p",null,"Pero si est\xe1s utilizando un RBAC multinivel (con jerarqu\xeda de roles) y tu aplicaci\xf3n no registra si un nombre (cadena de caracteres) es un usuario o un rol, o tienes un usuario y un rol con el mismo nombre, puedes agregar un prefijo al rol como ",(0,o.kt)("inlineCode",{parentName:"p"},"role::admin")," antes de pasarlo a Casbin. De esta manera, sabr\xe1s si es un rol al verificar este prefijo."),(0,o.kt)("h2",{id:"c\xf3mo-consultar-roles-o-permisos-impl\xedcitos"},"\xbfC\xf3mo Consultar Roles o Permisos Impl\xedcitos?"),(0,o.kt)("p",null,'Cuando un usuario hereda un rol o permiso a trav\xe9s de la jerarqu\xeda de RBAC en lugar de ser asignado directamente en una regla de pol\xedtica, llamamos a este tipo de asignaci\xf3n "impl\xedcita". Para consultar tales relaciones impl\xedcitas, necesitas usar estas dos API: ',(0,o.kt)("inlineCode",{parentName:"p"},"GetImplicitRolesForUser()")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"GetImplicitPermissionsForUser()")," en lugar de ",(0,o.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"GetPermissionsForUser()"),". Para m\xe1s detalles, por favor consulta ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/137"},"este problema de GitHub"),"."),(0,o.kt)("h2",{id:"usando-coincidencia-de-patrones-en-rbac"},"Usando Coincidencia de Patrones en RBAC"),(0,o.kt)("p",null,"Consulta ",(0,o.kt)("a",{parentName:"p",href:"/docs/rbac-with-pattern"},"RBAC with Pattern")),(0,o.kt)("h2",{id:"administrador-de-roles"},"Administrador de Roles"),(0,o.kt)("p",null,"Consulta la secci\xf3n de ",(0,o.kt)("a",{parentName:"p",href:"/docs/role-managers"},"Role Managers")," para m\xe1s detalles."))}u.isMDXComponent=!0}}]);