"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1409],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),u=r,b=p["".concat(d,".").concat(u)]||p[u]||m[u]||o;return t?a.createElement(b,i(i({ref:n},c),{},{components:t})):a.createElement(b,i({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3411:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={id:"model-storage",title:"Model Storage",description:"Model depolama",keywords:["model storage"],authors:["hsluoyz"]},i=void 0,l={unversionedId:"model-storage",id:"model-storage",title:"Model Storage",description:"Model depolama",source:"@site/i18n/tr/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/tr/docs/model-storage",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/ModelStorage.mdx",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Model Storage",description:"Model depolama",keywords:["model storage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Storage",permalink:"/tr/docs/category/storage"},next:{title:"Policy Storage",permalink:"/tr/docs/policy-storage"}},d={},s=[{value:"Modeli .CONF dosyas\u0131ndan y\xfckle",id:"modeli-conf-dosyas\u0131ndan-y\xfckle",level:2},{value:"Koddan model y\xfckle",id:"koddan-model-y\xfckle",level:2},{value:"Dizeden model y\xfckle",id:"dizeden-model-y\xfckle",level:2}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Politikadan farkl\u0131 olarak, model sadece y\xfcklenebilir, kaydedilemez. Modelin dinamik bir bile\u015fen olmad\u0131\u011f\u0131na ve \xe7al\u0131\u015fma zaman\u0131nda de\u011fi\u015ftirilmemesi gerekti\u011fine inan\u0131yoruz, bu y\xfczden modeli depolamaya kaydetmek i\xe7in bir API uygulamad\u0131k."),(0,r.kt)("p",null,"Ancak iyi haberler var. Bir modeli statik veya dinamik olarak y\xfcklemek i\xe7in \xfc\xe7 e\u015fde\u011fer yol sunuyoruz:"),(0,r.kt)("h2",{id:"modeli-conf-dosyas\u0131ndan-y\xfckle"},"Modeli .CONF dosyas\u0131ndan y\xfckle"),(0,r.kt)("p",null,"Bu, Casbin'i kullanman\u0131n en yayg\u0131n yoludur. Ba\u015flang\u0131\xe7 \u200b\u200bseviyesi kullan\u0131c\u0131lar i\xe7in anla\u015f\u0131lmas\u0131 kolayd\u0131r ve Casbin ekibinden yard\u0131m alman\u0131z gerekti\u011finde payla\u015f\u0131m a\xe7\u0131s\u0131ndan uygundur."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".CONF")," dosyas\u0131n\u0131n i\xe7eri\u011fi ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"examples/rbac","_","model.conf")," \u015fu \u015fekildedir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,r.kt)("p",null,"Ard\u0131ndan model dosyas\u0131n\u0131 \u015fu \u015fekilde y\xfckleyebilirsiniz:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,r.kt)("h2",{id:"koddan-model-y\xfckle"},"Koddan model y\xfckle"),(0,r.kt)("p",null,"Model, bir ",(0,r.kt)("inlineCode",{parentName:"p"},".CONF")," dosyas\u0131 kullanmak yerine koddan dinamik olarak ba\u015flat\u0131labilir. \u0130\u015fte RBAC modeli i\xe7in bir \xf6rnek:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Initialize the model from Go code.\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "some(where (p.eft == allow))")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act")\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')),(0,r.kt)("h2",{id:"dizeden-model-y\xfckle"},"Dizeden model y\xfckle"),(0,r.kt)("p",null,"Alternatif olarak, t\xfcm model metnini \xe7ok sat\u0131rl\u0131 bir dizeden y\xfckleyebilirsiniz. Bu yakla\u015f\u0131m\u0131n avantaj\u0131, bir model dosyas\u0131n\u0131 s\xfcrd\xfcrmenize gerek olmamas\u0131d\u0131r."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialize the model from a string.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\nm, _ := model.NewModelFromString(text)\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')))}m.isMDXComponent=!0}}]);