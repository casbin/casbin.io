"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5204],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=l,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(b,o(o({ref:t},p),{},{components:n})):a.createElement(b,o({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9583:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),l=(n(7294),n(3905));const r={id:"pbac",title:"PBAC",description:"Policy-Based Access Control model in Casbin",keywords:["pbac","policy-based access control","dynamic policies","rule-based authorization"],authors:["casbin"]},o=void 0,i={unversionedId:"pbac",id:"pbac",title:"PBAC",description:"Policy-Based Access Control model in Casbin",source:"@site/i18n/th/docusaurus-plugin-content-docs/current/PBAC.mdx",sourceDirName:".",slug:"/pbac",permalink:"/th/docs/pbac",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PBAC.mdx",tags:[],version:"current",frontMatter:{id:"pbac",title:"PBAC",description:"Policy-Based Access Control model in Casbin",keywords:["pbac","policy-based access control","dynamic policies","rule-based authorization"],authors:["casbin"]},sidebar:"docs",previous:{title:"ABAC",permalink:"/th/docs/abac"},next:{title:"BLP",permalink:"/th/docs/blp"}},s={},c=[{value:"What is the PBAC model?",id:"what-is-the-pbac-model",level:2},{value:"PBAC Model Definition",id:"pbac-model-definition",level:2},{value:"Policy and Request Examples",id:"policy-and-request-examples",level:2},{value:"Basic Policy",id:"basic-policy",level:3},{value:"Complex Policy",id:"complex-policy",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"what-is-the-pbac-model"},"What is the PBAC model?"),(0,l.kt)("p",null,"PBAC stands for Policy-Based Access Control. It is a flexible access control model that makes authorization decisions based on policies defined as rules. Unlike traditional access control models that rely on static roles or attributes, PBAC allows for dynamic, rule-based authorization that can evaluate complex conditions using the ",(0,l.kt)("inlineCode",{parentName:"p"},"eval()")," function."),(0,l.kt)("p",null,"In PBAC, access decisions are made by evaluating policies that can include:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Dynamic Rules"),": Policies that evaluate expressions at runtime"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Complex Logic"),": Support for boolean operations, comparisons, and attribute-based conditions"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Contextual Information"),": User attributes, resource properties, and environmental factors"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Business Rules"),": Domain-specific authorization logic that reflects organizational policies")),(0,l.kt)("h2",{id:"pbac-model-definition"},"PBAC Model Definition"),(0,l.kt)("p",null,"Here's the PBAC model configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub_rule, obj_rule, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = eval(p.sub_rule) && eval(p.obj_rule) && r.act == p.act\n")),(0,l.kt)("p",null,"In this model:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"p.sub_rule")," contains the subject rule to be evaluated (e.g., ",(0,l.kt)("inlineCode",{parentName:"li"},"r.sub.Age >= 18"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"p.obj_rule")," contains the object rule to be evaluated (e.g., ",(0,l.kt)("inlineCode",{parentName:"li"},"r.obj.Level >= 1"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"eval()")," function evaluates the policy rules dynamically against the request")),(0,l.kt)("h2",{id:"policy-and-request-examples"},"Policy and Request Examples"),(0,l.kt)("h3",{id:"basic-policy"},"Basic Policy"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Policy:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"p, r.sub.Age >= 18, r.obj.Level >= 1, play\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'{"Age":25}, {"Level":2}, play    # ALLOWED (Age >= 18 and Level >= 1)\n{"Age":16}, {"Level":2}, play    # DENIED (Age < 18)\n{"Age":20}, {"Level":0}, play    # DENIED (Level < 1)\n{"Age":25}, {"Level":2}, read    # DENIED (action doesn\'t match policy)\n')),(0,l.kt)("h3",{id:"complex-policy"},"Complex Policy"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Policy:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},'p, r.sub.Department == "IT" && r.sub.Level >= 3, r.obj.Confidential == false, read\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'{"Department":"IT","Level":3}, {"Confidential":false}, read    # ALLOWED\n{"Department":"IT","Level":2}, {"Confidential":false}, read    # DENIED (Level < 3)\n{"Department":"HR","Level":3}, {"Confidential":false}, read    # DENIED (Department != "IT")\n{"Department":"IT","Level":3}, {"Confidential":true}, read     # DENIED (Confidential == true)\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Code Example:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'e, _ := NewEnforcer("examples/pbac_model.conf", "examples/pbac_policy.csv")\n\n// Enable JSON request support\ne.EnableAcceptJsonRequest(true)\n\n// Define subject and object with attributes\nsubject := `{"Department": "IT", "Level": 3}`\nobject := `{"Confidential": false}`\naction := "read"\n\n// Check permission\nok, _ := e.Enforce(subject, object, action)\nif ok {\n    fmt.Println("Permission granted")\n} else {\n    fmt.Println("Permission denied")\n}\n')))}u.isMDXComponent=!0}}]);