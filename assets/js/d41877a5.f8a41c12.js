"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4441],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9661:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:"data-permissions",title:"Data Permissions",description:"Solutions for data permissions",keywords:["Data Permissions","implicit"]},s=void 0,i={unversionedId:"data-permissions",id:"data-permissions",title:"Data Permissions",description:"Solutions for data permissions",source:"@site/docs/DataPermissions.mdx",sourceDirName:".",slug:"/data-permissions",permalink:"/docs/data-permissions",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/DataPermissions.mdx",tags:[],version:"current",lastUpdatedBy:"YunShu",lastUpdatedAt:1669602614,formattedLastUpdatedAt:"Nov 28, 2022",frontMatter:{id:"data-permissions",title:"Data Permissions",description:"Solutions for data permissions",keywords:["Data Permissions","implicit"]},sidebar:"docs",previous:{title:"RoleManager API",permalink:"/docs/rolemanager-api"},next:{title:"Advanced usage",permalink:"/docs/category/advanced-usage"}},l={},c=[{value:"1. Query implicit roles or permissions",id:"1-query-implicit-roles-or-permissions",level:3},{value:"2. Use <code>BatchEnforce()</code>",id:"2-use-batchenforce",level:3}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},u=p("Tabs"),m=p("TabItem"),d={toc:c};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We have two solutions for data permissions (filtering). Using implicit assignment APIs. Or just use BatchEnforce() API."),(0,a.kt)("h3",{id:"1-query-implicit-roles-or-permissions"},"1. Query implicit roles or permissions"),(0,a.kt)("p",null,"When a user inherits a role or permission via RBAC hierarchy instead of directly assigning them in a policy rule, we call such type of assignment as ",(0,a.kt)("inlineCode",{parentName:"p"},"implicit"),".\nTo query such implicit relations, you need to use these 2 APIs: ",(0,a.kt)("inlineCode",{parentName:"p"},"GetImplicitRolesForUser()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"GetImplicitPermissionsForUser")," instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"GetPermissionsForUser"),". For more details, please see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/137"},"this GitHub issue"),"."),(0,a.kt)("h3",{id:"2-use-batchenforce"},"2. Use ",(0,a.kt)("inlineCode",{parentName:"h3"},"BatchEnforce()")),(0,a.kt)("p",null,"BatchEnforce enforces each request and returns result in a bool array"),(0,a.kt)("p",null,"For example:"),(0,a.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,a.kt)(m,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"boolArray, err := e.BatchEnforce(requests)\n"))),(0,a.kt)(m,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const boolArray = await e.batchEnforce(requests);\n"))),(0,a.kt)(m,{value:"Java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"List<Boolean> boolArray = e.batchEnforce(requests);\n")))))}f.isMDXComponent=!0}}]);