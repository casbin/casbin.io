"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1340],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={id:"multi-threading",title:"Multi-threading",description:"Using Casbin in a multi-threading manner",keywords:["multi-threading"]},o=void 0,c={unversionedId:"multi-threading",id:"multi-threading",title:"Multi-threading",description:"Using Casbin in a multi-threading manner",source:"@site/docs/MultiThreading.mdx",sourceDirName:".",slug:"/multi-threading",permalink:"/docs/multi-threading",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/MultiThreading.mdx",tags:[],version:"current",lastUpdatedBy:"YunShu",lastUpdatedAt:1664628059,formattedLastUpdatedAt:"Oct 1, 2022",frontMatter:{id:"multi-threading",title:"Multi-threading",description:"Using Casbin in a multi-threading manner",keywords:["multi-threading"]},sidebar:"docs",previous:{title:"Advanced usage",permalink:"/docs/category/advanced-usage"},next:{title:"Benchmarks",permalink:"/docs/benchmark"}},s={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"If you use Casbin in a multi-threading manner, you can use the synchronized wrapper of the Casbin enforcer: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/enforcer_synced.go"},"https://github.com/casbin/casbin/blob/master/enforcer_synced.go")," (GoLang) and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-cpp/blob/master/casbin/enforcer_synced.cpp"},"https://github.com/casbin/casbin-cpp/blob/master/casbin/enforcer_synced.cpp")," (C++)."),(0,a.kt)("p",null,"It also supports the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutoLoad")," feature, which means the Casbin enforcer will automatically load the latest policy rules from DB if it has changed. Call ",(0,a.kt)("inlineCode",{parentName:"p"},"StartAutoLoadPolicy()")," to start automatically loading policy periodically and call ",(0,a.kt)("inlineCode",{parentName:"p"},"StopAutoLoadPolicy()")," to stop it."))}u.isMDXComponent=!0}}]);