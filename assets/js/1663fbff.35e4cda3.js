"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[3202],{8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:o},t)}},5064:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(3117),o=n(7294),a=n(2389),i=n(9443);var l=function(){var e=(0,o.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(9558),s=n(6010),c="tabItem_1uMI";function h(e){var t,n,r,a=e.lazy,i=e.block,h=e.defaultValue,d=e.values,p=e.groupId,v=e.className,m=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&"string"==typeof e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:m.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),k=(0,u.lx)(f,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===h?h:null!=(t=null!=h?h:null==(n=m.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=m[0])?void 0:r.props.value;if(null!==y&&!f.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=l(),g=b.tabGroupChoices,w=b.setTabGroupChoices,N=(0,o.useState)(y),E=N[0],z=N[1],x=[],C=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var A=g[p];null!=A&&A!==E&&f.some((function(e){return e.value===A}))&&z(A)}var T=function(e){var t=e.currentTarget,n=x.indexOf(t),r=f[n].value;r!==E&&(C(t),z(r),null!=p&&w(p,r))},I=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=x.indexOf(e.currentTarget)+1;n=x[r]||x[0];break;case"ArrowLeft":var o=x.indexOf(e.currentTarget)-1;n=x[o]||x[x.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":i},v)},f.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,className:(0,s.Z)("tabs__item",c,{"tabs__item--active":E===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:I,onFocus:T,onClick:T},null!=n?n:t)}))),a?(0,o.cloneElement)(m.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},m.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function d(e){var t=(0,a.Z)();return o.createElement(h,(0,r.Z)({key:String(t)},e))}},1187:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=(n(5064),n(8215),["components"]),l={id:"envoy",title:"Authorization of Service Mesh through Envoy"},u=void 0,s={unversionedId:"envoy",id:"envoy",isDocsHomePage:!1,title:"Authorization of Service Mesh through Envoy",description:"Envoy-authz is a middleware of Envoy which performs external RBAC & ABAC authorization through casbin. This middleware uses Envoy's external authorization API through a gRPC server. This proxy would be deployed on any type of envoy-based service meshes like Istio.",source:"@site/docs/EnvoyAuthz.mdx",sourceDirName:".",slug:"/envoy",permalink:"/docs/envoy",editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/EnvoyAuthz.mdx",tags:[],version:"current",frontMatter:{id:"envoy",title:"Authorization of Service Mesh through Envoy"},sidebar:"docs",previous:{title:"Authorization of Kubernetes",permalink:"/docs/k8s"},next:{title:"Admin Portal",permalink:"/docs/admin-portal"}},c=[{value:"Requirements",id:"requirements",children:[],level:2},{value:"Working of Middleware",id:"working-of-middleware",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2},{value:"Integrating to Istio",id:"integrating-to-istio",children:[],level:2}],h={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/envoy-authz"},"Envoy-authz")," is a middleware of Envoy which performs external RBAC & ABAC authorization through casbin. This middleware uses ",(0,a.kt)("a",{parentName:"p",href:"https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/security/ext_authz_filter.html"},"Envoy's external authorization API")," through a gRPC server. This proxy would be deployed on any type of envoy-based service meshes like Istio."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Envoy 1.17+ "),(0,a.kt)("li",{parentName:"ul"},"Istio or any type of service mesh"),(0,a.kt)("li",{parentName:"ul"},"grpc dependencies")),(0,a.kt)("p",null,"Dependencies are managed through ",(0,a.kt)("inlineCode",{parentName:"p"},"go.mod"),"."),(0,a.kt)("h2",{id:"working-of-middleware"},"Working of Middleware"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A client would make a http request."),(0,a.kt)("li",{parentName:"ul"},"Envoy proxy would send that request to grpc server."),(0,a.kt)("li",{parentName:"ul"},"The grpc server would then authorize the request based on casbin policies."),(0,a.kt)("li",{parentName:"ul"},"If authorized, the request would be sent through or else, it gets denied.")),(0,a.kt)("p",null,"The grpc server is based on protocol buffer from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/auth/v2alpha/external_auth.proto"},"external_auth.proto")," from Envoy."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// A generic interface for performing authorization check on incoming\n// requests to a networked service.\nservice Authorization {\n  // Performs authorization check based on the attributes associated with the\n  // incoming request, and returns status `OK` or not `OK`.\n  rpc Check(v2.CheckRequest) returns (v2.CheckResponse);\n}\n")),(0,a.kt)("p",null,"From the above proto file, we have to use ",(0,a.kt)("inlineCode",{parentName:"p"},"Check()")," service in the authorization server."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Define the Casbin policies under config files by following this ",(0,a.kt)("a",{parentName:"li",href:"/docs/how-it-works"},"guide"),".")),(0,a.kt)("p",null,"You can verify/test your policies on online ",(0,a.kt)("a",{parentName:"p",href:"https://casbin.io/editor/"},"casbin-editor"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Start the authorizing server by running:-")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ go build .\n$ ./authz \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Load the envoy configuration:-")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$  envoy -c authz.yaml -l info\n")),(0,a.kt)("p",null,"Once the envoy starts, it will start intercepting requests for the authorization process."),(0,a.kt)("h2",{id:"integrating-to-istio"},"Integrating to Istio"),(0,a.kt)("p",null,"You need to send custom headers, which would contain usernames in the JWT token OF headers for this middleware to work. You can check the official ",(0,a.kt)("a",{parentName:"p",href:"https://istio.io/v1.4/docs/tasks/policy-enforcement/control-headers/"},"Istio docs")," to get more info on modifying ",(0,a.kt)("inlineCode",{parentName:"p"},"Request Headers"),"."))}d.isMDXComponent=!0}}]);