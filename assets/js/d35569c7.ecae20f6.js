"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1593],{9910:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return l},toc:function(){return m},default:function(){return p}});var a=t(3117),i=t(102),o=(t(7294),t(3905)),r=["components"],s={id:"rbac-with-domains",title:"RBAC with Domains"},d=void 0,l={unversionedId:"rbac-with-domains",id:"rbac-with-domains",isDocsHomePage:!1,title:"RBAC with Domains",description:"Role definition with domains tenants",source:"@site/docs/RBACWithDomains.mdx",sourceDirName:".",slug:"/rbac-with-domains",permalink:"/docs/rbac-with-domains",editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RBACWithDomains.mdx",tags:[],version:"current",frontMatter:{id:"rbac-with-domains",title:"RBAC with Domains"},sidebar:"docs",previous:{title:"RBAC with Pattern",permalink:"/docs/rbac-with-pattern"},next:{title:"Casbin RBAC vs. RBAC96",permalink:"/docs/rbac-96"}},m=[{value:"Role definition with domains tenants",id:"role-definition-with-domains-tenants",children:[],level:2}],c={toc:m};function p(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"role-definition-with-domains-tenants"},"Role definition with domains tenants"),(0,o.kt)("p",null,"The RBAC roles in Casbin can be global or domain-specific. Domain-specify roles mean that the roles for a user can be different when the user is at different domains/tenants. This is very useful for large systems like a cloud, as the users are usually in different tenants."),(0,o.kt)("p",null,"The role definition with domains/tenants should be something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[role_definition]\ng = _, _, _\n")),(0,o.kt)("p",null,"The 3rd ",(0,o.kt)("inlineCode",{parentName:"p"},"_")," means the name of domain/tenant, this part should not be changed. Then the policy can be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"p, admin, tenant1, data1, read\np, admin, tenant2, data2, read\n\ng, alice, admin, tenant1\ng, alice, user, tenant2\n")),(0,o.kt)("p",null,"It means ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," role in ",(0,o.kt)("inlineCode",{parentName:"p"},"tenant1")," can read ",(0,o.kt)("inlineCode",{parentName:"p"},"data1"),". And ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," has ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," role in ",(0,o.kt)("inlineCode",{parentName:"p"},"tenant1"),", and has ",(0,o.kt)("inlineCode",{parentName:"p"},"user")," role in ",(0,o.kt)("inlineCode",{parentName:"p"},"tenant2"),". So she can read ",(0,o.kt)("inlineCode",{parentName:"p"},"data1"),". However, since ",(0,o.kt)("inlineCode",{parentName:"p"},"alice")," is not an ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"tenant2"),", she cannot read ",(0,o.kt)("inlineCode",{parentName:"p"},"data2"),"."),(0,o.kt)("p",null,"Then in a matcher, you should check the role as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act\n")),(0,o.kt)("p",null,"Please see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_with_domains_model.conf"},"rbac_with_domains_model.conf")," for examples."))}p.isMDXComponent=!0}}]);