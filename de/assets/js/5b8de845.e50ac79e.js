"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[8272],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,b=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(b,i(i({ref:n},c),{},{components:t})):r.createElement(b,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8148:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(7462),a=(t(7294),t(3905));const o={id:"model-storage",title:"Model Storage",description:"Modellspeicher",keywords:["model storage"],authors:["hsluoyz"]},i=void 0,l={unversionedId:"model-storage",id:"model-storage",title:"Model Storage",description:"Modellspeicher",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/de/docs/model-storage",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/ModelStorage.mdx",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Model Storage",description:"Modellspeicher",keywords:["model storage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Storage",permalink:"/de/docs/category/storage"},next:{title:"Policy Storage",permalink:"/de/docs/policy-storage"}},s={},d=[{value:"Modell aus .CONF-Datei laden",id:"modell-aus-conf-datei-laden",level:2},{value:"Modell aus Code laden",id:"modell-aus-code-laden",level:2},{value:"Modell aus String laden",id:"modell-aus-string-laden",level:2}],c={toc:d};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Im Gegensatz zur Richtlinie kann das Modell nur geladen werden, es kann nicht gespeichert werden. Wir sind der Meinung, dass das Modell kein dynamischer Bestandteil ist und nicht zur Laufzeit ge\xe4ndert werden sollte, daher haben wir keine API implementiert, um das Modell im Speicher zu speichern."),(0,a.kt)("p",null,"Es gibt jedoch gute Nachrichten. Wir bieten drei gleichwertige M\xf6glichkeiten, ein Modell statisch oder dynamisch zu laden:"),(0,a.kt)("h2",{id:"modell-aus-conf-datei-laden"},"Modell aus .CONF-Datei laden"),(0,a.kt)("p",null,"Dies ist die gebr\xe4uchlichste Methode, um Casbin zu verwenden. Es ist leicht zu verstehen f\xfcr Anf\xe4nger und praktisch zum Teilen, wenn Sie Hilfe vom Casbin-Team ben\xf6tigen."),(0,a.kt)("p",null,"Der Inhalt der ",(0,a.kt)("inlineCode",{parentName:"p"},".CONF"),"-Datei ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"examples/rbac","_","model.conf")," ist wie folgt:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("p",null,"Dann k\xf6nnen Sie die Modell-Datei wie folgt laden:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,a.kt)("h2",{id:"modell-aus-code-laden"},"Modell aus Code laden"),(0,a.kt)("p",null,"Das Modell kann dynamisch aus dem Code anstelle einer ",(0,a.kt)("inlineCode",{parentName:"p"},".CONF"),"-Datei initialisiert werden. Hier ist ein Beispiel f\xfcr das RBAC-Modell:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Initialize the model from Go code.\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "some(where (p.eft == allow))")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act")\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')),(0,a.kt)("h2",{id:"modell-aus-string-laden"},"Modell aus String laden"),(0,a.kt)("p",null,"Alternativ k\xf6nnen Sie den gesamten Modelltext aus einem mehrzeiligen String laden. Der Vorteil dieser Methode ist, dass Sie keine Modell-Datei pflegen m\xfcssen."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialize the model from a string.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\nm, _ := model.NewModelFromString(text)\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')))}p.isMDXComponent=!0}}]);