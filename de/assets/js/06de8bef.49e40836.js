"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4863],{3905:(e,n,i)=>{i.d(n,{Zo:()=>c,kt:()=>m});var r=i(7294);function t(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){t(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function d(e,n){if(null==e)return{};var i,r,t=function(e,n){if(null==e)return{};var i,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||(t[i]=e[i]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(t[i]=e[i])}return t}var o=r.createContext({}),s=function(e){var n=r.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},c=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var i=e.components,t=e.mdxType,a=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(i),m=t,f=p["".concat(o,".").concat(m)]||p[m]||u[m]||a;return i?r.createElement(f,l(l({ref:n},c),{},{components:i})):r.createElement(f,l({ref:n},c))}));function m(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var a=i.length,l=new Array(a);l[0]=p;var d={};for(var o in n)hasOwnProperty.call(n,o)&&(d[o]=n[o]);d.originalType=e,d.mdxType="string"==typeof e?e:t,l[1]=d;for(var s=2;s<a;s++)l[s]=i[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,i)}p.displayName="MDXCreateElement"},2027:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var r=i(7462),t=(i(7294),i(3905));const a={id:"api-overview",title:"API Overview",description:"Casbin API-Nutzung",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},l=void 0,d={unversionedId:"api-overview",id:"api-overview",title:"API Overview",description:"Casbin API-Nutzung",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/APIOverview.mdx",sourceDirName:".",slug:"/api-overview",permalink:"/de/docs/api-overview",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/APIOverview.mdx",tags:[],version:"current",frontMatter:{id:"api-overview",title:"API Overview",description:"Casbin API-Nutzung",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"API",permalink:"/de/docs/category/api"},next:{title:"Management API",permalink:"/de/docs/management-api"}},o={},s=[{value:"Enforce API",id:"enforce-api",level:2},{value:"EnforceEx API",id:"enforceex-api",level:2},{value:"Management API",id:"management-api",level:2},{value:"Get API",id:"get-api",level:3},{value:"Add, Delete, Update API",id:"add-delete-update-api",level:3},{value:"AddEx API",id:"addex-api",level:3},{value:"RBAC API",id:"rbac-api",level:2}],c={toc:s};function u(e){let{components:n,...i}=e;return(0,t.kt)("wrapper",(0,r.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Diese \xdcbersicht zeigt Ihnen nur, wie Sie die Casbin APIs verwenden und erkl\xe4rt nicht, wie Casbin installiert wird oder wie es funktioniert. Diese Tutorials finden Sie hier: ",(0,t.kt)("a",{parentName:"p",href:"/docs/get-started"},"Installation von Casbin")," und ",(0,t.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"Wie Casbin funktioniert"),". Wenn Sie also mit der Lekt\xfcre dieses Tutorials beginnen, gehen wir davon aus, dass Sie Casbin vollst\xe4ndig installiert und in Ihren Code importiert haben."),(0,t.kt)("h2",{id:"enforce-api"},"Enforce API"),(0,t.kt)("p",null,"Beginnen wir mit den Enforce APIs von Casbin. Wir werden ein RBAC-Modell aus ",(0,t.kt)("inlineCode",{parentName:"p"},"model.conf")," laden und Richtlinien aus ",(0,t.kt)("inlineCode",{parentName:"p"},"policy.csv")," laden. Sie k\xf6nnen die Syntax des Modells ",(0,t.kt)("a",{parentName:"p",href:"/docs/syntax-for-models"},"hier")," kennenlernen, und wir werden sie in diesem Tutorial nicht diskutieren. Wir gehen davon aus, dass Sie die unten gegebenen Konfigurationsdateien verstehen k\xf6nnen:"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, admin, data1, write\np, admin, data2, read\np, admin, data2, write\np, alice, data1, read\np, bob, data2, write\ng, amber, admin\ng, abc, admin\n")),(0,t.kt)("p",null,"Nachdem Sie die Konfigurationsdateien gelesen haben, lesen Sie bitte den folgenden Code."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// Load information from files.\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    log.Fatalf("Error, detail: %s", err)\n}\nok, err := enforcer.Enforce("alice", "data1", "read")\n')),(0,t.kt)("p",null,"Dieser Code l\xe4dt das Zugriffskontrollmodell und die Richtlinien aus lokalen Dateien. Die Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"casbin.NewEnforcer()")," gibt einen Durchsetzer zur\xfcck. Es erkennt seine beiden Parameter als Dateipfade und l\xe4dt die Dateien von dort. Fehler, die im Prozess aufgetreten sind, werden in der Variablen ",(0,t.kt)("inlineCode",{parentName:"p"},"err")," gespeichert. Dieser Code verwendet den Standardadapter zum Laden des Modells und der Richtlinien, und nat\xfcrlich k\xf6nnen Sie das gleiche Ergebnis mit einem Drittanbieter-Adapter erzielen."),(0,t.kt)("p",null,"Der Code ",(0,t.kt)("inlineCode",{parentName:"p"},'ok, err := enforcer.Enforce("alice", "data1", "read")')," wird verwendet, um Zugriffsberechtigungen zu best\xe4tigen. Wenn Alice auf data1 mit der Leseoperation zugreifen kann, wird der zur\xfcckgegebene Wert von ",(0,t.kt)("inlineCode",{parentName:"p"},"ok")," ",(0,t.kt)("inlineCode",{parentName:"p"},"true")," sein; andernfalls wird er ",(0,t.kt)("inlineCode",{parentName:"p"},"false")," sein. In diesem Beispiel ist der Wert von ",(0,t.kt)("inlineCode",{parentName:"p"},"ok")," ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,t.kt)("h2",{id:"enforceex-api"},"EnforceEx API"),(0,t.kt)("p",null,"Manchmal fragen Sie sich vielleicht, welche Richtlinie die Anfrage erlaubt hat, daher haben wir die Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()")," vorbereitet. Sie k\xf6nnen es so verwenden:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'ok, reason, err := enforcer.EnforceEx("amber", "data1", "read")\nfmt.Println(ok, reason) // true [admin data1 read]\n')),(0,t.kt)("p",null,"Die Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()")," gibt den genauen Richtlinienstring im R\xfcckgabewert ",(0,t.kt)("inlineCode",{parentName:"p"},"reason")," zur\xfcck. In diesem Beispiel ist ",(0,t.kt)("inlineCode",{parentName:"p"},"amber")," eine ",(0,t.kt)("inlineCode",{parentName:"p"},"admin"),"-Rolle, daher hat die Richtlinie ",(0,t.kt)("inlineCode",{parentName:"p"},"p, admin, data1, read")," diese Anfrage auf ",(0,t.kt)("inlineCode",{parentName:"p"},"true")," zugelassen. Die Ausgabe dieses Codes steht im Kommentar."),(0,t.kt)("p",null,"Casbin hat viele APIs bereitgestellt, die dieser \xe4hnlich sind. Diese APIs f\xfcgen den grundlegenden Funktionen einige zus\xe4tzliche Funktionen hinzu. Dazu geh\xf6ren:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"ok, err := enforcer.EnforceWithMatcher(matcher, request)")),(0,t.kt)("p",{parentName:"li"},"Diese Funktion verwendet einen Matcher.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"ok, reason, err := enforcer.EnforceExWithMatcher(matcher, request)")),(0,t.kt)("p",{parentName:"li"},"Dies ist eine Kombination aus ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceWithMatcher()")," und ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),".")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"boolArray, err := enforcer.BatchEnforce(requests)")),(0,t.kt)("p",{parentName:"li"},"Diese Funktion erm\xf6glicht eine Liste von Jobs und gibt ein Array zur\xfcck."))),(0,t.kt)("p",null,"Dies ist ein einfacher Anwendungsfall von Casbin. Sie k\xf6nnen Casbin verwenden, um einen Autorisierungsserver mit diesen APIs zu starten. Wir werden Ihnen einige andere Arten von APIs in den folgenden Abs\xe4tzen zeigen."),(0,t.kt)("h2",{id:"management-api"},"Management API"),(0,t.kt)("h3",{id:"get-api"},"Get API"),(0,t.kt)("p",null,"Diese APIs werden verwendet, um spezifische Objekte in Richtlinien abzurufen. In diesem Beispiel laden wir einen Durchsetzer und holen etwas davon ab."),(0,t.kt)("p",null,"Bitte schauen Sie sich den folgenden Code an:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\nallSubjects := enforcer.GetAllSubjects()\nfmt.Println(allSubjects)\n')),(0,t.kt)("p",null,"\xc4hnlich wie im vorherigen Beispiel werden die ersten vier Zeilen verwendet, um notwendige Informationen aus lokalen Dateien zu laden. Wir werden das hier nicht weiter diskutieren."),(0,t.kt)("p",null,"Der Code ",(0,t.kt)("inlineCode",{parentName:"p"},"allSubjects := enforcer.GetAllSubjects()")," ruft alle Subjekte in der Richtliniendatei ab und gibt sie als Array zur\xfcck. Wir drucken dann dieses Array."),(0,t.kt)("p",null,"Typischerweise sollte die Ausgabe des Codes folgenderma\xdfen aussehen:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-text"},"[admin alice bob]\n")),(0,t.kt)("p",null,"Sie k\xf6nnen auch die Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAllSubjects()")," in ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAllNamedSubjects()")," \xe4ndern, um die Liste der Subjekte zu erhalten, die in der aktuellen benannten Richtlinie erscheinen."),(0,t.kt)("p",null,"Ebenso haben wir ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAll")," Funktionen f\xfcr ",(0,t.kt)("inlineCode",{parentName:"p"},"Objects, Actions, Roles")," vorbereitet. Um auf diese Funktionen zuzugreifen, m\xfcssen Sie einfach das Wort ",(0,t.kt)("inlineCode",{parentName:"p"},"Subject")," im Funktionsnamen durch die gew\xfcnschte Kategorie ersetzen."),(0,t.kt)("p",null,"Zus\xe4tzlich gibt es weitere Getter f\xfcr Richtlinien. Die Methode des Aufrufens und die R\xfcckgabewerte \xe4hneln den oben genannten."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"policy = e.GetPolicy()")," ruft alle Autorisierungsregeln in der Richtlinie ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredPolicy := e.GetFilteredPolicy(0, "alice")')," ruft alle Autorisierungsregeln in der Richtlinie mit spezifizierten Feldfiltern ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedPolicy := e.GetNamedPolicy("p")')," ruft alle Autorisierungsregeln in der benannten Richtlinie ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredNamedPolicy = e.GetFilteredNamedPolicy("p", 0, "bob")')," ruft alle Autorisierungsregeln in der benannten Richtlinie mit spezifizierten Feldfiltern ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"groupingPolicy := e.GetGroupingPolicy()")," ruft alle Rollenvererbungsregeln in der Richtlinie ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredGroupingPolicy := e.GetFilteredGroupingPolicy(0, "alice")')," ruft alle Rollenvererbungsregeln in der Richtlinie mit spezifizierten Feldfiltern ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetNamedGroupingPolicy("g")')," ruft alle Rollenvererbungsregeln in der Richtlinie ab."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetFilteredNamedGroupingPolicy("g", 0, "alice")')," ruft alle Rollenvererbungsregeln in der Richtlinie mit spezifizierten Feldfiltern ab.")),(0,t.kt)("h3",{id:"add-delete-update-api"},"Add, Delete, Update API"),(0,t.kt)("p",null,"Casbin bietet eine Vielzahl von APIs zum dynamischen Hinzuf\xfcgen, L\xf6schen oder \xc4ndern von Richtlinien zur Laufzeit."),(0,t.kt)("p",null,"Der folgende Code zeigt, wie man Richtlinien hinzuf\xfcgt, entfernt und aktualisiert, sowie wie man \xfcberpr\xfcft, ob eine Richtlinie existiert:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// load information from files\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n\n// add a policy and use HasPolicy() to confirm\nenforcer.AddPolicy("added_user", "data1", "read")\nhasPolicy := enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // true, the policy was added successfully\n\n// remove a policy and use HasPolicy() to confirm\nenforcer.RemovePolicy("alice", "data1", "read")\nhasPolicy = enforcer.HasPolicy("alice", "data1", "read")\nfmt.Println(hasPolicy) // false, the policy was removed successfully\n\n// update a policy and use HasPolicy() to confirm\nenforcer.UpdatePolicy([]string{"added_user", "data1", "read"}, []string{"added_user", "data1", "write"})\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // false, the original policy has expired\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "write")\nfmt.Println(hasPolicy) // true, the new policy is in effect\n')),(0,t.kt)("p",null,"Mit diesen APIs k\xf6nnen Sie Ihre Richtlinien dynamisch bearbeiten. Ebenso haben wir \xe4hnliche APIs f\xfcr ",(0,t.kt)("inlineCode",{parentName:"p"},"FilteredPolicy, NamedPolicy, FilteredNamedPolicy, GroupingPolicy, NamedGroupingPolicy, FilteredGroupingPolicy, FilteredNamedGroupingPolicy")," bereitgestellt. Um sie zu verwenden, ersetzen Sie einfach das Wort ",(0,t.kt)("inlineCode",{parentName:"p"},"Policy")," im Funktionsnamen durch die entsprechende Kategorie."),(0,t.kt)("p",null,"Dar\xfcber hinaus k\xf6nnen Sie durch \xc4ndern der Parameter in Arrays eine Stapelbearbeitung Ihrer Richtlinien durchf\xfchren."),(0,t.kt)("p",null,"Betrachten Sie zum Beispiel Funktionen wie diese:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicy([]string{"eve", "data3", "read"}, []string{"eve", "data3", "write"})\n')),(0,t.kt)("p",null,"Wenn wir ",(0,t.kt)("inlineCode",{parentName:"p"},"Policy")," zu ",(0,t.kt)("inlineCode",{parentName:"p"},"Policies")," \xe4ndern und die Parameter wie folgt \xe4ndern:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicies([][]string{{"eve", "data3", "read"}, {"jack", "data3", "read"}}, [][]string{{"eve", "data3", "write"}, {"jack", "data3", "write"}})\n')),(0,t.kt)("p",null,"dann k\xf6nnen wir eine Stapelbearbeitung dieser Richtlinien durchf\xfchren."),(0,t.kt)("p",null,"Die gleichen Operationen k\xf6nnen auch auf ",(0,t.kt)("inlineCode",{parentName:"p"},"GroupingPolicy, NamedGroupingPolicy")," angewendet werden."),(0,t.kt)("h3",{id:"addex-api"},"AddEx API"),(0,t.kt)("p",null,"Casbin bietet die AddEx-Serie von APIs an, um Benutzern zu helfen, Regeln in Chargen hinzuzuf\xfcgen."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},"AddPoliciesEx(rules [][]string) (bool, error)\nAddNamedPoliciesEx(ptype string, rules [][]string) (bool, error)\nAddGroupingPoliciesEx(rules [][]string) (bool, error)\nAddNamedGroupingPoliciesEx(ptype string, rules [][]string) (bool, error)\nSelfAddPoliciesEx(sec string, ptype string, rules [][]string) (bool, error) \n")),(0,t.kt)("p",null,"Der Unterschied zwischen diesen Methoden und den Methoden ohne das Ex-Suffix besteht darin, dass sie, wenn eine der Regeln bereits existiert, die n\xe4chste Regel \xfcberpr\xfcfen, anstatt sofort false zur\xfcckzugeben."),(0,t.kt)("p",null,"Zum Beispiel vergleichen wir ",(0,t.kt)("inlineCode",{parentName:"p"},"AddPolicies")," und ",(0,t.kt)("inlineCode",{parentName:"p"},"AddPoliciesEx"),"."),(0,t.kt)("p",null,"Sie k\xf6nnen den folgenden Code ausf\xfchren und beobachten, indem Sie ihn in den Test unter Casbin kopieren."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'func TestDemo(t *testing.T) {\n    e, err := NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n    if err != nil {\n        fmt.Printf("Error, details: %s\\n", err)\n    }\n    e.ClearPolicy()\n    e.AddPolicy("user1", "data1", "read")\n    fmt.Println(e.GetPolicy())\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // policy {"user1", "data1", "read"} now exists\n\n    // Use AddPolicies to add rules in batches\n    ok, _ := e.AddPolicies([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} failed to add because {"user1", "data1", "read"} already exists\n    // AddPolicies returns false and no other policies are checked, even though they may not exist in the existing ruleset\n    // ok == false\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // Use AddPoliciesEx to add rules in batches\n    ok, _ = e.AddPoliciesEx([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} is added successfully\n    // because AddPoliciesEx automatically filters the existing {"user1", "data1", "read"}\n    // ok == true\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n}\n')),(0,t.kt)("h2",{id:"rbac-api"},"RBAC API"),(0,t.kt)("p",null,"Casbin bietet einige APIs, mit denen Sie das RBAC-Modell und die Richtlinien \xe4ndern k\xf6nnen. Wenn Sie mit RBAC vertraut sind, k\xf6nnen Sie diese APIs leicht verwenden."),(0,t.kt)("p",null,"Hier zeigen wir Ihnen nur, wie Sie die RBAC-APIs von Casbin verwenden und sprechen nicht \xfcber RBAC selbst. Sie k\xf6nnen mehr Details ",(0,t.kt)("a",{parentName:"p",href:"/docs/rbac"},"hier")," erhalten."),(0,t.kt)("p",null,"Wir verwenden den folgenden Code, um das Modell und die Richtlinien zu laden, genau wie zuvor."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n')),(0,t.kt)("p",null,"Dann k\xf6nnen wir eine Instanz des Enforcers ",(0,t.kt)("inlineCode",{parentName:"p"},"enforcer")," verwenden, um auf diese APIs zuzugreifen."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'roles, err := enforcer.GetRolesForUser("amber")\nfmt.Println(roles) // [admin]\nusers, err := enforcer.GetUsersForRole("admin")\nfmt.Println(users) // [amber abc]\n')),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," gibt ein Array zur\xfcck, das alle Rollen enth\xe4lt, die Amber hat. In diesem Beispiel hat Amber nur eine Rolle, die Admin ist, daher ist das Array ",(0,t.kt)("inlineCode",{parentName:"p"},"roles")," ",(0,t.kt)("inlineCode",{parentName:"p"},"[admin]"),". Ebenso k\xf6nnen Sie ",(0,t.kt)("inlineCode",{parentName:"p"},"GetUsersForRole()")," verwenden, um die Benutzer zu erhalten, die zu einer Rolle geh\xf6ren. Der R\xfcckgabewert dieser Funktion ist ebenfalls ein Array."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.HasRoleForUser("amber", "admin") // true\n')),(0,t.kt)("p",null,"Sie k\xf6nnen ",(0,t.kt)("inlineCode",{parentName:"p"},"HasRoleForUser()")," verwenden, um zu best\xe4tigen, ob der Benutzer zur Rolle geh\xf6rt. In diesem Beispiel ist Amber ein Mitglied von Admin, daher ist der R\xfcckgabewert der Funktion ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("bob", "data2", "write")) // true\nenforcer.DeletePermission("data2", "write")\nfmt.Println(enforcer.Enforce("bob", "data2", "write")) // false\n')),(0,t.kt)("p",null,"Sie k\xf6nnen ",(0,t.kt)("inlineCode",{parentName:"p"},"DeletePermission()")," verwenden, um eine Berechtigung zu l\xf6schen."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("alice", "data1", "read")) // true\nenforcer.DeletePermissionForUser("alice", "data1", "read")\nfmt.Println(enforcer.Enforce("alice", "data1", "read")) // false\n')),(0,t.kt)("p",null,"Und verwenden Sie ",(0,t.kt)("inlineCode",{parentName:"p"},"DeletePermissionForUser()"),", um eine Berechtigung f\xfcr einen Benutzer zu l\xf6schen."),(0,t.kt)("p",null,"Casbin hat viele APIs wie diese. Ihre Aufrufmethoden und R\xfcckgabewerte haben den gleichen Stil wie die oben genannten APIs. You can find these APIs in the ",(0,t.kt)("a",{parentName:"p",href:"/docs/rbac-api"},"next documents"),"."))}u.isMDXComponent=!0}}]);