"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[6975],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(t),u=i,b=m["".concat(s,".").concat(u)]||m[u]||c[u]||a;return t?r.createElement(b,l(l({ref:n},d),{},{components:t})):r.createElement(b,l({ref:n},d))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1178:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>b,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={id:"syntax-for-models",title:"Syntax f\xfcr Modelle",description:"Syntax for Models",keywords:["syntax"],authors:["nodece"]},l=void 0,o={unversionedId:"syntax-for-models",id:"syntax-for-models",title:"Syntax f\xfcr Modelle",description:"Syntax for Models",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/SyntaxForModels.mdx",sourceDirName:".",slug:"/syntax-for-models",permalink:"/de/docs/syntax-for-models",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/i18n/de/docusaurus-plugin-content-docs/current/SyntaxForModels.mdx",tags:[],version:"current",frontMatter:{id:"syntax-for-models",title:"Syntax f\xfcr Modelle",description:"Syntax for Models",keywords:["syntax"],authors:["nodece"]},sidebar:"docs",previous:{title:"Unterst\xfctzte Modelle",permalink:"/de/docs/supported-models"},next:{title:"Effektor",permalink:"/de/docs/effector"}},s={},p=[{value:"Anforderungsdefinition",id:"anforderungsdefinition",level:2},{value:"Richtlinien-Definition",id:"richtlinien-definition",level:2},{value:"Richtlinien-Effekt",id:"richtlinien-effekt",level:2},{value:"Matcher",id:"matcher",level:2},{value:"Orders of expressions in matchers",id:"orders-of-expressions-in-matchers",level:3},{value:"Typ mehrerer Abschnitte",id:"typ-mehrerer-abschnitte",level:2},{value:"Special Grammer",id:"special-grammer",level:2},{value:"Ausdruck-Auswerter",id:"ausdruck-auswerter",level:2}],d=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",n)},c=d("Tabs"),m=d("TabItem"),u={toc:p};function b(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ein Modell CONF sollte mindestens vier Bereiche haben: ",(0,i.kt)("inlineCode",{parentName:"p"},"[request_definition], [policy_definition], [policy_effect], [matchers]"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Wenn ein Modell RBAC verwendet, sollte es auch den ",(0,i.kt)("inlineCode",{parentName:"p"},"[role_definition]")," Bereich hinzuf\xfcgen.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ein Modell CONF kann Kommentare enthalten. Die Kommentare beginnen mit ",(0,i.kt)("inlineCode",{parentName:"p"},"#"),", und ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," wird den Rest der Zeile kommentieren."))),(0,i.kt)("h2",{id:"anforderungsdefinition"},"Anforderungsdefinition"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[request_definition]")," ist die Definition f\xfcr die Zugriffsanfrage. Es definiert die Argumente in der ",(0,i.kt)("inlineCode",{parentName:"p"},"e.Enforce(...)")," Funktion."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, handeln\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"sub, obj, act")," repr\xe4sentiert das klassische Dreieck: Zugriff auf Entit\xe4t (Betreff), auf Ressource (Objekt) und Zugriffsmethode (Aktion). Sie k\xf6nnen jedoch Ihr eigenes Anfrageformular anpassen, wie zum Beispiel ",(0,i.kt)("inlineCode",{parentName:"p"},"sub, handeln")," wenn Sie keine bestimmte Ressource angeben m\xfcssen, oder ",(0,i.kt)("inlineCode",{parentName:"p"},"sub, sub2, obj, handeln Sie")," , wenn Sie irgendwie zwei Zugriffseinheiten haben."),(0,i.kt)("h2",{id:"richtlinien-definition"},"Richtlinien-Definition"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[policy_definition]")," ist die Definition f\xfcr die Richtlinie. Er definiert die Bedeutung der Politik. Zum Beispiel haben wir folgendes Modell:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_definition]\np = sub, obj, act\np2 = sub, act\n")),(0,i.kt)("p",null,"Und wir haben folgende Richtlinien (falls in einer Richtlinien-Datei)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"p, alice, data1, read\np2, bob, write-all-objects\n")),(0,i.kt)("p",null,"Jede Zeile in einer Politik wird als politische Regel bezeichnet. Jede Richtlinien-Regel beginnt mit einem ",(0,i.kt)("inlineCode",{parentName:"p"},"Richtlinientyp"),", z. B. ",(0,i.kt)("inlineCode",{parentName:"p"},"p"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"p2"),". Es wird verwendet, um der Richtlinien-Definition zu entsprechen, wenn es mehrere Definitionen gibt. Die obige Richtlinie zeigt die folgende Verbindung. Die Bindung kann im Matcher verwendet werden."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"(alice, data1, read) -> (p.sub, p.obj, p.act)\n(bob, write-all-objects) -> (p2.sub, p2.act)\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Die Elemente einer Regelregel werden immer als",(0,i.kt)("inlineCode",{parentName:"p"},"Zeichenfolge")," betrachtet. Wenn Sie dazu Fragen haben, lesen Sie bitte die Diskussion unter: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/113"},"https://github.com/casbin/casbin/issues/113"))),(0,i.kt)("h2",{id:"richtlinien-effekt"},"Richtlinien-Effekt"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[policy_effect]")," ist die Definition f\xfcr den Policy-Effekt. Es legt fest, ob die Zugriffsanfrage genehmigt werden soll, wenn mehrere Richtlinien-Regeln mit der Anfrage \xfcbereinstimmen. Zum Beispiel erlaubt eine Regel und die andere verweigert."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = some(where (p.eft == allow))\n")),(0,i.kt)("p",null,"Der obige Richtlinien-Effekt bedeutet, wenn es eine \xfcbereinstimmende Richtlinien-Regel von ",(0,i.kt)("inlineCode",{parentName:"p"},"allow"),"gibt, der endg\xfcltige Effekt ist ",(0,i.kt)("inlineCode",{parentName:"p"},"allow")," (aka allow-override). ",(0,i.kt)("inlineCode",{parentName:"p"},"p.eft")," ist der Effekt f\xfcr eine Richtlinie, es kann ",(0,i.kt)("inlineCode",{parentName:"p"},"erlauben")," oder ",(0,i.kt)("inlineCode",{parentName:"p"},"verweigern"),". Es ist optional und der Standardwert ",(0,i.kt)("inlineCode",{parentName:"p"},"erlaubt"),". Da wir es nicht oben angegeben haben, verwendet es den Standardwert."),(0,i.kt)("p",null,"Ein weiteres Beispiel f\xfcr die politische Wirkung ist:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = !some(where (p.eft == deny))\n")),(0,i.kt)("p",null,"Es bedeutet, wenn es keine \xfcbereinstimmenden Regeln f\xfcr",(0,i.kt)("inlineCode",{parentName:"p"},"leugnen"),"gibt, der endg\xfcltige Effekt ist ",(0,i.kt)("inlineCode",{parentName:"p"},"allow")," (aka deny-override). ",(0,i.kt)("inlineCode",{parentName:"p"},"einige")," bedeutet: wenn es eine \xfcbereinstimmende Regel gibt. ",(0,i.kt)("inlineCode",{parentName:"p"},"irgendein")," bedeutet: alle \xfcbereinstimmenden Richtlinien-Regeln (nicht hier verwendet). Der politische Effekt kann sogar mit logischen Ausdr\xfccken verbunden werden:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n")),(0,i.kt)("p",null,"Es bedeutet mindestens eine \xfcbereinstimmende Richtlinien-Regel von",(0,i.kt)("inlineCode",{parentName:"p"},"allow"),", und es gibt keine \xfcbereinstimmende Richtlinien-Regel von",(0,i.kt)("inlineCode",{parentName:"p"},"deny"),". Auf diese Weise werden sowohl die Genehmigungen als auch die Verweigerung von Genehmigungen unterst\xfctzt, und das Leugnen \xfcberschreibt."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Obwohl wir die Syntax des Policy-Effekts wie oben konzipiert haben, verwenden die aktuellen Implementierungen nur hart-kodierte Policy-Effekte, da wir festgestellt haben, dass diese Art von Flexibilit\xe4t nicht sehr notwendig ist. Daher m\xfcssen Sie vorerst einen der integrierten Policy-Effekte verwenden, anstatt Ihren eigenen zu personalisieren.")),(0,i.kt)("p",null,"Die unterst\xfctzten Richtlinien-Effekte sind:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Richtlinien-Effekt"),(0,i.kt)("th",{parentName:"tr",align:null},"Bedeutung"),(0,i.kt)("th",{parentName:"tr",align:null},"Beispiel"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"some(where (p.eft == allow))"),(0,i.kt)("td",{parentName:"tr",align:null},"zulassen"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"ACL, RBAC, etc."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"!some(where (p.eft == deny))"),(0,i.kt)("td",{parentName:"tr",align:null},"verweigeren-\xfcberschreiben"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Verweigerung \xfcberschreiben"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"some(where (p.eft == allow)) && !some(where (p.eft == deny))"),(0,i.kt)("td",{parentName:"tr",align:null},"zulassen und ablehnen"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Zulassen und verweigern"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"priority(p.eft) ","|","|"," deny"),(0,i.kt)("td",{parentName:"tr",align:null},"priorit\xe4t"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Priorit\xe4t"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"subjectPriority(p.eft)"),(0,i.kt)("td",{parentName:"tr",align:null},"priorit\xe4re Basis f\xfcr Rolle"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Betreff-Priorit\xe4t"))))),(0,i.kt)("h2",{id:"matcher"},"Matcher"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[matchers]")," ist die Definition f\xfcr Policy-Matcher. Die Matcher sind Ausdr\xfccke. Er legt fest, wie die Regeln der Politik anhand des Antrags bewertet werden."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act\n")),(0,i.kt)("p",null,"Der obige Matcher ist der einfachste, es bedeutet, dass Subjekt, Objekt und Aktion in einer Anfrage die in einer Regel der Richtlinie entsprechen sollten."),(0,i.kt)("p",null,"Sie k\xf6nnen die Arithmetik wie ",(0,i.kt)("inlineCode",{parentName:"p"},"+, -, *, /")," und logische Operatoren wie ",(0,i.kt)("inlineCode",{parentName:"p"},"&&, |, |, verwenden!")," in \xdcbereinstimmungen."),(0,i.kt)("h3",{id:"orders-of-expressions-in-matchers"},"Orders of expressions in matchers"),(0,i.kt)("p",null,"The order of expressions can greatly affect performance. Look at the following example for details:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'const rbac_models = `\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\n\nfunc TestManyRoles(t *testing.T) {\n\n    m, _ := model.NewModelFromString(rbac_models)\n    e, _ := NewEnforcer(m, false)\n\n    roles := []string{"admin", "manager", "developer", "tester"}\n\n    // 2500 projects\n    for nbPrj := 1; nbPrj < 2500; nbPrj++ {\n        // 4 objects and 1 role per object (so 4 roles)\n        for _, role := range roles {\n            roleDB := fmt.Sprintf("%s_project:%d", role, nbPrj)\n            objectDB := fmt.Sprintf("/projects/%d", nbPrj)\n            e.AddPolicy(roleDB, objectDB, "GET")\n        }\n        jasmineRole := fmt.Sprintf("%s_project:%d", roles[1], nbPrj)\n        e.AddGroupingPolicy("jasmine", jasmineRole)\n    }\n\n    e.AddGroupingPolicy("abu", "manager_project:1")\n    e.AddGroupingPolicy("abu", "manager_project:2499")\n\n    // With same number of policies\n    //  User \'abu\' has only two roles\n    //  User \'jasmine\' has many roles (1 role per policy, here 2500 roles)\n\n    request := func(subject, object, action string) {\n        t0 := time.Now()\n        resp, _ := e.Enforce(subject, object, action)\n        tElapse := time.Since(t0)\n        t.Logf("RESPONSE %-10s %s\\t %s : %5v IN: %+v", subject, object, action, resp, tElapse)\n        if tElapse > time.Millisecond*100 {\n            t.Errorf("More than 100 milliseconds for %s %s %s : %+v", subject, object, action, tElapse)\n        }\n    }\n\n    request("abu", "/projects/1", "GET")        // really fast because only 2 roles in all policies and at the beginning of the casbin_rule table\n    request("abu", "/projects/2499", "GET")     // fast because only 2 roles in all policies\n    request("jasmine", "/projects/1", "GET")    // really fast at the beginning of the casbin_rule table\n\n    request("jasmine", "/projects/2499", "GET") // slow and fail the only 1st time   <<<< pb here\n    request("jasmine", "/projects/2499", "GET") // fast maybe due to internal cache mechanism\n\n    // same issue with non-existing roles\n    // request("jasmine", "/projects/999999", "GET") // slow fail the only 1st time   <<<< pb here\n    // request("jasmine", "/projects/999999", "GET") // fast maybe due to internal cache mechanism\n}\n')),(0,i.kt)("p",null,"The enforce time may be very very long, up to 6 seconds"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"go test -run ^TestManyRoles$ github.com/casbin/casbin/v2 -v\n\n=== RUN   TestManyRoles\n    rbac_api_test.go:598: RESPONSE abu        /projects/1        GET :  true IN: 438.379\xb5s\n    rbac_api_test.go:598: RESPONSE abu        /projects/2499     GET :  true IN: 39.005173ms\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/1        GET :  true IN: 1.774319ms\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/2499     GET :  true IN: 6.164071648s\n    rbac_api_test.go:600: More than 100 milliseconds for jasmine /projects/2499 GET : 6.164071648s\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/2499     GET :  true IN: 12.164122ms\n--- FAIL: TestManyRoles (6.24s)\nFAIL\nFAIL    github.com/casbin/casbin/v2     6.244s\nFAIL\n")),(0,i.kt)("p",null,"However, if we can adjust the order of the expressions in matchers, and put more time-consuming expressions like functions behind, the execution time will be very short. Changing the order of expressions in matchers in the above example to"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = r.obj == p.obj && g(r.sub, p.sub) && r.act == p.act\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"go test -run ^TestManyRoles$ github.com/casbin/casbin/v2 -v\n=== RUN   TestManyRoles\n    rbac_api_test.go:599: RESPONSE abu        /projects/1        GET :  true IN: 786.635\xb5s\n    rbac_api_test.go:599: RESPONSE abu        /projects/2499     GET :  true IN: 4.933064ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/1        GET :  true IN: 2.908534ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/2499     GET :  true IN: 7.292963ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/2499     GET :  true IN: 6.168307ms\n--- PASS: TestManyRoles (0.05s)\nPASS\nok      github.com/casbin/casbin/v2     0.053s\n")),(0,i.kt)("h2",{id:"typ-mehrerer-abschnitte"},"Typ mehrerer Abschnitte"),(0,i.kt)("p",null,"Wenn Sie mehrere Richtlinien-Definitionen oder mehrere \xdcbereinstimmungen ben\xf6tigen, k\xf6nnen Sie wie ",(0,i.kt)("inlineCode",{parentName:"p"},"p2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"m2")," verwenden. Tats\xe4chlich k\xf6nnen alle oben genannten vier Abschnitte mehrere Typen verwenden und die Syntax ist ",(0,i.kt)("inlineCode",{parentName:"p"},"r"),"+number, wie ",(0,i.kt)("inlineCode",{parentName:"p"},"r2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"e2"),". Standardm\xe4\xdfig sollten diese vier Abschnitte einem entsprechen. So wie Ihr ",(0,i.kt)("inlineCode",{parentName:"p"},"r2")," verwendet nur einen Matcher ",(0,i.kt)("inlineCode",{parentName:"p"},"m2")," , um Richtlinien ",(0,i.kt)("inlineCode",{parentName:"p"},"p2")," abzugleichen."),(0,i.kt)("p",null,"Sie k\xf6nnen ",(0,i.kt)("inlineCode",{parentName:"p"},"EnforceContext")," als ersten Parameter von ",(0,i.kt)("inlineCode",{parentName:"p"},"enforce")," Methode durchf\xfchren, um die Typen anzugeben, der ",(0,i.kt)("inlineCode",{parentName:"p"},"Vollstreckungskontext")," ist wie folgt"),(0,i.kt)(c,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(m,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'EnforceContext{"r2","p2","e2","m2"}\ntype EnforceContext struct {\n    RType string\n    PType string\n    EType string\n    MType string\n}\n'))),(0,i.kt)(m,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const enforceContext = new EnforceContext('r2', 'p2', 'e2', 'm2');\nclass EnforceContext {\n  constructor(rType, pType, eType, mType) {\n    this.pType = pType;\n    this.eType = eType;\n    this.mType = mType;\n    this.rType = rType;\n  }\n}\n"))),(0,i.kt)(m,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'EnforceContext enforceContext = new EnforceContext("2");\npublic class EnforceContext {\n    private String pType;\n    private String eType;\n    private String mType;\n    private String rType;\n    public EnforceContext(String suffix) {\n      this.pType = "p" + suffix;\n      this.eType = "e" + suffix;\n      this.mType = "m" + suffix;\n      this.rType = "r" + suffix;\n    }\n}\n')))),(0,i.kt)("p",null,"Beispiel Verwendung, siehe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/multiple_policy_definitions_model.conf"},"Modell")," und ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/multiple_policy_definitions_policy.csv"},"Richtlinie"),", die Anfrage ist wie folgt"),(0,i.kt)(c,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(m,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// Pass in einem Suffix als Parameter an NewEnforceContext,wie 2 oder 3 und es wird r2,p2,etc..\nenforceContext := NewEnforceContext("2")\n// Sie k\xf6nnen auch einen bestimmten Typ individuell\nenforceContext angeben. Typ = "e"\n// Nicht in EnforceContext,die Standardeinstellung ist r,p,e,m\ne. nforce("alice", "data2", "read") // true\n// durchlaufen in EnforceContext\ne. nforce(enforceContext, struct{ Age int }{Age: 70}, "/data1", "read") //false\ne. nforce(enforceContext, struct{ Age int }{Age: 30}, "/data1", "read") //true\n'))),(0,i.kt)(m,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'\n// Pass in einem Suffix als Parameter an NewEnforceContext,wie 2 oder 3 und es wird r2,p2,etc..\nconst enforceContext = new NewEnforceContext(\'2\');\n\n// You can also specify a certain type individually\nenforceContext.eType = "e"\n\n// Don\'t pass in EnforceContext,the default is r,p,e,m\ne.Enforce("alice", "data2", "read")     // true\n\n// pass in EnforceContext\ne.Enforce(enforceContext, {Age: 70}, "/data1", "read")      //false\ne.Enforce(enforceContext, {Age: 30}, "/data1", "read")      //true\n'))),(0,i.kt)(m,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Pass in einem Suffix als Parameter an NewEnforceContext,wie 2 oder 3 und es wird r2, p2, etc..\nEnforceContext enforceContext = new EnforceContext("2");\n// Sie k\xf6nnen auch einen bestimmten Typ individuell\nenforceContext angeben. eteType("e");\n// EnforceContext nicht \xfcbergeben, Standard ist r, p, e, m\ne. nforce("alice", "data2", "read"); // true\n// EnforceContext \xfcbergeben\n// TestEvalRule befindet sich in https://github. om/casbin/jcasbin/blob/master/src/test/java/org/casbin/jcasbin/main/AbacAPIUnitTest.java#L56\ne.enforce(enforceContext, new AbacAPIUnitTest.TestEvalRule("alice", 70), "/data1", "read"); // false\ne.enforce(enforceContext, new AbacAPIUnitTest.TestEvalRule("alice", 30), "/data1", "read"); // true true \n e.enforce(enforceContext, new AbacAPIUnitTestEval.TestEvalRule("alice", 30), "/data1", "read"); // true true true true\n')))),(0,i.kt)("h2",{id:"special-grammer"},"Special Grammer"),(0,i.kt)("p",null,"Sie k\xf6nnen auch ",(0,i.kt)("inlineCode",{parentName:"p"},"in"),"verwenden, der einzige Operator mit einem Textnamen. Dieser Operator pr\xfcft das Array auf der rechten Seite, um zu sehen, ob es einen Wert enth\xe4lt, der gleich dem linken Wert ist. Die Gleichberechtigung wird durch den Operator == bestimmt und diese Bibliothek pr\xfcft nicht die Typen zwischen den Werten. Alle zwei Werte, wenn sie an die Schnittstelle gewirkt werden {}, und immer noch auf die Gleichberechtigung mit == \xfcberpr\xfcft werden k\xf6nnen, werden wie erwartet funktionieren. Beachten Sie, dass Sie einen Parameter f\xfcr das Array verwenden k\xf6nnen, aber es muss eine ",(0,i.kt)("inlineCode",{parentName:"p"},"[]Schnittstelle sein{}")," sein."),(0,i.kt)("p",null,"Verweisen Sie auch auf ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/rbac_model_matcher_using_in_op.conf"},"rbac_model_matcher_using_in_op"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/keyget2_model.conf"},"keyget2_model")," und ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/keyget_model.conf"},"keyget_model")),(0,i.kt)("p",null,"Beispiel:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj\n...\n[matchers]\nm = r.sub.Name in (r.obj.Admins)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'e.Enforce(Sub{Name: "alice"}, Obj{Name: "a book", Admins: []interface{}{"alice", "bob"}})\n')),(0,i.kt)("h2",{id:"ausdruck-auswerter"},"Ausdruck-Auswerter"),(0,i.kt)("p",null,"Die Matcher-Auswertung in Casbin wird von Auswertern in jeder Sprache implementiert. Casbin integriert ihre Kompetenzen zur Bereitstellung der einheitlichen PERM-Sprache. Abgesehen von all der hier zur Verf\xfcgung gestellten Modellsyntax k\xf6nnen diese Auswerter zus\xe4tzliche Funktionalit\xe4t bieten, die m\xf6glicherweise nicht von einer anderen Sprache oder Implementierung unterst\xfctzt wird. Die Nutzung erfolgt auf eigene Gefahr."),(0,i.kt)("p",null,"Die Auswerter f\xfcr jede Casbin-Implementierung sind:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Implementierung"),(0,i.kt)("th",{parentName:"tr",align:null},"Sprache"),(0,i.kt)("th",{parentName:"tr",align:null},"Expression evaluator"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Golang"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/Knetic/govaluate"},"https://github.com/Knetic/govaluate"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"jCasbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Jalta"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/killme2008/aviator"},"https://github.com/killme2008/aviator"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Node-Casbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Node.js"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://de.github.com/donmccurdy/expression-eval"},"https://de.github.com/donmccurdy/expression-eval"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PHP-Casbin"),(0,i.kt)("td",{parentName:"tr",align:null},"PHP"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/symfony/expression-language"},"https://github.com/symfony/expression-language"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PyCasbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Python"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/danthedeckie/simpleeval"},"https://github.com/danthedeckie/simpleeval"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Casbin.NET"),(0,i.kt)("td",{parentName:"tr",align:null},"C#"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/davideicardi/DynamicExpresso"},"https://github.com/davideicardi/DynamicExpresso"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Casbin4D"),(0,i.kt)("td",{parentName:"tr",align:null},"Jennifer"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/casbin4d/Casbin4D/tree/master/SourceCode/Common/Third%20Party/TExpressionParser"},"https://github.com/casbin4d/Casbin4D/tree/master/SourceCode/Common/Third%20Party/TExpressionParser"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"casbin-rs"),(0,i.kt)("td",{parentName:"tr",align:null},"Rost"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://de.github.com/jonathandturner/rhai"},"https://de.github.com/jonathandturner/rhai"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"casbin-cpp"),(0,i.kt)("td",{parentName:"tr",align:null},"C++"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/ArashPartow/exprtk"},"https://github.com/ArashPartow/exprtk"))))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Wenn Sie Probleme mit der Leistung von Casbin haben, wird dies wahrscheinlich durch die geringe Effizienz des Ausdrucks Auswerter verursacht. Sie k\xf6nnen sowohl Probleme an Kasbin oder den Ausdruck-Auswerter direkt senden um Ratschl\xe4ge zu beschleunigen. Siehe ",(0,i.kt)("a",{parentName:"p",href:"/docs/benchmark"},"Benchmarks")," Abschnitt f\xfcr Details.")))}b.isMDXComponent=!0}}]);