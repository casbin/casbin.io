"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[8272],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,b=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return t?o.createElement(b,l(l({ref:n},c),{},{components:t})):o.createElement(b,l({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var d=2;d<r;d++)l[d]=t[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8148:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var o=t(7462),a=(t(7294),t(3905));const r={id:"model-storage",title:"Modellspeicher",description:"Model storage",keywords:["model storage"],authors:["hsluoyz"]},l=void 0,i={unversionedId:"model-storage",id:"model-storage",title:"Modellspeicher",description:"Model storage",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/de/docs/model-storage",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/ModelStorage.mdx",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Modellspeicher",description:"Model storage",keywords:["model storage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Storage",permalink:"/de/docs/category/storage"},next:{title:"Richtlinien-Speicher",permalink:"/de/docs/policy-storage"}},s={},d=[{value:"Modell aus .CONF-Datei laden",id:"modell-aus-conf-datei-laden",level:2},{value:"Modell aus Code laden",id:"modell-aus-code-laden",level:2},{value:"Modell aus String laden",id:"modell-aus-string-laden",level:2}],c={toc:d};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Unlike the policy, the model can only be loaded, it cannot be saved. We believe that the model is not a dynamic component and should not be modified at runtime, so we have not implemented an API to save the model into storage."),(0,a.kt)("p",null,"However, there is good news. We provide three equivalent ways to load a model, either statically or dynamically:"),(0,a.kt)("h2",{id:"modell-aus-conf-datei-laden"},"Modell aus .CONF-Datei laden"),(0,a.kt)("p",null,"Dies ist die h\xe4ufigste Art Casbin zu benutzen. It is easy to understand for beginners and convenient for sharing when you need help from the Casbin team."),(0,a.kt)("p",null,"The content of the ",(0,a.kt)("inlineCode",{parentName:"p"},".CONF")," file ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"examples/rbac_model.conf")," is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("p",null,"Then you can load the model file as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,a.kt)("h2",{id:"modell-aus-code-laden"},"Modell aus Code laden"),(0,a.kt)("p",null,"The model can be initialized dynamically from code instead of using a ",(0,a.kt)("inlineCode",{parentName:"p"},".CONF")," file. Hier ist ein Beispiel f\xfcr das RBAC-Modell:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Modell vom Go-Code initialisieren\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "some(where (p. ft == allow))")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p. bj && r.act == p.act")\n\n// Regeln aus dem .CSV-Datei-Adapter laden.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Erstellt den Durchsetzer.\ne := casbin.NewEnforcer(m, a)\n')),(0,a.kt)("h2",{id:"modell-aus-string-laden"},"Modell aus String laden"),(0,a.kt)("p",null,"Alternatively, you can load the entire model text from a multi-line string. The advantage of this approach is that you do not need to maintain a model file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialize the model from a string.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = irgendwo (p. ft == allow))\n\n[matchers]\nm = g(r.sub, p. ub) && r.obj == p.obj && r.act == p. ct\n`\nm, _ := model.NewModelFromString(text)\n\n// Richtlinien aus dem .CSV-Datei-Adapter laden.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Erstellt den Durchsetzer.\ne := casbin.NewEnforcer(m, a)\n')))}p.isMDXComponent=!0}}]);