"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2246],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=l(t),m=i,h=p["".concat(u,".").concat(m)]||p[m]||c[m]||a;return t?r.createElement(h,s(s({ref:n},d),{},{components:t})):r.createElement(h,s({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=p;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={id:"k8s",title:"Authorization of Kubernetes",description:"Kubernetes (k8s) RBAC & ABAC Autorisierungsmiddleware basierend auf Casbin",keywords:["Kubernetes authorization","Kubernetes RBAC","Kubernetes ABAC","K8s-authz"],authors:["hsluoyz"]},s=void 0,o={unversionedId:"k8s",id:"k8s",title:"Authorization of Kubernetes",description:"Kubernetes (k8s) RBAC & ABAC Autorisierungsmiddleware basierend auf Casbin",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/K8sAuthz.mdx",sourceDirName:".",slug:"/k8s",permalink:"/de/docs/k8s",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/K8sAuthz.mdx",tags:[],version:"current",frontMatter:{id:"k8s",title:"Authorization of Kubernetes",description:"Kubernetes (k8s) RBAC & ABAC Autorisierungsmiddleware basierend auf Casbin",keywords:["Kubernetes authorization","Kubernetes RBAC","Kubernetes ABAC","K8s-authz"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Performance Optimization",permalink:"/de/docs/performance"},next:{title:"Admission Webhook for K8s",permalink:"/de/docs/k8s-gatekeeper"}},u={},l=[{value:"Anforderungen",id:"anforderungen",level:2},{value:"Verwendung",id:"verwendung",level:2}],d={toc:l};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz"},"K8s-authz")," ist eine auf Casbin basierende Kubernetes (k8s) Autorisierungsmiddleware, die RBAC (Role-Based Access Control) und ABAC (Attribute-Based Access Control) zur Durchsetzung von Richtlinien nutzt. Diese Middleware integriert sich mit dem K8s Validierungs-Admission-Webhook, um die von Casbin definierten Richtlinien f\xfcr jede Anfrage an K8s-Ressourcen zu validieren. Benutzerdefinierte Zulassungscontroller werden mit Kubernetes unter Verwendung des ",(0,i.kt)("inlineCode",{parentName:"p"},"ValidatingAdmissionWebhook")," registriert, um Validierungen an Anfrageobjekten durchzuf\xfchren, die vom API-Server weitergeleitet wurden, und eine Antwort zu liefern, ob die Anfrage zugelassen oder abgelehnt werden soll."),(0,i.kt)("p",null,"Um zu bestimmen, wann eingehende Anfragen an den Zulassungscontroller gesendet werden sollen, wurde ein Validierungs-Webhook implementiert. Dieser Webhook leitet Anfragen f\xfcr jede Art von K8s-Ressource oder Unterressource weiter und f\xfchrt eine Richtlinien\xfcberpr\xfcfung durch. Benutzer d\xfcrfen nur dann Operationen an diesen Ressourcen durchf\xfchren, wenn sie vom Casbin-Durchsetzer autorisiert sind. Der ",(0,i.kt)("a",{parentName:"p",href:"/docs/get-started#new-a-casbin-enforcer"},"Durchsetzer")," \xfcberpr\xfcft die Rollen des Benutzers, wie sie in den Richtlinien definiert sind. Das K8s-Cluster ist das Einsatzziel f\xfcr diese Middleware."),(0,i.kt)("h2",{id:"anforderungen"},"Anforderungen"),(0,i.kt)("p",null,"Stellen Sie vor dem Fortfahren sicher, dass Sie folgendes haben:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ein laufendes Kubernetes-Cluster. Sie k\xf6nnen ein lokales Cluster mit Docker einrichten oder ein komplettes Kubernetes-\xd6kosystem auf Ihrem Server einrichten. F\xfcr detaillierte Anweisungen, beziehen Sie sich auf diesen ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/create-cluster/cluster-intro/"},"Leitfaden")," zur Einrichtung eines lokalen Kubernetes-Clusters auf Windows oder diesen ",(0,i.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-create-a-kubernetes-cluster-using-kubeadm-on-ubuntu-18-04"},"Leitfaden")," zur Einrichtung eines Clusters auf Linux."),(0,i.kt)("li",{parentName:"ul"},"Kubectl CLI. Anweisungen zur Installation von Kubectl auf Windows finden Sie ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-windows/"},"hier"),", und f\xfcr Linux ",(0,i.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/"},"hier"),"."),(0,i.kt)("li",{parentName:"ul"},"OpenSSL")),(0,i.kt)("h2",{id:"verwendung"},"Verwendung"),(0,i.kt)("p",null,"Befolgen Sie diese Schritte, um K8s-authz zu verwenden:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Generieren Sie Zertifikate und Schl\xfcssel f\xfcr jeden Benutzer mit OpenSSL. F\xfchren Sie das untenstehende Skript aus:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./gen_cert.sh\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Erstellen Sie das Docker-Image aus der ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/Dockerfile"},"Dockerfile")," manuell, indem Sie den folgenden Befehl ausf\xfchren. Vergessen Sie nicht, die Build-Version im Befehl und in der Bereitstellungs-",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/718f58c46e3dbf79063b5b1c18348c2fee5de9e9/manifests/deployment.yaml#L18"},"Datei")," entsprechend zu \xe4ndern."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t casbin/k8s_authz:0.1 .\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Definieren Sie die Casbin-Richtlinien in den ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/config/model.conf"},"model.conf")," und ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/config/policy.csv"},"policy.csv")," Dateien. F\xfcr weitere Informationen dar\xfcber, wie diese Richtlinien funktionieren, verweisen Sie auf die ",(0,i.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"Dokumentation"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Vor der Bereitstellung k\xf6nnen Sie die Ports in der ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/main.go"},"main.go")," Datei sowie in der Validierungs-Webhook-Konfigurations-",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/manifests/deployment.yaml"},"Datei")," basierend auf Ihren spezifischen Anforderungen \xe4ndern.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Bereitstellen des Validierungscontrollers und des Webhooks auf dem Kubernetes-Cluster durch Ausf\xfchren des folgenden Befehls:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f deployment.yaml\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"F\xfcr einen Produktionsserver wird empfohlen, ein Kubernetes ",(0,i.kt)("inlineCode",{parentName:"p"},"secret")," zu erstellen, um die Zertifikate zu sichern:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret generic casbin -n default \\\n  --from-file=key.pem=certs/casbin-key.pem \\\n  --from-file=cert.pem=certs/casbin-crt.pem\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Nach Abschluss der oben genannten Schritte m\xfcssen Sie das Zertifikatsverzeichnis in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ashish493/k8s-authz/blob/3560551427c0431a9d4594ad1206f084ede37c49/main.go#L26"},"main.go")," und den ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ashish493/k8s-authz/blob/3560551427c0431a9d4594ad1206f084ede37c49/manifests/deployment.yaml#L22"},"Manifesten")," mit dem Verzeichnis des erstellten ",(0,i.kt)("inlineCode",{parentName:"p"},"secret")," aktualisieren."))),(0,i.kt)("p",null,"Jetzt sollte der Server hochgefahren und betriebsbereit sein, bereit, Anfragen an K8s-Ressourcen zu validieren und Richtlinien entsprechend durchzusetzen."))}c.isMDXComponent=!0}}]);