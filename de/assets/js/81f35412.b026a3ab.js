"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[7391],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,f=m["".concat(c,".").concat(u)]||m[u]||p[u]||o;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},466:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={id:"enforcers",title:"Enforcers",description:"The Enforcer is the main structure in Casbin that acts as an interface for users to perform operations on policy rules and models.",keywords:["enforcer","supported enforcers"],authors:["Abingcbc"]},i=void 0,s={unversionedId:"enforcers",id:"enforcers",title:"Enforcers",description:"The Enforcer is the main structure in Casbin that acts as an interface for users to perform operations on policy rules and models.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/Enforcers.mdx",sourceDirName:".",slug:"/enforcers",permalink:"/de/docs/enforcers",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/Enforcers.mdx",tags:[],version:"current",frontMatter:{id:"enforcers",title:"Enforcers",description:"The Enforcer is the main structure in Casbin that acts as an interface for users to perform operations on policy rules and models.",keywords:["enforcer","supported enforcers"],authors:["Abingcbc"]},sidebar:"docs",previous:{title:"Extensions",permalink:"/de/docs/category/extensions"},next:{title:"Adapter",permalink:"/de/docs/adapters"}},c={},l=[{value:"Supported Enforcers",id:"supported-enforcers",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},p=d("Tabs"),m=d("TabItem"),u={toc:l};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer")," is the main structure in Casbin. It acts as an interface for users to perform operations on policy rules and models."),(0,a.kt)("h2",{id:"supported-enforcers"},"Supported Enforcers"),(0,a.kt)("p",null,"A complete list of Casbin enforcers is provided below. Any 3rd-party contribution on a new enforcer is welcomed. Please inform us, and we will add it to this list :)"),(0,a.kt)(p,{groupId:"langs",mdxType:"Tabs"},(0,a.kt)(m,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Enforcer"),(0,a.kt)("th",{parentName:"tr",align:null},"Author"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/enforcer.go"},"Enforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," is the basic structure for users to interact with Casbin policies and models. You can find more details about the ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," API ",(0,a.kt)("a",{parentName:"td",href:"/docs/management-api"},"here"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/enforcer_cached.go"},"CachedEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"CachedEnforcer")," is based on the ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," and supports caching the evaluation result of a request in memory using a map. It provides the ability to clear caches within a specified expiration time. Moreover, it guarantees thread safety with a Read-Write lock. You can use ",(0,a.kt)("inlineCode",{parentName:"td"},"EnableCache")," to enable caching of evaluation results (default is enabled). The other API methods of ",(0,a.kt)("inlineCode",{parentName:"td"},"CachedEnforcer")," are the same as ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/enforcer_distributed.go"},"DistributedEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"DistributedEnforcer")," supports multiple instances in distributed clusters. It wraps the ",(0,a.kt)("inlineCode",{parentName:"td"},"SyncedEnforcer")," for the dispatcher. You can find more details about the dispatcher ",(0,a.kt)("a",{parentName:"td",href:"/docs/dispatchers#distributedenforcer"},"here"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/enforcer_synced.go"},"SyncedEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"SyncedEnforcer")," is based on the ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," and provides synchronized access. It is thread-safe.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/enforcer_cached_synced.go"},"SyncedCachedEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"SyncedCachedEnforcer")," wraps the ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," and provides decision sync cache."))))),(0,a.kt)(m,{value:"Python",label:"Python",default:!0,mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Enforcer"),(0,a.kt)("th",{parentName:"tr",align:null},"Author"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/pycasbin/blob/master/casbin/enforcer.py"},"Enforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," is the basic structure for users to interact with Casbin policies and models. You can find more details about the ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," API ",(0,a.kt)("a",{parentName:"td",href:"/docs/management-api"},"here"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/pycasbin/blob/master/casbin/distributed_enforcer.py"},"DistributedEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"DistributedEnforcer")," supports multiple instances in distributed clusters. It wraps the ",(0,a.kt)("inlineCode",{parentName:"td"},"SyncedEnforcer")," for the dispatcher. You can find more details about the dispatcher ",(0,a.kt)("a",{parentName:"td",href:"/docs/dispatchers#distributedenforcer"},"here"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/pycasbin/blob/master/casbin/synced_enforcer.py"},"SyncedEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"SyncedEnforcer")," is based on the ",(0,a.kt)("inlineCode",{parentName:"td"},"Enforcer")," and provides synchronized access. It is thread-safe.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/pycasbin/blob/master/casbin/async_enforcer.py"},"AsyncEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"AsyncEnforcer")," provides async API.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/pycasbin/blob/master/casbin/fast_enforcer.py"},"FastEnforcer")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The ",(0,a.kt)("inlineCode",{parentName:"td"},"FastEnforcer")," uses a new model which is 50x faster than the normal model. You can find more ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/wakemaster39/fastbin"},"here"))))))))}f.isMDXComponent=!0}}]);