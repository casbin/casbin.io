"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2790],{3905:function(e,n,a){a.d(n,{Zo:function(){return c},kt:function(){return m}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),u=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=u(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return a?t.createElement(b,i(i({ref:n},c),{},{components:a})):t.createElement(b,i({ref:n},c))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:function(e,n,a){a.d(n,{Z:function(){return i}});var t=a(7294),r=a(6010),l="tabItem_Ymn6";function i(e){var n=e.children,a=e.hidden,i=e.className;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},n)}},5488:function(e,n,a){a.d(n,{Z:function(){return m}});var t=a(3117),r=a(7294),l=a(6010),i=a(2389),o=a(7392),s=a(7094),u=a(2466),c="tabList__CuJ",d="tabItem_LNqP";function p(e){var n,a,i=e.lazy,p=e.block,m=e.defaultValue,b=e.values,f=e.groupId,g=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=b?b:k.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,o.l)(h,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(n=null!=m?m:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?n:k[0].props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),T=N.tabGroupChoices,w=N.setTabGroupChoices,x=(0,r.useState)(y),E=x[0],I=x[1],z=[],j=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var Z=T[f];null!=Z&&Z!==E&&h.some((function(e){return e.value===Z}))&&I(Z)}var P=function(e){var n=e.currentTarget,a=z.indexOf(n),t=h[a].value;t!==E&&(j(n),I(t),null!=f&&w(f,String(t)))},C=function(e){var n,a=null;switch(e.key){case"ArrowRight":var t,r=z.indexOf(e.currentTarget)+1;a=null!=(t=z[r])?t:z[0];break;case"ArrowLeft":var l,i=z.indexOf(e.currentTarget)-1;a=null!=(l=z[i])?l:z[z.length-1]}null==(n=a)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},g)},h.map((function(e){var n=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,key:n,ref:function(e){return z.push(e)},onKeyDown:C,onFocus:P,onClick:P},i,{className:(0,l.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":E===n})}),null!=a?a:n)}))),i?(0,r.cloneElement)(k.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))))}function m(e){var n=(0,i.Z)();return r.createElement(p,(0,t.Z)({key:String(n)},e))}},3356:function(e,n,a){a.r(n),a.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var t=a(3117),r=a(102),l=(a(7294),a(3905)),i=a(5488),o=a(5162),s=["components"],u={id:"get-started",title:"Los geht's"},c=void 0,d={unversionedId:"get-started",id:"get-started",title:"Los geht's",description:"Installation",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/GetStarted.mdx",sourceDirName:".",slug:"/get-started",permalink:"/de/docs/get-started",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/GetStarted.mdx",tags:[],version:"current",frontMatter:{id:"get-started",title:"Los geht's"},sidebar:"docs",previous:{title:"\xdcbersicht",permalink:"/de/docs/overview"},next:{title:"So funktioniert es",permalink:"/de/docs/how-it-works"}},p={},m=[{value:"Installation",id:"installation",level:2},{value:"Neuer Casbin-Vollstrecker",id:"neuer-casbin-vollstrecker",level:2},{value:"Berechtigungen \xfcberpr\xfcfen",id:"berechtigungen-\xfcberpr\xfcfen",level:3}],b={toc:m};function f(e){var n=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,t.Z)({},b,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"go get github.com/casbin/casbin/v2\n"))),(0,l.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,l.kt)("p",null,"F\xfcr Maven:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- https://mvnrepository.com/artifact/org.casbin/jcasbin --\x3e\n<dependency>\n    <groupId>org.casbin</groupId>\n    <artifactId>jcasbin</artifactId>\n    <version>1.x.y</version>\n</dependency>\n"))),(0,l.kt)(o.Z,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# NPM\nnpm install casbin --save\n\n# Yarn\nyarn add casbin\n"))),(0,l.kt)(o.Z,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,l.kt)("p",null,"Erfordert dieses Paket im ",(0,l.kt)("inlineCode",{parentName:"p"},"composer.json")," Ihres Projektes. Das Paket wird heruntergeladen:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Komponist ben\xf6tigt Kasbin/Kasbin\n"))),(0,l.kt)(o.Z,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pip install casbin\n"))),(0,l.kt)(o.Z,{value:".NET",label:".NET",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"dotnet add package Casbin.NET\n"))),(0,l.kt)(o.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Download Quelle\ngit clone https://github.com/casbin/casbin-cpp. es\n\n# generiert Projektdateien\ncd casbin-cpp && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release\n\n# casbin\ncmake --build erstellen und installieren. --config Release --target casbin install -j 10\n"))),(0,l.kt)(o.Z,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cargo install cargo-edit\ncargo add casbin\n\n// If you use async-std as async executor\ncargo add async-std\n\n// If you use tokio as async executor\ncargo add tokio // make sure you activate its `macros` feature\n"))),(0,l.kt)(o.Z,{value:"Delphi",label:"Delphi",mdxType:"TabItem"},(0,l.kt)("p",null,"Casbin4D kommt in einem Paket (derzeit f\xfcr Delphi 10.3 Rio) und Sie k\xf6nnen es in der IDE installieren. Es gibt jedoch keine visuellen Komponenten, was bedeutet, dass Sie die Units unabh\xe4ngig von den Paketen verwenden k\xf6nnen. Importieren Sie einfach die Einheiten in Ihrem Projekt (vorausgesetzt Sie haben nichts dagegen).")),(0,l.kt)(o.Z,{value:"Lua",label:"Lua",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"luarocks casbin installieren  \n")),(0,l.kt)("p",null,"Wenn Berichtfehler: Ihr Benutzer hat keine Schreibrechte in /usr/local/lib/luarocks/rocks -- Sie k\xf6nnen als privilegierter Benutzer laufen lassen oder Ihren lokalen Baum mit --local verwenden. Sie k\xf6nnen --local hinter Ihrem Befehl einf\xfcgen, um dies zu beheben:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"luarocks install casbin --local\n")))),(0,l.kt)("h2",{id:"neuer-casbin-vollstrecker"},"Neuer Casbin-Vollstrecker"),(0,l.kt)("p",null,"Casbin verwendet Konfigurationsdateien, um das Zugriffskontrollmodell festzulegen."),(0,l.kt)("p",null,"Es hat zwei Konfigurationsdateien, ",(0,l.kt)("inlineCode",{parentName:"p"},"model.conf")," und ",(0,l.kt)("inlineCode",{parentName:"p"},"policy.csv"),". Unter ihnen speichert ",(0,l.kt)("inlineCode",{parentName:"p"},"model.conf")," unser Zugriffsmodell und ",(0,l.kt)("inlineCode",{parentName:"p"},"policy.csv")," speichert unsere spezifische Benutzerberechtigungskonfiguration. Die Nutzung von Casbin ist sehr verfeinert. Im Grunde brauchen wir nur eine Hauptstruktur: ",(0,l.kt)("strong",{parentName:"p"},"Durchsetzer"),". Beim Bau dieser Struktur werden ",(0,l.kt)("inlineCode",{parentName:"p"},"model.conf")," und ",(0,l.kt)("inlineCode",{parentName:"p"},"policy.csv")," geladen."),(0,l.kt)("p",null,"In einem anderen Wort, um einen Casbin-Vollstrecker neu zu machen, m\xfcssen Sie ein ",(0,l.kt)("a",{parentName:"p",href:"supported-models"},"-Modell")," und einen ",(0,l.kt)("a",{parentName:"p",href:"adapters"},"Adapter")," angeben."),(0,l.kt)("p",null,"Casbin hat einen ",(0,l.kt)("a",{parentName:"p",href:"adapters#file-adapter-built-in"},"FileAdapter"),", siehe ",(0,l.kt)("a",{parentName:"p",href:"adapters"},"Adapter")," von mehr Adapter."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Verwende die Modelldatei und den Standard ",(0,l.kt)("a",{parentName:"li",href:"adapters#file-adapter-built-in"},"FileAdapter"),":")),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/casbin/casbin/v2"\n\ne, err := casbin.NewEnforcer("path/to/model.conf", "path/to/policy.csv")\n'))),(0,l.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'import org.casbin.jcasbin.main.Enforcer;\n\nEnforcer e = new Enforcer("path/to/model.conf", "path/to/policy.csv");\n'))),(0,l.kt)(o.Z,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import { newEnforcer } from 'casbin';\n\nconst e = await newEnforcer('path/to/model.conf', 'path/to/policy.csv');\n"))),(0,l.kt)(o.Z,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'require_once \'./vendor/autoload.php\';\n\nuse Casbin\\Enforcer;\n\n$e = new Enforcer("path/to/model.conf", "path/to/policy.csv");\n'))),(0,l.kt)(o.Z,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import casbin\n\ne = casbin.Enforcer("path/to/model.conf", "path/to/policy.csv")\n'))),(0,l.kt)(o.Z,{value:".NET",label:".NET",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'using NetCasbin; \n\nvar e = new Enforcer("path/to/model.conf", "path/to/policy.csv");\n'))),(0,l.kt)(o.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <casbin/casbin.h>\n\nint main() {\n    // Enforcer erstellen\n    casbin::Enforcer e("path/to/model.conf", "path/to/policy.csv");\n\n    // Code ..\n}\n'))),(0,l.kt)(o.Z,{value:"Delphi",label:"Delphi",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-delphi"},"var\n  casbin: ICasbin;\nbegin\n  casbin := TCasbin.Create('path/to/model.conf', 'path/to/policy.csv');\n  ...\nend\n"))),(0,l.kt)(o.Z,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'benutze Casbin::prelude::*;\n\n// Wenn Sie async_td als async executor verwenden\n#[cfg(feature = "runtime-async-std")]\n#[async_std::main]\nasync fn main() -> Result<()> {\n    let mut e = Enforcer::new("path/to/model). onf", "path/to/policy.csv"). warten?;\n    Ok())\n}\n\n// Wenn Sie tokio als async executor verwenden\n#[cfg(feature = "runtime-tokio")]\n#[tokio::main]\nasync fn main() -> Result<()> {\n    let mut e = Enforcer::new("path/to/model). onf", "path/to/policy.csv").await?;\n    Ok())\n}\n'))),(0,l.kt)(o.Z,{value:"Lua",label:"Lua",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local Enforcer = require("casbin")\nlocal e = Enforcer:new("path/to/model.conf", "path/to/policy.csv") -- Der Casbin Enforcer\n')))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Den Modelltext mit einem anderen Adapter verwenden:")),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "log"\n\n    "github.com/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    xormadapter "github.com/casbin/xorm-adapter/v2"\n    _ "github.com/go-sql-driver/mysql"\n)\n\n// Xorm-Adapter mit MySQL-Datenbank initialisieren.\na, err := xormadapter.NewAdapter("mysql", "mysql_username:mysql_password@tcp(127.0.0. :3306)/casbin")\nif err != nil {\n    log.Fatalf("error: adapter: %s", err)\n}\n\nm, err := Modell. ewModelFromString(`\n[request_definition]\nr = sub, obj, handeln\n\n[policy_definition]\np = sub, obj, handeln\n\n[policy_effect]\ne = irgendwann, wo (p. ft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p. bj && r.act == p.act\n`)\nif err != nil {\n    log. atalf("error: model: %s", err)\n}\n\ne, err := casbin. ewEnforcer(m, a)\nif err != nil {\n    log.Fatalf("error: enforcer: %s", err)\n}\n'))),(0,l.kt)(o.Z,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import casbin\nimport casbin_sqlalchemy_adapter\n\n\n# SQLAlchemy Casbin Adapter mit SQLLite DB\nadapter = casbin_sqlalchemy_adapter. dapter(\'sqlite:///test.db\')\n\n# Erstelle eine Konfigurationsmodellrichtlinie\nmit open("rbac_example_model.conf", "w") wie f:\n    f. rite("""\n    [request_definition]\n    r = sub, obj, handeln\n\n    [policy_definition]\n    p = sub, obj, act\n\n    [policy_effect]\n    e = some(where (p. ft == allow))\n\n    [matchers]\n    m = r. ub == p.sub && r.obj == p.obj && r.act == p. ct\n    """)\n\n# Erzwingen aus Adapter und Konfigurationsrichtlinie\ne = casbin.Enforcer(\'rbac_example_model.conf\', Adapter)\n')))),(0,l.kt)("h3",{id:"berechtigungen-\xfcberpr\xfcfen"},"Berechtigungen \xfcberpr\xfcfen"),(0,l.kt)("p",null,"F\xfcgen Sie einen Strafverfolgungshaken direkt vor dem Zugriff in Ihren Code ein:"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'sub := "alice" // der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\nobj := "data1" // die Ressource, auf die zugegriffen werden soll.\nact := "read" // die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\nok, err := e. nforce(sub, obj, act)\n\nwenn fehler! nil {\n    // err\n}\n\nif ok == true {\n    // Erlaube dem Alice das Lesen von data1\n} else {\n    // Anfrage verweigern zeigen einen Fehler\n}\n\n// Sie k\xf6nnten BatchEnforce() verwenden, um einige Anfragen in Batches zu erzwingen.\n// Diese Methode gibt ein bool Slice zur\xfcck und der Slice-Index entspricht dem Datensatzindex des zweidimensionalen Arrays.\n// z.B. Ergebnis[0] ist das Ergebnis von {"alice", "data1", "read"}\nresults, err := e.BatchEnforce([][][]interface{}{{"alice", "data1", "read"}, {"bob", "data2", "write"}, {"jack", "data3", "read"}})\n'))),(0,l.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'String sub = "alice"; // der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\nString obj = "data1"; // die Ressource, auf die zugegriffen werden soll.\nString act = "read"; // die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\nwenn (e. nforce(unter, obj, act) == true) {\n    // Erlaubt dem Alice Daten 1\n} else {\n    // Anfrage ablehnen zeige einen Fehler\n}\n'))),(0,l.kt)(o.Z,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const sub = 'alice'; // der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\nconst obj = 'data1'; // die Ressource, auf die zugegriffen werden soll.\nconst act = 'read'; // die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\nif (warten e. nforce(unter, obj, act)) === true) {\n    // Erlaubt dem Alice Daten 1\n} else {\n    // Anfrage ablehnen zeige einen Fehler\n}\n"))),(0,l.kt)(o.Z,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$sub = "alice"; // der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\n$obj = "data1"; // die Ressource, auf die zugegriffen wird.\n$act = "lesen"; // die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\nif ($e->enforce($sub, $obj, $act) === true) {\n    // Erlaube dem Alice Daten 1\n} sonst {\n    // Anfrage ablehnen zeige einen Fehler\n}\n'))),(0,l.kt)(o.Z,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'sub = "alice" # der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\nobj = "data1" # die Ressource, auf die zugegriffen wird.\nact = "read" # die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\nif e.enforce(sub, obj, act):\n    # Erlaube dem Alice Daten 1\n    weitergeben\nelse:\n    # die Anfrage verweigern, zeige einen Fehler\n    Weitergabe an\n'))),(0,l.kt)(o.Z,{value:".NET",label:".NET",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'var sub = "alice"; # der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\nvar obj = "data1"; # die Ressource, auf die zugegriffen wird.\nvar act = "read"; # die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\nwenn (warten e. nforceAsync(Unter, obj, act)) \n{\n    // Erlaubt dem Alice Daten 1\n}\nelse\n{\n    // Anfrage ablehnen zeige einen Fehler\n}\n'))),(0,l.kt)(o.Z,{value:"C++",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'    casbin::Enforcer e("../assets/model.conf", "../assets/policy.csv");\n\n    if (e. nforce({"alice", "/alice_data/hello", "GET"})) {\n        std::cout << "Erzwinge OK" << std::endl;\n    } else {\n        std::cout << "Erzwinge NICHT Good" << std::endl;\n    }\n\n    if (e. nforce({"alice", "/alice_data/hello", "POST"})) {\n        std::cout << "Erzwinge OK" << std::endl;\n    } else {\n        std::cout << "Erzwinge NICHT Good" << std::endl;\n}\n'))),(0,l.kt)(o.Z,{value:"Delphi",label:"Delphi",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-delphi"},"if casbin.enforce(['alice,data1,read']) then\n  // Alice ist super gl\xfccklich, da sie Daten lesen kann\nsonst\n  // Alice ist traurig\n"))),(0,l.kt)(o.Z,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'  let sub = "alice"; // der Benutzer, der auf eine Ressource zugreifen m\xf6chte.\n  let obj = "data1"; // die Ressource, auf die zugegriffen werden soll.\n  let act = "read"; // die Operation, die der Benutzer auf der Ressource ausf\xfchrt.\n\n  if e.enforce(sub, obj, act)).warten Sie? {\n      // Erlaube dem Alice Daten 1\n  } sonst {\n      // Fehler auftreten\n}\n'))),(0,l.kt)(o.Z,{value:"Lua",label:"Lua",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'if e:enforce("alice", "data1", "read") then\n   -- allow alice to read data1\nelse\n   -- deny the request, show an error\nend\n\n')))),(0,l.kt)("p",null,"Casbin stellt auch die API f\xfcr das Berechtigungsmanagement zur Laufzeit zur Verf\xfcgung. Zum Beispiel k\xf6nnen Sie alle Rollen einem Benutzer zuweisen wie unten:"),(0,l.kt)(i.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'roles, err := e.GetRolesForUser("alice")\n'))),(0,l.kt)(o.Z,{value:"Java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Roles roles = e.getRolesForUser("alice");\n'))),(0,l.kt)(o.Z,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const roles = await e.getRolesForUser('alice');\n"))),(0,l.kt)(o.Z,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},'$roles = $e->getRolesForUser("alice");\n'))),(0,l.kt)(o.Z,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'roles = e.get_roles_for_user("alice")\n'))),(0,l.kt)(o.Z,{value:".NET",label:".NET",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},'var roles = e.GetRolesForUser("alice");\n'))),(0,l.kt)(o.Z,{value:"Delphi",label:"Delphi",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-delphi"},'roles = e.rolesForEntity("alice")\n'))),(0,l.kt)(o.Z,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'let roles = e.get_roles_for_user("alice");\n'))),(0,l.kt)(o.Z,{value:"Lua",label:"Lua",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'local roles = e:GetRolesForUser("alice")\n')))),(0,l.kt)("p",null,"Siehe ",(0,l.kt)("a",{parentName:"p",href:"/docs/management-api"},"Management API")," und ",(0,l.kt)("a",{parentName:"p",href:"/docs/rbac-api"},"RBAC API")," f\xfcr mehr Nutzung."),(0,l.kt)("p",null,"Bitte beachten Sie die Testf\xe4lle f\xfcr mehr Verwendung."))}f.isMDXComponent=!0}}]);