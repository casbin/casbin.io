"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2246],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),l=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),p=l(t),m=i,f=p["".concat(o,".").concat(m)]||p[m]||c[m]||a;return t?r.createElement(f,s(s({ref:n},d),{},{components:t})):r.createElement(f,s({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=p;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u.mdxType="string"==typeof e?e:i,s[1]=u;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2554:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return c}});var r=t(3117),i=t(102),a=(t(7294),t(3905)),s=["components"],u={id:"k8s",title:"Autorisierung von Kubernetes",description:"Kubernetes (k8s) RBAC & ABAC authorization middleware based on Casbin",keywords:["K8s-authz","Kubernetes","k8s"]},o=void 0,l={unversionedId:"k8s",id:"k8s",title:"Autorisierung von Kubernetes",description:"Kubernetes (k8s) RBAC & ABAC authorization middleware based on Casbin",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/K8sAuthz.mdx",sourceDirName:".",slug:"/k8s",permalink:"/de/docs/k8s",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/de",tags:[],version:"current",frontMatter:{id:"k8s",title:"Autorisierung von Kubernetes",description:"Kubernetes (k8s) RBAC & ABAC authorization middleware based on Casbin",keywords:["K8s-authz","Kubernetes","k8s"]},sidebar:"docs",previous:{title:"Leistungsoptimierung",permalink:"/de/docs/performance"},next:{title:"Genehmigung des Service-Mesh durch den Gesandten",permalink:"/de/docs/envoy"}},d={},c=[{value:"Anforderungen",id:"anforderungen",level:2},{value:"Auslastung",id:"auslastung",level:2}],p={toc:c};function m(e){var n=e.components,t=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz"},"K8s-authz")," ist eine Kubernetes (k8s) RBAC & ABAC Autorisierungs-Middleware basierend auf Casbin. Diese Middleware verwendet K8s Validierungs-Zulassungs-Webhook, um auf jede Anforderung der k8s Ressourcen die von Kasbin definierten Richtlinien zu \xfcberpr\xfcfen. Diese Custom-Advisor-Controller f\xfchren eine Art Validierung auf dem Anfrageobjekt durch, das vom Api-Server weitergeleitet wurde und auf einer Logik basiert, schickt eine Antwort an den Api-Server zur\xfcck, die Informationen dar\xfcber enth\xe4lt, ob die Anfrage erlaubt oder abgelehnt werden soll. Diese Controller sind bei Kubernetes mit dem ",(0,a.kt)("inlineCode",{parentName:"p"},"ValidatingAdmissionWebhook")," registriert."),(0,a.kt)("p",null,"Der K8s API-Server muss wissen, wann er die eingehende Anfrage an unseren Zulassungskontrolleur sendet. F\xfcr diesen Teil wir haben einen Validierungswebhook definiert, der die Anfragen f\xfcr jede Art von K8s Ressource/Unter-Ressource proxy und die \xdcberpr\xfcfung der Richtlinien daran durchf\xfchren w\xfcrde. Der Benutzer w\xfcrde nur dann die M\xf6glichkeit erhalten, die Operationen auf diese Ressourcen auszuf\xfchren, wenn der Kasbiner es erm\xe4chtigt. Der ",(0,a.kt)("a",{parentName:"p",href:"/docs/get-started#new-a-casbin-enforcer"},"Vollstrecker")," pr\xfcft die Rollen des Benutzers, der in den Richtlinien definiert ist. Diese Middleware w\xfcrde im K8s-Cluster eingesetzt werden."),(0,a.kt)("h2",{id:"anforderungen"},"Anforderungen"),(0,a.kt)("p",null,"Bevor du fortf\xe4hrst, vergewissere dich, dass du Folgendes hast-"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ein laufender k8s Cluster. Sie k\xf6nnen die Cluster entweder \xfcber Docker ausf\xfchren, indem Sie sie auf dem Docker Desktop aktivieren oder das komplette K8s \xd6kosystem lokal oder auf Ihrem Server einrichten. Sie k\xf6nnen dieser detaillierten ",(0,a.kt)("a",{parentName:"li",href:"https://rominirani.com/tutorial-getting-started-with-kubernetes-on-your-windows-laptop-with-minikube-3269b54a226"},"-Anleitung")," folgen, um den k8s-Cluster lokal unter Windows einzurichten, oder diese ",(0,a.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-create-a-kubernetes-cluster-using-kubeadm-on-ubuntu-18-04"},"Anleitung")," , wenn Sie f\xfcr Linux einrichten m\xf6chten."),(0,a.kt)("li",{parentName:"ul"},"Kubectl CLI Dies ist die ",(0,a.kt)("a",{parentName:"li",href:"https://master--kubernetes-io-master-staging.netlify.app/docs/tasks/tools/install-kubectl-windows/"},"Anleitung")," um es unter Windows einzurichten und diese ",(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/"},"Anleitung")," f\xfcr Linux."),(0,a.kt)("li",{parentName:"ul"},"OpenSSL")),(0,a.kt)("h2",{id:"auslastung"},"Auslastung"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Erzeugen Sie die Zertifikate und Schl\xfcssel f\xfcr jeden Benutzer, indem Sie Openssl verwenden und das folgende Skript ausf\xfchren: -")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"./gen_cert.sh\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Erstellen Sie das Docker-Bild aus der ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/casbin/k8s-authz/blob/master/Dockerfile"},"Dockerfile")," manuell durch den folgenden Befehl und \xe4ndern Sie die Build-Version hier und in der Deployment ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/casbin/k8s-authz/blob/718f58c46e3dbf79063b5b1c18348c2fee5de9e9/manifests/deployment.yaml#L18"},"Datei"),", wie in den Builds.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," docker build -t casbin/k8s_authz:0.1 .\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Definieren Sie die Casbin-Richtlinien in den ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/config/model.conf"},"model.conf")," und ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/config/policy.csv"},"policy.csv"),". Sie k\xf6nnen die ",(0,a.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"-Dokumentation")," weiterleiten, um mehr \xfcber das Funktionieren dieser Richtlinien zu erfahren.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Vor dem Deployment k\xf6nnen Sie die Ports in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/main.go"},"main.go")," und auch in der Validierung Webhook Konfiguration ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/k8s-authz/blob/master/manifests/deployment.yaml"},"Datei")," je nach Benutzung \xe4ndern.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Den Validierungscontroller und den Webhook auf dem k8s Cluster bereitstellen, indem du ausf\xfchrst:-"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl apply -f deployment.yaml\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"F\xfcr einen Produktionsserver m\xfcssen wir ein k8s ",(0,a.kt)("inlineCode",{parentName:"li"},"Secret")," erstellen, um die Zertifikate zu Sicherheitszwecken zu platzieren.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"kubectl erstellt geheimes generisches casbin -n default \\\n  --from-file=key.pem=certs/casbin-key.pem \\\n  --from-file=cert.pem=certs/casbin-crt.pem\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Einmal ist dieser Teil erledigt, m\xfcssen wir das Verzeichnis der certs im ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ashish493/k8s-authz/blob/3560551427c0431a9d4594ad1206f084ede37c49/main.go#L26"},"Hauptverzeichnis \xe4ndern. o")," und dann in ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ashish493/k8s-authz/blob/3560551427c0431a9d4594ad1206f084ede37c49/manifests/deployment.yaml#L22"},"manifestiert")," mit dem des ",(0,a.kt)("inlineCode",{parentName:"li"},"Geheimes"),".")),(0,a.kt)("p",null,"Jetzt sollte der Server laufen und bereit sein, die Anfragen f\xfcr die Operationen auf den k8s Ressourcen zu \xfcberpr\xfcfen."),(0,a.kt)("p",null,"Im Falle einer Anfrage k\xf6nnen Sie auf unserem Gitter ",(0,a.kt)("a",{parentName:"p",href:"https://gitter.im/casbin/lobby"},"Kanal")," fragen."))}m.isMDXComponent=!0}}]);