"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[9336],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=i,u=c["".concat(d,".").concat(m)]||c[m]||f[m]||a;return n?r.createElement(u,l(l({ref:t},p),{},{components:n})):r.createElement(u,l({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8658:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={id:"effector",title:"Effektor",description:"Effector is the interface for Casbin effectors",keywords:["effector","Effect","MergeEffects"]},l=void 0,o={unversionedId:"effector",id:"effector",title:"Effektor",description:"Effector is the interface for Casbin effectors",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/Effector.mdx",sourceDirName:".",slug:"/effector",permalink:"/de/docs/effector",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/de",tags:[],version:"current",frontMatter:{id:"effector",title:"Effektor",description:"Effector is the interface for Casbin effectors",keywords:["effector","Effect","MergeEffects"]},sidebar:"docs",previous:{title:"Syntax f\xfcr Modelle",permalink:"/de/docs/syntax-for-models"},next:{title:"Funktion",permalink:"/de/docs/function"}},d={},s=[{value:"<code>MergeEffects()</code>",id:"mergeeffects",level:3}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},f=p("Tabs"),c=p("TabItem"),m={toc:s};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Der Effekt ist das Ergebnis einer politischen Regel. Und der ",(0,i.kt)("inlineCode",{parentName:"p"},"Effector")," ist die Schnittstelle f\xfcr Casbin Effekte."),(0,i.kt)("h3",{id:"mergeeffects"},(0,i.kt)("inlineCode",{parentName:"h3"},"MergeEffects()")),(0,i.kt)("p",null,"MergeEffects vereint alle vom Durchsetzer gesammelten \xfcbereinstimmenden Ergebnisse in einer einzigen Entscheidung."),(0,i.kt)("p",null,"Zum Beispiel:"),(0,i.kt)(f,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(c,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"Effect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,i.kt)("p",null,"In diesem Beispiel:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Effekt")," ist die endg\xfcltige Entscheidung, die von dieser Funktion zusammengef\xfchrt wird (Initialisiert als ",(0,i.kt)("inlineCode",{parentName:"li"},"Undeterminate"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"explainIndex")," ist der Index von ",(0,i.kt)("inlineCode",{parentName:"li"},"eft")," , der ",(0,i.kt)("inlineCode",{parentName:"li"},"Erlaubt")," oder ",(0,i.kt)("inlineCode",{parentName:"li"},"Ablehnen"),".(Initialisiert als ",(0,i.kt)("inlineCode",{parentName:"li"},"-1"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Fr.")," wird verwendet um zu \xfcberpr\xfcfen, ob der Effekt unterst\xfctzt wird."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," ist der Richtlinieneffekt, der als ",(0,i.kt)("inlineCode",{parentName:"li"},"String gespeichert wird")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Effekte")," ist das Array des Effekts, das ",(0,i.kt)("inlineCode",{parentName:"li"},"Erlaube"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Unbestimmt")," oder ",(0,i.kt)("inlineCode",{parentName:"li"},"Ablehnen")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"entspricht")," dem Array, das zeigt, dass wenn das Ergebnis mit der Richtlinie \xfcbereinstimmt."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"policyIndex")," ist der Index der Richtlinien im Modell."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PolicyLength")," ist die L\xe4nge der Richtlinie.")),(0,i.kt)("p",null,"Der obige Code zeigt, wie wir die Parameter an die ",(0,i.kt)("inlineCode",{parentName:"p"},"MergeEffects")," Funktion \xfcbergeben k\xf6nnen und die Funktion verarbeitet die Effekte und \xdcbereinstimmungen basierend auf dem ",(0,i.kt)("inlineCode",{parentName:"p"},"expr")),(0,i.kt)("p",null,"Um einen Effekt zu installieren, k\xf6nnen wir dies tun:"),(0,i.kt)(f,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(c,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var e Effector\nEffect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,i.kt)("p",null,"Die Grundidee der ",(0,i.kt)("inlineCode",{parentName:"p"},"MergeEffects")," zeigt an, dass, wenn die ",(0,i.kt)("inlineCode",{parentName:"p"},"expr")," die Ergebnisse \xfcbereinstimmen kann, das bedeutet, dass ",(0,i.kt)("inlineCode",{parentName:"p"},"p_eft")," ",(0,i.kt)("inlineCode",{parentName:"p"},"erlaubt ist"),", dann k\xf6nnen wir endlich alle Effekte zusammenf\xfchren. Und wenn es keine Abrede gibt, dann lassen wir es zu."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Wenn der ",(0,i.kt)("inlineCode",{parentName:"p"},"expr")," nicht \xfcbereinstimmen kann ",(0,i.kt)("inlineCode",{parentName:"p"},'"priority(p_eft) || deny"')," und auch der ",(0,i.kt)("inlineCode",{parentName:"p"},"policyIndex")," ist k\xfcrzer als ",(0,i.kt)("inlineCode",{parentName:"p"},"policyLength-1"),", es wird ",(0,i.kt)("strong",{parentName:"p"},"Kurzschluss")," einige Effekte in der Mitte.")))}u.isMDXComponent=!0}}]);