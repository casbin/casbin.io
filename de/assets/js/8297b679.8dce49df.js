"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[3515],{3905:(e,n,a)=>{a.d(n,{Zo:()=>s,kt:()=>u});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function d(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):d(d({},n),e)),a},s=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),p=l(a),u=i,f=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return a?t.createElement(f,d(d({ref:n},s),{},{components:a})):t.createElement(f,d({ref:n},s))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=a.length,d=new Array(o);d[0]=p;var r={};for(var c in n)hasOwnProperty.call(n,c)&&(r[c]=n[c]);r.originalType=e,r.mdxType="string"==typeof e?e:i,d[1]=r;for(var l=2;l<o;l++)d[l]=a[l];return t.createElement.apply(null,d)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},4256:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var t=a(7462),i=(a(7294),a(3905));const o={id:"rbac-with-conditions",title:"RBAC with Conditions",description:"Usage of RBAC with conditions",keywords:["RBAC with conditions"],authors:["PokIsemaine"]},d=void 0,r={unversionedId:"rbac-with-conditions",id:"rbac-with-conditions",title:"RBAC with Conditions",description:"Usage of RBAC with conditions",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/RBACWithConditions.mdx",sourceDirName:".",slug:"/rbac-with-conditions",permalink:"/de/docs/rbac-with-conditions",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RBACWithConditions.mdx",tags:[],version:"current",frontMatter:{id:"rbac-with-conditions",title:"RBAC with Conditions",description:"Usage of RBAC with conditions",keywords:["RBAC with conditions"],authors:["PokIsemaine"]},sidebar:"docs",previous:{title:"RBAC mit Dom\xe4nen",permalink:"/de/docs/rbac-with-domains"},next:{title:"Casbin RBAC vs. RBAC96",permalink:"/de/docs/rbac-96"}},c={},l=[{value:"Conditional RoleManager",id:"conditional-rolemanager",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Custom condition functions",id:"custom-condition-functions",level:3},{value:"Conditional RoleManager with domains",id:"conditional-rolemanager-with-domains",level:2},{value:"Basic Usage",id:"basic-usage-1",level:3},{value:"Custom condition functions",id:"custom-condition-functions-1",level:3}],s={toc:l};function m(e){let{components:n,...o}=e;return(0,i.kt)("wrapper",(0,t.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"conditional-rolemanager"},"Conditional RoleManager"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ConditionalRoleManager")," supports custom condition functions at the policy level."),(0,i.kt)("p",null,"For example, when we need a temporary role policy, we can follow the following approach:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _, (_, _)\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"g = _, _, (_, _)")," uses ",(0,i.kt)("inlineCode",{parentName:"p"},"(_, _)")," to contain a list of arguments to pass to the condition function\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," as a parameter placeholder"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, data2_admin, data2, write\np, data3_admin, data3, read\np, data4_admin, data4, write\np, data5_admin, data5, read\np, data6_admin, data6, write\np, data7_admin, data7, read\np, data8_admin, data8, write\n\ng, alice, data2_admin, 0000-01-01 00:00:00, 0000-01-02 00:00:00\ng, alice, data3_admin, 0000-01-01 00:00:00, 9999-12-30 00:00:00\ng, alice, data4_admin, _, _\ng, alice, data5_admin, _, 9999-12-30 00:00:00\ng, alice, data6_admin, _, 0000-01-02 00:00:00\ng, alice, data7_admin, 0000-01-01 00:00:00, _\ng, alice, data8_admin, 9999-12-30 00:00:00, _\n")),(0,i.kt)("h3",{id:"basic-usage"},"Basic Usage"),(0,i.kt)("p",null,"Add a conditional function for the role policy(",(0,i.kt)("inlineCode",{parentName:"p"},"g"),"type policy)  through ",(0,i.kt)("inlineCode",{parentName:"p"},"AddNamedLinkConditionFunc"),",\nand when enforcing is executed, the corresponding parameters will be automatically obtained\nand passed in the conditional function for checking.\nIf the check passes, then the corresponding role policy(",(0,i.kt)("inlineCode",{parentName:"p"},"g")," type policy) is valid, otherwise it is invalid"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'e.AddNamedLinkConditionFunc("g", "alice", "data2_admin", util.TimeMatchFunc)\ne.AddNamedLinkConditionFunc("g", "alice", "data3_admin", util.TimeMatchFunc)\ne.AddNamedLinkConditionFunc("g", "alice", "data4_admin", util.TimeMatchFunc)\ne.AddNamedLinkConditionFunc("g", "alice", "data5_admin", util.TimeMatchFunc)\ne.AddNamedLinkConditionFunc("g", "alice", "data6_admin", util.TimeMatchFunc)\ne.AddNamedLinkConditionFunc("g", "alice", "data7_admin", util.TimeMatchFunc)\ne.AddNamedLinkConditionFunc("g", "alice", "data8_admin", util.TimeMatchFunc)\n\n\ne.enforce("alice", "data1", "read")     // except: true\ne.enforce("alice", "data2", "write")    // except: false\ne.enforce("alice", "data3", "read")     // except: true\ne.enforce("alice", "data4", "write")    // except: true\ne.enforce("alice", "data5", "read")     // except: true\ne.enforce("alice", "data6", "write")    // except: false\ne.enforce("alice", "data7", "read")     // except: true\ne.enforce("alice", "data8", "write")    // except: false\n')),(0,i.kt)("h3",{id:"custom-condition-functions"},"Custom condition functions"),(0,i.kt)("p",null,"Custom conditional functions need to conform to the following function types"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type LinkConditionFunc = func(args ...string) (bool, error)\n")),(0,i.kt)("p",null,"for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// TimeMatchFunc is the wrapper for TimeMatch.\nfunc TimeMatchFunc(args ...string) (bool, error) {\n    if err := validateVariadicStringArgs(2, args...); err != nil {\n        return false, fmt.Errorf("%s: %s", "TimeMatch", err)\n    }\n    return TimeMatch(args[0], args[1])\n}\n\n// TimeMatch determines whether the current time is between startTime and endTime.\n// You can use "_" to indicate that the parameter is ignored\nfunc TimeMatch(startTime, endTime string) (bool, error) {\n    now := time.Now()\n    if startTime != "_" {\n        if start, err := time.Parse("2006-01-02 15:04:05", startTime); err != nil {\n            return false, err\n        } else if !now.After(start) {\n            return false, nil\n        }\n    }\n\n    if endTime != "_" {\n        if end, err := time.Parse("2006-01-02 15:04:05", endTime); err != nil {\n            return false, err\n        } else if !now.Before(end) {\n            return false, nil\n        }\n    }\n\n    return true, nil\n}\n')),(0,i.kt)("h2",{id:"conditional-rolemanager-with-domains"},"Conditional RoleManager with domains"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _, (_, _)\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, data2_admin, data2, write\np, data3_admin, data3, read\np, data4_admin, data4, write\np, data5_admin, data5, read\np, data6_admin, data6, write\np, data7_admin, data7, read\np, data8_admin, data8, write\n\ng, alice, data2_admin, domain2, 0000-01-01 00:00:00, 0000-01-02 00:00:00\ng, alice, data3_admin, domain3, 0000-01-01 00:00:00, 9999-12-30 00:00:00\ng, alice, data4_admin, domain4, _, _\ng, alice, data5_admin, domain5, _, 9999-12-30 00:00:00\ng, alice, data6_admin, domain6, _, 0000-01-02 00:00:00\ng, alice, data7_admin, domain7, 0000-01-01 00:00:00, _\ng, alice, data8_admin, domain8, 9999-12-30 00:00:00, _\n")),(0,i.kt)("h3",{id:"basic-usage-1"},"Basic Usage"),(0,i.kt)("p",null,"Add a conditional function for the role policy(",(0,i.kt)("inlineCode",{parentName:"p"},"g"),"type policy)  through ",(0,i.kt)("inlineCode",{parentName:"p"},"AddNamedDomainLinkConditionFunc"),",\nand when enforcing is executed, the corresponding parameters will be automatically obtained\nand passed in the conditional function for checking.\nIf the check passes, then the corresponding role policy(",(0,i.kt)("inlineCode",{parentName:"p"},"g")," type policy) is valid, otherwise it is invalid"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'e.AddNamedDomainLinkConditionFunc("g", "alice", "data2_admin", "domain2", util.TimeMatchFunc)\ne.AddNamedDomainLinkConditionFunc("g", "alice", "data3_admin", "domain3", util.TimeMatchFunc)\ne.AddNamedDomainLinkConditionFunc("g", "alice", "data4_admin", "domain4", util.TimeMatchFunc)\ne.AddNamedDomainLinkConditionFunc("g", "alice", "data5_admin", "domain5", util.TimeMatchFunc)\ne.AddNamedDomainLinkConditionFunc("g", "alice", "data6_admin", "domain6", util.TimeMatchFunc)\ne.AddNamedDomainLinkConditionFunc("g", "alice", "data7_admin", "domain7", util.TimeMatchFunc)\ne.AddNamedDomainLinkConditionFunc("g", "alice", "data8_admin", "domain8", util.TimeMatchFunc)\n\n\ne.enforce("alice", "domain1", "data1", "read")              // except: true\ne.enforce("alice", "domain2", "data2", "write")             // except: false\ne.enforce("alice", "domain3", "data3", "read")              // except: true\ne.enforce("alice", "domain4", "data4", "write")             // except: true\ne.enforce("alice", "domain5", "data5", "read")              // except: true\ne.enforce("alice", "domain6", "data6", "write")             // except: false\ne.enforce("alice", "domain7", "data7", "read")              // except: true\ne.enforce("alice", "domain8", "data8", "write")             // except: false\ne.enforce("alice", "domain_not_exist", "data1", "write")    // except: false\ne.enforce("alice", "domain_not_exist", "data2", "read")     // except: false\ne.enforce("alice", "domain_not_exist", "data3", "write")    // except: false\ne.enforce("alice", "domain_not_exist", "data4", "read")     // except: false\ne.enforce("alice", "domain_not_exist", "data5", "write")    // except: false\ne.enforce("alice", "domain_not_exist", "data6", "read")     // except: false\ne.enforce("alice", "domain_not_exist", "data7", "write")    // except: false\ne.enforce("alice", "domain_not_exist", "data8", "read")     // except: false\n')),(0,i.kt)("h3",{id:"custom-condition-functions-1"},"Custom condition functions"),(0,i.kt)("p",null,"Like the basic ",(0,i.kt)("inlineCode",{parentName:"p"},"Conditional RoleManager"),", custom functions are supported, and there is no difference in use."),(0,i.kt)("p",null,"Note that ",(0,i.kt)("inlineCode",{parentName:"p"},"DomainMatchingFunc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"MatchingFunc"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"LinkConditionFunc")," are at different levels and are used in different situations."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"conditional_rolemanager_with_domains",src:a(3622).Z,width:"1546",height:"1007"})))}m.isMDXComponent=!0},3622:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/conditional_rolemanager_with_domains-68da0ab873982624da59e159d4b2df45.png"}}]);