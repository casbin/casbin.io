"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[725],{9574:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2021/08/19/apisix-casbin-authorization","metadata":{"permalink":"/de/blog/2021/08/19/apisix-casbin-authorization","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/de/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md","title":"Autorisierung in APISIX mit Casbin","description":"Einf\xfchrung","date":"2021-08-19T00:00:00.000Z","formattedDate":"19. August 2021","tags":[],"readingTime":5.44,"hasTruncateMarker":false,"authors":[{"name":"Rushikesh Tote","title":"Mitglied von Casbin","url":"http://github.com/rushitote","imageURL":"https://avatars.githubusercontent.com/rushitote"}],"frontMatter":{"title":"Autorisierung in APISIX mit Casbin","author":"Rushikesh Tote","authorTitle":"Mitglied von Casbin","authorURL":"http://github.com/rushitote","authorImageURL":"https://avatars.githubusercontent.com/rushitote"},"nextItem":{"title":"Yang Luo - Google Open Source Peer Bonus Gewinner","permalink":"/de/blog/2020/04/21/google-award"}},"content":"## Einf\xfchrung\\n\\n[APISIX](https://apisix.apache.org/) ist ein hochleistungsf\xe4higes und skalierbares natives API Gateway basierend auf Nginx und etc. Es ist ein Open-Source-Projekt der Apache Software Foundation. Au\xdferdem ist das, was APISIX so gut macht, die Unterst\xfctzung vieler gro\xdfartiger Plugins, die verwendet werden k\xf6nnten, um Funktionen wie Authentifizierung zu implementieren, \xfcberwachen, routing, etc. Und die Tatsache, dass Plugins in APISIX hei\xdf neu geladen werden (ohne Neustart) macht es sehr dynamisch.\\n\\nBei Verwendung von APISIX kann es jedoch zu Szenarien kommen, bei denen Sie m\xf6glicherweise komplexe Autorisierungslogik in Ihrer Anwendung hinzuf\xfcgen m\xf6chten. Hier k\xf6nnte Ihnen authz-casbin helfen authz-casbin ist ein APISIX-Plugin, das auf [Lua Casbin](https://github.com/casbin/lua-casbin/) basiert, das eine leistungsstarke Autorisierung basierend auf verschiedenen Zugriffskontrollmodellen erm\xf6glicht. [Casbin](/) is an authorization library which supports access control models like ACL, RBAC, ABAC. Urspr\xfcnglich in Go geschrieben, wurde es in viele Sprachen portiert und Lua Casbin ist die Lua-Implementierung von Casbin. Die Entwicklung von authz-casbin startete, als wir ein neues Plugin f\xfcr die Autorisierung im APISIX-Repository ([#4674](https://github.com/apache/apisix/issues/4674)), dem die Kernmitglieder zugestimmt haben, vorschlugen. Und nach den hilfreichen Bewertungen, die zu einigen wesentlichen \xc4nderungen und Verbesserungen gef\xfchrt haben, wurde die PR ([#4710](https://github.com/apache/apisix/pull/4710)) schlie\xdflich zusammengef\xfchrt.\\n\\nIn diesem Blog, wir werden das authz-casbin Plugin verwenden, um zu zeigen, wie Sie ein Autorisierungsmodell basierend auf der Role Based Access Control (RBAC) in APISIX implementieren k\xf6nnen.\\n\\n**HINWEIS**: Sie m\xfcssen ein anderes Plugin oder einen benutzerdefinierten Workflow verwenden, um den Benutzer zu authentifizieren, da Casbin nur die Autorisierung und keine Authentifizierung durchf\xfchrt.\\n\\n## Erstellen eines Modells\\n\\nDas Plugin verwendet drei Parameter, um jede Anfrage zu autorisieren - Subjekt, Objekt und Aktion. Betreff ist hier der Wert des Benutzernamen-Headers, der so etwas wie `[Benutzername: alice]` sein k\xf6nnte. Dann ist das Objekt der URL-Pfad, auf den zugegriffen wird und die Aktion ist die Anfragemethode, die verwendet wird.\\n\\nNehmen wir an, wir wollen ein Modell mit drei Ressourcen an den Pfaden erstellen - `/`, `/res1` und `/res2`. Und wir wollen ein Modell wie dies:\\n\\n![bild](https://i.imgur.com/7BlvBNR.png)\\n\\nDies w\xfcrde bedeuten, dass alle Benutzer (`*`) wie zum Beispiel `jack` auf die Homepage zugreifen k\xf6nnen (`/`). Und Benutzer mit `admin` Berechtigungen wie `alice` und `bob` k\xf6nnen auf alle Seiten und Ressourcen zugreifen (wie `res1` und `res2`). Lass uns Benutzer ohne Administratorrechte auf nur `GET` Anfragemethode beschr\xe4nken. F\xfcr dieses Szenario k\xf6nnten wir das Modell definieren als:\\n\\n```ini\\n[request_definition]\\nr = sub, obj, act\\n\\n[policy_definition]\\np = sub, obj, handeln\\n\\n[role_definition]\\ng = _, _\\n\\n[policy_effect]\\ne = irgendwo (p. ft == allow))\\n\\n[matchers]\\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p. ub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\n```\\n\\n## Richtlinien erstellen\\n\\nAus dem oben genannten Szenario w\xe4re die Politik folgende:\\n\\n```csv\\np, *, /, GET\\np, admin, *, *\\ng, alice, admin\\ng, bob, admin\\n```\\n\\nDer Matcher des Modells bedeutet:\\n\\n1. `(g(r.sub, p.sub) || keyMatch(r.sub, p. ub))`: Entweder hat der Betreff des Antrags eine Rolle als Betreff der Richtlinie, oder der Betreff des Antrags passt in `keyMatch`. `keyMatch` ist in Funktion in Lua Kasbin Sie k\xf6nnen einen Blick auf die Beschreibung der Funktion werfen und mehr solche Funktionen, die hier [n\xfctzlich sein k\xf6nnten](https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua).\\n2. `keyMatch(r.obj, p.obj)`: Das Objekt der Anfrage entspricht dem Objekt der Richtlinie (URL-Pfad hier).\\n3. `keyMatch(r.act, p.act)`: Die Aktion des Requests stimmt mit der Aktion der Richtlinie \xfcberein (HTTP-Request-Methode hier).\\n\\n## Aktiviere das Plugin auf der Route\\n\\nSobald Sie das Modell und die Richtlinie erstellt haben, k\xf6nnen Sie es auf einer Route mit der APISIX Admin API aktivieren. Um es mit Modell- und Richtlinien-Datei-Pfaden zu aktivieren:\\n\\n```sh\\ncurl http://127.0.0. :9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"model_path\\": \\"/path/to/model\\". onf\\",\\n            \\"policy_path\\": \\"/path/to/policy. sv\\",\\n            \\"Benutzername\\": \\"Benutzername\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127. .0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/*\\"\\n}\'\\n```\\n\\nHier ist das Feld Benutzername der Headername, den Sie im Betreff \xfcbergeben werden. Wenn Sie zum Beispiel den Benutzernamen als `Benutzer \xfcbergeben werden: Alice`, w\xfcrden Sie `\\"Benutzername\\": \\"Benutzer\\"` verwenden.\\n\\nUm Modell-/Richtlinien-Text anstelle von Dateien zu verwenden, k\xf6nnen Sie stattdessen das `-Modell` und `Richtlinie` Felder verwenden:\\n\\n```sh\\ncurl http://127.0.0. :9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"model\\": \\"[request_definition]\\n            r = sub, obj, Akt\\n\\n            [policy_definition]\\n            p = sub, obj, act\\n\\n            [role_definition]\\n            g = _, _\\n\\n            [policy_effect]\\n            e = irgendwo (p. ft == allow))\\n\\n            [matchers]\\n            m = (g(r. ub, p. ub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p. ct)\\",\\n\\n            \\"policy\\": \\"p, *, /, GET\\n            p, admin, *, *\\n            g, alice, admin\\n            g, bob, admin\\",\\n\\n            \\"Benutzername\\": \\"Benutzername\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127. .0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/*\\"\\n}\'\\n```\\n\\n## Aktiviere das Plugin mit einem globalen Modell/Richtlinie\\n\\nEs kann Situationen geben, in denen Sie ein einzelnes Modell und die Richtlinien-Konfiguration \xfcber mehrere Routen hinweg verwenden m\xf6chten. Sie k\xf6nnen dies tun, indem Sie zuerst eine `PUT` Anfrage senden, um das Modell und die Richtlinien-Konfiguration zu den Metadaten des Plugins hinzuzuf\xfcgen von:\\n\\n```sh\\ncurl http://127.0.0. :9080/apisix/admin/plugin_metadata/authz-casbin -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -i -X PUT -d \'\\n{\\n\\"model\\": \\"[request_definition]\\nr = sub, obj, act\\n\\n[policy_definition]\\np = sub, obj, act\\n\\n[role_definition]\\ng = _, _\\n\\n[policy_effect]\\ne = irgendwo (p. ft == allow))\\n\\n[matchers]\\nm = (g(r.sub, p.sub) || keyMatch(r. ub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r. ct, p.act)\\",\\n\\n\\"policy\\": \\"p, *, /, GET\\np, admin, *, *\\ng, alice, admin\\ng, bob, admin\\"\\n}\'\\n```\\n\\nUnd um dann die gleiche Konfiguration auf einer Route zu aktivieren, senden Sie eine Anfrage mit der Admin API:\\n\\n```sh\\ncurl http://127.0.0. :9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127. .0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/route1/*\\"\\n}\'\\n```\\n\\nDies wird die Plugin-Metadatenkonfiguration zur Route hinzuf\xfcgen. Sie k\xf6nnen die Metadatenkonfiguration des Plugins auch ganz einfach aktualisieren, indem Sie die Anfrage an die Metadaten des Plugins mit aktualisiertem Modell und Richtlinien-Konfiguration erneut schicken, das Plugin aktualisiert automatisch alle Routen mit dem Plugin Metadata.\\n\\n## Verwende F\xe4lle\\n\\n- Der prim\xe4re Anwendungsfall dieses Plugins w\xe4re die Implementierung der Autorisierung in Ihren APIs. Sie k\xf6nnen dieses Plugin ganz einfach auf jeder API-Route hinzuf\xfcgen, die Sie mit Ihrem Autorisierungsmodell und Ihrer Richtlinien-Konfiguration verwenden.\\n- Wenn Sie ein einziges Autorisierungsmodell f\xfcr alle Ihre APIs haben m\xf6chten, k\xf6nnen Sie globale Modelle/Richtlinien-Methode verwenden. Dies erleichtert die Aktualisierung der Richtlinie f\xfcr alle Routen, da Sie nur die Metadaten in etcd aktualisieren m\xfcssen.\\n- Wenn Sie f\xfcr jede Route ein anderes Modell verwenden m\xf6chten, k\xf6nnen Sie die Routenmethode verwenden. Dies ist hilfreich, wenn verschiedene API-Routen unterschiedliche Benutzerberechtigungen haben. Sie k\xf6nnen dies auch verwenden, wenn Sie sich mit gr\xf6\xdferen Richtlinien befassen, da es die Autorisierung beschleunigen wird, wenn Sie in mehrere Routen gefiltert werden."},{"id":"/2020/04/21/google-award","metadata":{"permalink":"/de/blog/2020/04/21/google-award","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/de/docusaurus-plugin-content-blog/2020-04-21-google-award.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2020-04-21-google-award.md","title":"Yang Luo - Google Open Source Peer Bonus Gewinner","description":"Today, we are pleased to announce that Casbin\'s founder, Yang Luo is awarded the \\"Google Open Source Peer Bonus winners\\" for his work on Casbin, Npcap and Nmap in 2019 Q3.","date":"2020-04-21T00:00:00.000Z","formattedDate":"21. April 2020","tags":[],"readingTime":0.735,"hasTruncateMarker":false,"authors":[{"name":"Casbin","title":"Offizielles Konto","url":"http://github.com/casbin","imageURL":"https://avatars.githubusercontent.com/casbin"}],"frontMatter":{"title":"Yang Luo - Google Open Source Peer Bonus Gewinner","author":"Casbin","authorTitle":"Offizielles Konto","authorURL":"http://github.com/casbin","authorImageURL":"https://avatars.githubusercontent.com/casbin"},"prevItem":{"title":"Autorisierung in APISIX mit Casbin","permalink":"/de/blog/2021/08/19/apisix-casbin-authorization"},"nextItem":{"title":"Unsere Dokumentation \xfcberarbeiten","permalink":"/de/blog/2018/09/23/new-website"}},"content":"Today, we are pleased to announce that Casbin\'s founder, [Yang Luo](https://github.com/hsluoyz) is awarded the \\"Google Open Source Peer Bonus winners\\" for his work on [Casbin](/), [Npcap](https://nmap.org/npcap/) and [Nmap](https://nmap.org/) in 2019 Q3.\\n\\n![ospb](https://hsluoyz.github.io/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.png)\\n\\n> Der urspr\xfcngliche Pr\xe4mienbrief kann hier [aufgerufen werden.](https://github.com/hsluoyz/hsluoyz.github.io/blob/master/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.pdf).\\n\\nDas [Open Source Peer Bonus](https://opensource.google.com/docs/growing/peer-bonus/) Programm ist beschrieben als:\\n\\n> _Genauso wie ein Google Peer Bonus verwendet wird, um einen Googler, der \xfcber- und dar\xfcber hinausgegangen ist, zu erkennen ein Open Source Peer Bonus erkennt externe Personen an, die einen au\xdfergew\xf6hnlichen Beitrag zu Open Source geleistet haben._\\n\\nDie [Ank\xfcndigung f\xfcr die 2019 Gewinner](https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html) ist verf\xfcgbar unter:\\n\\n> https://opensource.googleblog.com/2020/01/announcing-2019-second cycle-google.html\\n\\nYang und Casbin sind unter Open-Source-Entwicklern und Projekten gelistet, die relevante Auswirkungen haben wie Git, TensorFlow, V8, CPython, LLVM, Apache-Projekte, Winkel- oder Jenkins.\\n\\nWir freuen uns, dass Casbin auf diese Weise f\xfcr seinen Beitrag zu Open Source und Cloud-Sicherheit erkannt wird!\\n\\n_Vielen Dank f\xfcr das Fliegen von Casbin!_"},{"id":"/2018/09/23/new-website","metadata":{"permalink":"/de/blog/2018/09/23/new-website","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/de/docusaurus-plugin-content-blog/2018-09-23-new-website.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2018-09-23-new-website.md","title":"Unsere Dokumentation \xfcberarbeiten","description":"Heute haben wir die Casbin-Dokumentation von GitHub Wiki zu Docs dieser Website migriert, welches von Docusaurus betrieben wird. Docusaurus bietet viele gro\xdfartige Funktionen, wie z.B. bessere Markdown Stile, Volltextsuche, Versionierung, \xdcbersetzung.","date":"2018-09-23T00:00:00.000Z","formattedDate":"23. September 2018","tags":[],"readingTime":0.275,"hasTruncateMarker":false,"authors":[{"name":"Yang Luo","title":"Sch\xf6pfer von Kasbin","url":"http://github.com/hsluoyz","imageURL":"https://avatars.githubusercontent.com/hsluoyz"}],"frontMatter":{"title":"Unsere Dokumentation \xfcberarbeiten","author":"Yang Luo","authorTitle":"Sch\xf6pfer von Kasbin","authorURL":"http://github.com/hsluoyz","authorImageURL":"https://avatars.githubusercontent.com/hsluoyz"},"prevItem":{"title":"Yang Luo - Google Open Source Peer Bonus Gewinner","permalink":"/de/blog/2020/04/21/google-award"},"nextItem":{"title":"node-Casbin: Neues Mitglied der Familie Casbin","permalink":"/de/blog/2018/08/27/node-casbin"}},"content":"Heute haben wir die Casbin-Dokumentation von GitHub Wiki zu `Docs` dieser Website migriert, welches von Docusaurus betrieben wird. Docusaurus bietet viele gro\xdfartige Funktionen, wie z.B. bessere Markdown Stile, Volltextsuche, Versionierung, \xdcbersetzung.\\n\\nDie Dokumentation ist noch nicht perfekt und muss noch abgestimmt werden. Der Quellcode wird auf GitHub: https://github.com/casbin/casbin-website gehostet.\\n\\nJeder Beitrag oder Vorschlag ist willkommen!"},{"id":"/2018/08/27/node-casbin","metadata":{"permalink":"/de/blog/2018/08/27/node-casbin","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/de/docusaurus-plugin-content-blog/2018-08-27-node-casbin.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2018-08-27-node-casbin.md","title":"node-Casbin: Neues Mitglied der Familie Casbin","description":"Heute haben wir Casbin erfolgreich nach Node.js portiert, der den Namen node-Casbin tr\xe4gt.","date":"2018-08-27T00:00:00.000Z","formattedDate":"27. August 2018","tags":[],"readingTime":0.265,"hasTruncateMarker":false,"authors":[{"name":"Zixuan Liu","title":"Casbin-Betreuer","url":"http://github.com/nodece","imageURL":"https://avatars.githubusercontent.com/nodece"}],"frontMatter":{"title":"node-Casbin: Neues Mitglied der Familie Casbin","author":"Zixuan Liu","authorTitle":"Casbin-Betreuer","authorURL":"http://github.com/nodece","authorImageURL":"https://avatars.githubusercontent.com/nodece"},"prevItem":{"title":"Unsere Dokumentation \xfcberarbeiten","permalink":"/de/blog/2018/09/23/new-website"},"nextItem":{"title":"Casbin Server wird gestartet!","permalink":"/de/blog/2018/08/07/launching-casbin-server"}},"content":"Heute haben wir Casbin erfolgreich nach Node.js portiert, der den Namen [node-Casbin](https://github.com/casbin/node-casbin) tr\xe4gt.\\n\\n**node-Casbin** teilt die \xe4hnliche Nutzung und API mit anderen Implementierungen von Casbin. Die Middlewares f\xfcr Express, Koa2 und Egg.js sind bereit f\xfcr . Der Speicheradapter f\xfcr Sequelize wird ebenfalls vorbereitet.\\n\\nHoffentlich kann es deinem Bed\xfcrfnis gut dienen :)\\n\\nGitHub: https://github.com/casbin/node-casbin"},{"id":"/2018/08/07/launching-casbin-server","metadata":{"permalink":"/de/blog/2018/08/07/launching-casbin-server","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/de/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md","source":"@site/i18n/de/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md","title":"Casbin Server wird gestartet!","description":"Einige unserer Kunden fragen, ob Casbin als Service anstelle einer Bibliothek genutzt werden kann. Die Antwort lautet JA. Heute haben wir das Casbin Server Projekt als konkrete L\xf6sung f\xfcr Access Control as a Service gestartet.","date":"2018-08-07T00:00:00.000Z","formattedDate":"7. August 2018","tags":[],"readingTime":0.625,"hasTruncateMarker":false,"authors":[{"name":"Helong Zhang","title":"Casbin-Betreuer","url":"http://github.com/BetaCat0","imageURL":"https://avatars.githubusercontent.com/BetaCat0"}],"frontMatter":{"title":"Casbin Server wird gestartet!","author":"Helong Zhang","authorTitle":"Casbin-Betreuer","authorURL":"http://github.com/BetaCat0","authorImageURL":"https://avatars.githubusercontent.com/BetaCat0"},"prevItem":{"title":"node-Casbin: Neues Mitglied der Familie Casbin","permalink":"/de/blog/2018/08/27/node-casbin"}},"content":"Einige unserer Kunden fragen, ob Casbin als Service anstelle einer Bibliothek genutzt werden kann. Die Antwort lautet **JA**. Heute haben wir das [Casbin Server](https://github.com/casbin/casbin-server) Projekt als konkrete L\xf6sung f\xfcr **Access Control as a Service** gestartet.\\n\\n**Casbin Server** wird von unserem Kernteam aktiv weiterentwickelt. Es hat mehrere Eigenschaften:\\n\\n- Rein entwickelt in Golang.\\n- Kann tausende Casbin-Instanzen verwalten, so dass Sie die Logik der Durchsetzung von Richtlinien von mehreren Diensten auf einen Casbin-Server umstellen k\xf6nnen.\\n- **gRPC** wird verwendet, um mit Casbin Server zu kommunizieren. Wir erw\xe4gen auch, in naher Zukunft den **RESTful** Support hinzuzuf\xfcgen.\\n- Ein benutzerfreundliches Web-Administratorportal f\xfcr nicht-Entwickler Administratoren zur Verwaltung aller Details wie Casbin-Instanzen, Modelle, Richtlinienspeicherung und Lastausgleich.\\n\\n\\n\\nDer Quellcode wird auf GitHub gehostet: https://github.com/casbin/casbin-server\\n\\nAlle Tickets oder Pull-Requests sind willkommen :)"}]}')}}]);