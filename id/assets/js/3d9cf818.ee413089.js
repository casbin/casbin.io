"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2971],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>p});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=t.createContext({}),m=function(e){var a=t.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},c=function(e){var a=m(e.components);return t.createElement(d.Provider,{value:a},e.children)},s={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(n),p=r,b=u["".concat(d,".").concat(p)]||u[p]||s[p]||i;return n?t.createElement(b,o(o({ref:a},c),{},{components:n})):t.createElement(b,o({ref:a},c))}));function p(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in a)hasOwnProperty.call(a,d)&&(l[d]=a[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7049:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var t=n(7462),r=(n(7294),n(3905));const i={id:"model-storage",title:"Model Storage",description:"Penyimpanan model",keywords:["model storage"],authors:["hsluoyz"]},o=void 0,l={unversionedId:"model-storage",id:"model-storage",title:"Model Storage",description:"Penyimpanan model",source:"@site/i18n/id/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/id/docs/model-storage",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/ModelStorage.mdx",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Model Storage",description:"Penyimpanan model",keywords:["model storage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Storage",permalink:"/id/docs/category/storage"},next:{title:"Policy Storage",permalink:"/id/docs/policy-storage"}},d={},m=[{value:"Muat model dari file .CONF",id:"muat-model-dari-file-conf",level:2},{value:"Muat model dari kode",id:"muat-model-dari-kode",level:2},{value:"Muat model dari string",id:"muat-model-dari-string",level:2}],c={toc:m};function s(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Berbeda dengan kebijakan, model hanya dapat dimuat, tidak dapat disimpan. Kami percaya bahwa model bukanlah komponen dinamis dan seharusnya tidak dimodifikasi saat runtime, oleh karena itu kami belum menerapkan API untuk menyimpan model ke dalam penyimpanan."),(0,r.kt)("p",null,"Namun, ada kabar baik. Kami menyediakan tiga cara yang setara untuk memuat model, baik secara statis maupun dinamis:"),(0,r.kt)("h2",{id:"muat-model-dari-file-conf"},"Muat model dari file .CONF"),(0,r.kt)("p",null,"Ini adalah cara paling umum untuk menggunakan Casbin. Mudah dipahami bagi pemula dan nyaman untuk dibagikan ketika Anda memerlukan bantuan dari tim Casbin."),(0,r.kt)("p",null,"Isi dari file ",(0,r.kt)("inlineCode",{parentName:"p"},".CONF")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"examples/rbac","_","model.conf")," adalah sebagai berikut:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,r.kt)("p",null,"Kemudian Anda dapat memuat file model sebagai berikut:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,r.kt)("h2",{id:"muat-model-dari-kode"},"Muat model dari kode"),(0,r.kt)("p",null,"Model dapat diinisialisasi secara dinamis dari kode alih-alih menggunakan file ",(0,r.kt)("inlineCode",{parentName:"p"},".CONF"),". Berikut adalah contoh untuk model RBAC:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Initialize the model from Go code.\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "some(where (p.eft == allow))")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act")\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')),(0,r.kt)("h2",{id:"muat-model-dari-string"},"Muat model dari string"),(0,r.kt)("p",null,"Atau, Anda dapat memuat seluruh teks model dari string multi-baris. Keuntungan dari pendekatan ini adalah Anda tidak perlu memelihara file model."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialize the model from a string.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\nm, _ := model.NewModelFromString(text)\n\n// Load the policy rules from the .CSV file adapter.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Create the enforcer.\ne := casbin.NewEnforcer(m, a)\n')))}s.isMDXComponent=!0}}]);