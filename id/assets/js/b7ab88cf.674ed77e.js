"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4811],{3905:(a,n,e)=>{e.d(n,{Zo:()=>p,kt:()=>d});var t=e(7294);function i(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function r(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,t)}return e}function u(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){i(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function l(a,n){if(null==a)return{};var e,t,i=function(a,n){if(null==a)return{};var e,t,i={},r=Object.keys(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||(i[e]=a[e]);return i}(a,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(i[e]=a[e])}return i}var s=t.createContext({}),m=function(a){var n=t.useContext(s),e=n;return a&&(e="function"==typeof a?a(n):u(u({},n),a)),e},p=function(a){var n=m(a.components);return t.createElement(s.Provider,{value:n},a.children)},k={inlineCode:"code",wrapper:function(a){var n=a.children;return t.createElement(t.Fragment,{},n)}},o=t.forwardRef((function(a,n){var e=a.components,i=a.mdxType,r=a.originalType,s=a.parentName,p=l(a,["components","mdxType","originalType","parentName"]),o=m(e),d=i,g=o["".concat(s,".").concat(d)]||o[d]||k[d]||r;return e?t.createElement(g,u(u({ref:n},p),{},{components:e})):t.createElement(g,u({ref:n},p))}));function d(a,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof a||i){var r=e.length,u=new Array(r);u[0]=o;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=a,l.mdxType="string"==typeof a?a:i,u[1]=l;for(var m=2;m<r;m++)u[m]=e[m];return t.createElement.apply(null,u)}return t.createElement.apply(null,e)}o.displayName="MDXCreateElement"},6650:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>u,default:()=>k,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var t=e(7462),i=(e(7294),e(3905));const r={title:"Otorisasi dalam APISIX menggunakan Casbin",author:"Rushikesh Tote",authorTitle:"Anggota Casbin",authorURL:"http://github.com/rushitote",authorImageURL:"https://avatars.githubusercontent.com/rushitote"},u=void 0,l={permalink:"/id/blog/2021/08/19/apisix-casbin-authorization",editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/i18n/id/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md",source:"@site/i18n/id/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md",title:"Otorisasi dalam APISIX menggunakan Casbin",description:"Pengantar",date:"2021-08-19T00:00:00.000Z",formattedDate:"19 Agustus 2021",tags:[],readingTime:5.08,hasTruncateMarker:!1,authors:[{name:"Rushikesh Tote",title:"Anggota Casbin",url:"http://github.com/rushitote",imageURL:"https://avatars.githubusercontent.com/rushitote"}],frontMatter:{title:"Otorisasi dalam APISIX menggunakan Casbin",author:"Rushikesh Tote",authorTitle:"Anggota Casbin",authorURL:"http://github.com/rushitote",authorImageURL:"https://avatars.githubusercontent.com/rushitote"},nextItem:{title:"Yang Luo - Pemenang Bonus Rekan Sumber Terbuka Google",permalink:"/id/blog/2020/04/21/google-award"}},s={authorsImageUrls:[void 0]},m=[{value:"Pengantar",id:"pengantar",level:2},{value:"Membuat model",id:"membuat-model",level:2},{value:"Membuat kebijakan",id:"membuat-kebijakan",level:2},{value:"Mengaktifkan plugin pada rute",id:"mengaktifkan-plugin-pada-rute",level:2},{value:"Mengaktifkan plugin menggunakan model/kebijakan global",id:"mengaktifkan-plugin-menggunakan-modelkebijakan-global",level:2},{value:"Kasus Penggunaan",id:"kasus-penggunaan",level:2}],p={toc:m};function k(a){let{components:n,...r}=a;return(0,i.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"pengantar"},"Pengantar"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://apisix.apache.org/"},"APISIX")," adalah gateway API berkinerja tinggi dan dapat diskalakan yang bersifat cloud native, berbasis Nginx dan etcd. Ini adalah proyek sumber terbuka oleh Yayasan Perangkat Lunak Apache. Selain itu, yang membuat APISIX begitu baik adalah dukungan untuk banyak plugin bawaan yang hebat yang dapat digunakan untuk mengimplementasikan fitur seperti autentikasi, pemantauan, perutean, dll. Dan fakta bahwa plugin di APISIX dimuat ulang secara dinamis (tanpa memulai ulang) membuatnya sangat dinamis."),(0,i.kt)("p",null,"Namun, saat menggunakan APISIX, mungkin ada skenario di mana Anda ingin menambahkan logika otorisasi yang kompleks dalam aplikasi Anda. Di sinilah authz-casbin mungkin dapat membantu Anda, authz-casbin adalah plugin APISIX yang didasarkan pada ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/lua-casbin/"},"Lua Casbin")," yang memungkinkan otorisasi yang kuat berdasarkan berbagai model kontrol akses. ",(0,i.kt)("a",{parentName:"p",href:"/"},"Casbin")," adalah pustaka otorisasi yang mendukung model kontrol akses seperti ACL, RBAC, ABAC. Awalnya ditulis dalam Go, Casbin telah diadaptasi ke banyak bahasa dan Lua Casbin adalah implementasi Lua dari Casbin. Pengembangan authz-casbin dimulai ketika kami mengusulkan plugin baru untuk otorisasi di repositori APISIX (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/issues/4674"},"#4674"),") yang disetujui oleh anggota inti. Dan setelah tinjauan yang membantu yang menyebabkan beberapa perubahan dan peningkatan besar, PR (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/pull/4710"},"#4710"),") akhirnya digabungkan."),(0,i.kt)("p",null,"Dalam blog ini, kami akan menggunakan plugin authz-casbin untuk menunjukkan bagaimana Anda dapat mengimplementasikan model otorisasi berbasis Role Based Access Control (RBAC) di APISIX."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"CATATAN"),": Anda perlu menggunakan plugin lain atau alur kerja kustom untuk mengautentikasi pengguna karena Casbin hanya akan melakukan otorisasi, bukan autentikasi."),(0,i.kt)("h2",{id:"membuat-model"},"Membuat model"),(0,i.kt)("p",null,"Plugin ini menggunakan tiga parameter untuk mengotorisasi setiap permintaan - subjek, objek, dan aksi. Di sini, subjek adalah nilai dari header nama pengguna, yang bisa berupa sesuatu seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"[username: alice]"),". Kemudian, objeknya adalah jalur URL yang diakses dan tindakannya adalah metode permintaan yang digunakan."),(0,i.kt)("p",null,"Misalkan kita ingin membuat model dengan tiga sumber daya pada jalur - ",(0,i.kt)("inlineCode",{parentName:"p"},"/`\\`, "),"/res1",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," dan `",(0,i.kt)("inlineCode",{parentName:"p"},"/res2"),"`",". Dan kita ingin memiliki model seperti ini:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"gambar",src:e(8478).Z,width:"4520",height:"1720"})),(0,i.kt)("p",null,"Ini berarti semua pengguna (",(0,i.kt)("inlineCode",{parentName:"p"},"*`\\`) misalnya "),"jack",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," dapat mengakses halaman utama (",(0,i.kt)("inlineCode",{parentName:"p"},"/`\\`). Dan pengguna dengan izin "),"admin",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"alice`\\` dan "),"bob",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," dapat mengakses semua halaman dan sumber daya (seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"res1`\\` dan "),"res2",(0,i.kt)("inlineCode",{parentName:"p"},"\\"),"). Juga, mari kita batasi pengguna tanpa izin admin hanya menggunakan metode permintaan `",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),"`",". Untuk skenario ini, kita bisa mendefinisikan model sebagai:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\n")),(0,i.kt)("h2",{id:"membuat-kebijakan"},"Membuat kebijakan"),(0,i.kt)("p",null,"Dari skenario di atas, kebijakan tersebut akan menjadi:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, *, /, GET\np, admin, *, *\ng, alice, admin\ng, bob, admin\n")),(0,i.kt)("p",null,"Pencocok dari model berarti:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"(g(r.sub, p.sub) || keyMatch(r.sub, p.sub))"),": Baik subjek permintaan memiliki peran sebagai subjek kebijakan atau subjek permintaan cocok dengan subjek kebijakan dalam ",(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch"),". ",(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch")," adalah fungsi bawaan dalam Lua Casbin, Anda dapat melihat deskripsi fungsi dan lebih banyak fungsi serupa yang mungkin berguna ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua"},"di sini"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch(r.obj, p.obj)"),": Objek permintaan cocok dengan objek kebijakan (jalur URL di sini)."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch(r.act, p.act)"),": Tindakan permintaan cocok dengan tindakan kebijakan (metode permintaan HTTP di sini).")),(0,i.kt)("h2",{id:"mengaktifkan-plugin-pada-rute"},"Mengaktifkan plugin pada rute"),(0,i.kt)("p",null,"Setelah Anda membuat model dan kebijakan, Anda dapat mengaktifkannya pada rute menggunakan APISIX Admin API. Untuk mengaktifkannya menggunakan jalur file model dan kebijakan:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "model_path": "/path/to/model.conf",\n            "policy_path": "/path/to/policy.csv",\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/*"\n}\'\n')),(0,i.kt)("p",null,"Di sini, bidang username adalah nama header yang akan Anda gunakan untuk meneruskan subjek. Misalnya, jika Anda akan meneruskan header username sebagai ",(0,i.kt)("inlineCode",{parentName:"p"},"user: alice"),", Anda akan menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},'"username": "user"'),"."),(0,i.kt)("p",null,"Untuk menggunakan teks model/kebijakan alih-alih file, Anda dapat menggunakan bidang ",(0,i.kt)("inlineCode",{parentName:"p"},"model")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"policy")," sebagai gantinya:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "model": "[request_definition]\n            r = sub, obj, act\n\n            [policy_definition]\n            p = sub, obj, act\n\n            [role_definition]\n            g = _, _\n\n            [policy_effect]\n            e = some(where (p.eft == allow))\n\n            [matchers]\n            m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)",\n\n            "policy": "p, *, /, GET\n            p, admin, *, *\n            g, alice, admin\n            g, bob, admin",\n\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/*"\n}\'\n')),(0,i.kt)("h2",{id:"mengaktifkan-plugin-menggunakan-modelkebijakan-global"},"Mengaktifkan plugin menggunakan model/kebijakan global"),(0,i.kt)("p",null,"Mungkin ada situasi di mana Anda ingin menggunakan konfigurasi model dan kebijakan tunggal di beberapa rute. Anda dapat melakukannya dengan terlebih dahulu mengirim permintaan ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT")," untuk menambahkan konfigurasi model dan kebijakan ke metadata plugin dengan:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/plugin_metadata/authz-casbin -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -i -X PUT -d \'\n{\n"model": "[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)",\n\n"policy": "p, *, /, GET\np, admin, *, *\ng, alice, admin\ng, bob, admin"\n}\'\n')),(0,i.kt)("p",null,"Kemudian untuk mengaktifkan konfigurasi yang sama pada beberapa rute, kirim permintaan menggunakan Admin API:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/route1/*"\n}\'\n')),(0,i.kt)("p",null,"Ini akan menambahkan konfigurasi metadata plugin ke rute tersebut. Anda juga dapat dengan mudah memperbarui konfigurasi metadata plugin dengan mengirim ulang permintaan ke metadata plugin dengan konfigurasi model dan kebijakan yang diperbarui, plugin akan secara otomatis memperbarui semua rute yang menggunakan metadata plugin tersebut."),(0,i.kt)("h2",{id:"kasus-penggunaan"},"Kasus Penggunaan"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kasus penggunaan utama dari plugin ini adalah dalam mengimplementasikan otorisasi pada API Anda. Anda dapat dengan mudah menambahkan plugin ini pada rute API apa pun yang Anda gunakan dengan konfigurasi model dan kebijakan otorisasi Anda."),(0,i.kt)("li",{parentName:"ul"},"Jika Anda ingin memiliki model otorisasi tunggal untuk semua API Anda, Anda dapat menggunakan metode model/kebijakan global. Hal ini memudahkan pembaruan kebijakan untuk semua rute, karena Anda hanya perlu memperbarui metadata di etcd."),(0,i.kt)("li",{parentName:"ul"},"Sedangkan jika Anda ingin menggunakan model yang berbeda untuk setiap rute yang berbeda, Anda dapat menggunakan metode rute. Ini berguna ketika rute API yang berbeda memiliki set izin pengguna yang berbeda. Anda juga dapat menggunakan ini ketika berhadapan dengan kebijakan yang lebih besar, karena akan mempercepat otorisasi ketika difilter ke beberapa rute.")))}k.isMDXComponent=!0},8478:(a,n,e)=>{e.d(n,{Z:()=>t});const t=e.p+"assets/images/model-1c0c2441dd19f8b957744635985283eb.png"}}]);