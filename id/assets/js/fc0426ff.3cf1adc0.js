"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1816],{3905:(a,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>k});var i=n(7294);function t(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function r(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,i)}return n}function l(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){t(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function d(a,e){if(null==a)return{};var n,i,t=function(a,e){if(null==a)return{};var n,i,t={},r=Object.keys(a);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(t[n]=a[n]);return t}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(t[n]=a[n])}return t}var o=i.createContext({}),m=function(a){var e=i.useContext(o),n=e;return a&&(n="function"==typeof a?a(e):l(l({},e),a)),n},s=function(a){var e=m(a.components);return i.createElement(o.Provider,{value:e},a.children)},p={inlineCode:"code",wrapper:function(a){var e=a.children;return i.createElement(i.Fragment,{},e)}},u=i.forwardRef((function(a,e){var n=a.components,t=a.mdxType,r=a.originalType,o=a.parentName,s=d(a,["components","mdxType","originalType","parentName"]),u=m(n),k=t,c=u["".concat(o,".").concat(k)]||u[k]||p[k]||r;return n?i.createElement(c,l(l({ref:e},s),{},{components:n})):i.createElement(c,l({ref:e},s))}));function k(a,e){var n=arguments,t=e&&e.mdxType;if("string"==typeof a||t){var r=n.length,l=new Array(r);l[0]=u;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=a,d.mdxType="string"==typeof a?a:t,l[1]=d;for(var m=2;m<r;m++)l[m]=n[m];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4993:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var i=n(7462),t=(n(7294),n(3905));const r={id:"api-overview",title:"API Overview",description:"Penggunaan API Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},l=void 0,d={unversionedId:"api-overview",id:"api-overview",title:"API Overview",description:"Penggunaan API Casbin",source:"@site/i18n/id/docusaurus-plugin-content-docs/current/APIOverview.mdx",sourceDirName:".",slug:"/api-overview",permalink:"/id/docs/api-overview",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/APIOverview.mdx",tags:[],version:"current",frontMatter:{id:"api-overview",title:"API Overview",description:"Penggunaan API Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"API",permalink:"/id/docs/category/api"},next:{title:"Management API",permalink:"/id/docs/management-api"}},o={},m=[{value:"Paksa API",id:"paksa-api",level:2},{value:"EnforceEx API",id:"enforceex-api",level:2},{value:"API Manajemen",id:"api-manajemen",level:2},{value:"API Dapatkan",id:"api-dapatkan",level:3},{value:"Tambah, Hapus, Perbarui API",id:"tambah-hapus-perbarui-api",level:3},{value:"API AddEx",id:"api-addex",level:3},{value:"RBAC API",id:"rbac-api",level:2}],s={toc:m};function p(a){let{components:e,...n}=a;return(0,t.kt)("wrapper",(0,i.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Gambaran ini hanya menunjukkan cara menggunakan API Casbin dan tidak menjelaskan bagaimana Casbin diinstal atau bagaimana cara kerjanya. Anda dapat menemukan tutorial tersebut di sini: ",(0,t.kt)("a",{parentName:"p",href:"/docs/get-started"},"Instalasi Casbin")," dan ",(0,t.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"Cara Kerja Casbin"),". Jadi, ketika Anda mulai membaca tutorial ini, kami menganggap bahwa Anda telah sepenuhnya menginstal dan mengimpor Casbin ke dalam kode Anda."),(0,t.kt)("h2",{id:"paksa-api"},"Paksa API"),(0,t.kt)("p",null,"Mari kita mulai dengan API Paksa Casbin. Kami akan memuat model RBAC dari ",(0,t.kt)("inlineCode",{parentName:"p"},"model.conf")," dan memuat kebijakan dari ",(0,t.kt)("inlineCode",{parentName:"p"},"policy.csv"),". Anda dapat mempelajari sintaks Model ",(0,t.kt)("a",{parentName:"p",href:"/docs/syntax-for-models"},"di sini"),", dan kami tidak akan membahasnya dalam tutorial ini. Kami menganggap bahwa Anda dapat memahami file konfigurasi yang diberikan di bawah ini:"),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, admin, data1, write\np, admin, data2, read\np, admin, data2, write\np, alice, data1, read\np, bob, data2, write\ng, amber, admin\ng, abc, admin\n")),(0,t.kt)("p",null,"Setelah membaca file konfigurasi, silakan baca kode berikut."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// Load information from files.\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    log.Fatalf("Error, detail: %s", err)\n}\nok, err := enforcer.Enforce("alice", "data1", "read")\n')),(0,t.kt)("p",null,"Kode ini memuat model kontrol akses dan kebijakan dari file lokal. Fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"casbin.NewEnforcer()")," akan mengembalikan sebuah enforcer. Ini akan mengenali dua parameter sebagai jalur file dan memuat file dari sana. Kesalahan yang terjadi dalam proses disimpan dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"err"),". Kode ini menggunakan adaptor default untuk memuat model dan kebijakan, dan tentu saja, Anda dapat mencapai hasil yang sama dengan menggunakan adaptor pihak ketiga."),(0,t.kt)("p",null,"Kode ",(0,t.kt)("inlineCode",{parentName:"p"},'ok, err := enforcer.Enforce("alice", "data1", "read")')," digunakan untuk mengonfirmasi izin akses. Jika Alice dapat mengakses data1 dengan operasi baca, nilai kembalian ",(0,t.kt)("inlineCode",{parentName:"p"},"ok")," akan menjadi ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"; jika tidak, akan menjadi ",(0,t.kt)("inlineCode",{parentName:"p"},"false"),". Dalam contoh ini, nilai ",(0,t.kt)("inlineCode",{parentName:"p"},"ok")," adalah ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,t.kt)("h2",{id:"enforceex-api"},"EnforceEx API"),(0,t.kt)("p",null,"Terkadang Anda mungkin bertanya-tanya kebijakan mana yang mengizinkan permintaan, jadi kami telah menyiapkan fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),". Anda dapat menggunakannya seperti ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'ok, reason, err := enforcer.EnforceEx("amber", "data1", "read")\nfmt.Println(ok, reason) // true [admin data1 read]\n')),(0,t.kt)("p",null,"Fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()")," akan mengembalikan string kebijakan yang tepat dalam nilai kembalian ",(0,t.kt)("inlineCode",{parentName:"p"},"reason"),". Dalam contoh ini, ",(0,t.kt)("inlineCode",{parentName:"p"},"amber")," memiliki peran ",(0,t.kt)("inlineCode",{parentName:"p"},"admin"),", sehingga kebijakan ",(0,t.kt)("inlineCode",{parentName:"p"},"p, admin, data1, read")," mengizinkan permintaan ini menjadi ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),". Output dari kode ini ada dalam komentar."),(0,t.kt)("p",null,"Casbin telah menyediakan banyak API yang mirip dengan ini. API-API ini menambahkan beberapa fungsi tambahan ke yang dasar. Termasuk:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"ok, err := enforcer.EnforceWithMatcher(matcher, request)")),(0,t.kt)("p",{parentName:"li"},"Fungsi ini menggunakan matcher.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"ok, reason, err := enforcer.EnforceExWithMatcher(matcher, request)")),(0,t.kt)("p",{parentName:"li"},"Ini adalah kombinasi dari ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceWithMatcher()")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),".")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},(0,t.kt)("inlineCode",{parentName:"p"},"boolArray, err := enforcer.BatchEnforce(requests)")),(0,t.kt)("p",{parentName:"li"},"Fungsi ini memungkinkan daftar pekerjaan dan mengembalikan sebuah array."))),(0,t.kt)("p",null,"Ini adalah kasus penggunaan sederhana dari Casbin. Anda dapat menggunakan Casbin untuk memulai server otorisasi menggunakan API ini. Kami akan menunjukkan beberapa jenis API lainnya di paragraf berikutnya."),(0,t.kt)("h2",{id:"api-manajemen"},"API Manajemen"),(0,t.kt)("h3",{id:"api-dapatkan"},"API Dapatkan"),(0,t.kt)("p",null,"API ini digunakan untuk mengambil objek tertentu dalam kebijakan. Dalam contoh ini, kami sedang memuat enforcer dan mengambil sesuatu darinya."),(0,t.kt)("p",null,"Silakan lihat kode berikut:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\nallSubjects := enforcer.GetAllSubjects()\nfmt.Println(allSubjects)\n')),(0,t.kt)("p",null,"Mirip dengan contoh sebelumnya, empat baris pertama digunakan untuk memuat informasi yang diperlukan dari file lokal. Kami tidak akan membahas itu lebih lanjut di sini."),(0,t.kt)("p",null,"Kode ",(0,t.kt)("inlineCode",{parentName:"p"},"allSubjects := enforcer.GetAllSubjects()")," mengambil semua subjek dalam file kebijakan dan mengembalikannya sebagai sebuah array. Kami kemudian mencetak array tersebut."),(0,t.kt)("p",null,"Biasanya, output dari kode tersebut seharusnya:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-text"},"[admin alice bob]\n")),(0,t.kt)("p",null,"Anda juga dapat mengubah fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAllSubjects()")," menjadi ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAllNamedSubjects()")," untuk mendapatkan daftar subjek yang muncul dalam kebijakan bernama saat ini."),(0,t.kt)("p",null,"Demikian pula, kami telah menyiapkan fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"GetAll")," untuk ",(0,t.kt)("inlineCode",{parentName:"p"},"Objects, Actions, Roles"),". Untuk mengakses fungsi-fungsi ini, Anda hanya perlu mengganti kata ",(0,t.kt)("inlineCode",{parentName:"p"},"Subject")," dalam nama fungsi dengan kategori yang diinginkan."),(0,t.kt)("p",null,"Selain itu, terdapat lebih banyak getter yang tersedia untuk kebijakan. Metode pemanggilan dan nilai kembaliannya serupa dengan yang disebutkan di atas."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"policy = e.GetPolicy()")," mengambil semua aturan otorisasi dalam kebijakan."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredPolicy := e.GetFilteredPolicy(0, "alice")')," mengambil semua aturan otorisasi dalam kebijakan dengan filter bidang yang ditentukan."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedPolicy := e.GetNamedPolicy("p")')," mengambil semua aturan otorisasi dalam kebijakan bernama."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredNamedPolicy = e.GetFilteredNamedPolicy("p", 0, "bob")')," mengambil semua aturan otorisasi dalam kebijakan bernama dengan filter bidang yang ditentukan."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},"groupingPolicy := e.GetGroupingPolicy()")," mengambil semua aturan pewarisan peran dalam kebijakan."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'filteredGroupingPolicy := e.GetFilteredGroupingPolicy(0, "alice")')," mengambil semua aturan pewarisan peran dalam kebijakan dengan filter bidang yang ditentukan."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetNamedGroupingPolicy("g")')," mengambil semua aturan pewarisan peran dalam kebijakan."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetFilteredNamedGroupingPolicy("g", 0, "alice")')," mengambil semua aturan pewarisan peran dalam kebijakan dengan filter bidang yang ditentukan.")),(0,t.kt)("h3",{id:"tambah-hapus-perbarui-api"},"Tambah, Hapus, Perbarui API"),(0,t.kt)("p",null,"Casbin menyediakan berbagai API untuk menambahkan, menghapus, atau memodifikasi kebijakan secara dinamis pada saat runtime."),(0,t.kt)("p",null,"Kode berikut menunjukkan cara menambahkan, menghapus, dan memperbarui kebijakan, serta cara memeriksa apakah suatu kebijakan ada:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'// load information from files\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n\n// add a policy and use HasPolicy() to confirm\nenforcer.AddPolicy("added_user", "data1", "read")\nhasPolicy := enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // true, the policy was added successfully\n\n// remove a policy and use HasPolicy() to confirm\nenforcer.RemovePolicy("alice", "data1", "read")\nhasPolicy = enforcer.HasPolicy("alice", "data1", "read")\nfmt.Println(hasPolicy) // false, the policy was removed successfully\n\n// update a policy and use HasPolicy() to confirm\nenforcer.UpdatePolicy([]string{"added_user", "data1", "read"}, []string{"added_user", "data1", "write"})\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // false, the original policy has expired\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "write")\nfmt.Println(hasPolicy) // true, the new policy is in effect\n')),(0,t.kt)("p",null,"Dengan menggunakan API ini, Anda dapat mengedit kebijakan Anda secara dinamis. Demikian pula, kami telah menyediakan API serupa untuk ",(0,t.kt)("inlineCode",{parentName:"p"},"FilteredPolicy, NamedPolicy, FilteredNamedPolicy, GroupingPolicy, NamedGroupingPolicy, FilteredGroupingPolicy, FilteredNamedGroupingPolicy"),". Untuk menggunakannya, gantilah kata ",(0,t.kt)("inlineCode",{parentName:"p"},"Policy")," dalam nama fungsi dengan kategori yang sesuai."),(0,t.kt)("p",null,"Selain itu, dengan mengubah parameter menjadi array, Anda dapat melakukan pengeditan batch pada kebijakan Anda."),(0,t.kt)("p",null,"Misalnya, pertimbangkan fungsi-fungsi seperti ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicy([]string{"eve", "data3", "read"}, []string{"eve", "data3", "write"})\n')),(0,t.kt)("p",null,"Jika kita mengubah ",(0,t.kt)("inlineCode",{parentName:"p"},"Policy")," menjadi ",(0,t.kt)("inlineCode",{parentName:"p"},"Policies")," dan memodifikasi parameter sebagai berikut:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicies([][]string{{"eve", "data3", "read"}, {"jack", "data3", "read"}}, [][]string{{"eve", "data3", "write"}, {"jack", "data3", "write"}})\n')),(0,t.kt)("p",null,"maka kita dapat melakukan pengeditan batch pada kebijakan ini."),(0,t.kt)("p",null,"Operasi yang sama juga dapat diterapkan pada ",(0,t.kt)("inlineCode",{parentName:"p"},"GroupingPolicy, NamedGroupingPolicy"),"."),(0,t.kt)("h3",{id:"api-addex"},"API AddEx"),(0,t.kt)("p",null,"Casbin menyediakan serangkaian API AddEx untuk membantu pengguna menambahkan aturan secara batch."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},"AddPoliciesEx(rules [][]string) (bool, error)\nAddNamedPoliciesEx(ptype string, rules [][]string) (bool, error)\nAddGroupingPoliciesEx(rules [][]string) (bool, error)\nAddNamedGroupingPoliciesEx(ptype string, rules [][]string) (bool, error)\nSelfAddPoliciesEx(sec string, ptype string, rules [][]string) (bool, error) \n")),(0,t.kt)("p",null,"Perbedaan antara metode-metode ini dan metode-metode tanpa akhiran Ex adalah jika salah satu aturan sudah ada, mereka akan terus memeriksa aturan berikutnya alih-alih mengembalikan false segera."),(0,t.kt)("p",null,"Misalnya, mari kita bandingkan ",(0,t.kt)("inlineCode",{parentName:"p"},"AddPolicies")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"AddPoliciesEx"),"."),(0,t.kt)("p",null,"Anda dapat menjalankan dan mengamati kode berikut dengan menyalin ke dalam pengujian di casbin."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'func TestDemo(t *testing.T) {\n    e, err := NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n    if err != nil {\n        fmt.Printf("Error, details: %s\\n", err)\n    }\n    e.ClearPolicy()\n    e.AddPolicy("user1", "data1", "read")\n    fmt.Println(e.GetPolicy())\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // policy {"user1", "data1", "read"} now exists\n\n    // Use AddPolicies to add rules in batches\n    ok, _ := e.AddPolicies([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} failed to add because {"user1", "data1", "read"} already exists\n    // AddPolicies returns false and no other policies are checked, even though they may not exist in the existing ruleset\n    // ok == false\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // Use AddPoliciesEx to add rules in batches\n    ok, _ = e.AddPoliciesEx([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} is added successfully\n    // because AddPoliciesEx automatically filters the existing {"user1", "data1", "read"}\n    // ok == true\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n}\n')),(0,t.kt)("h2",{id:"rbac-api"},"RBAC API"),(0,t.kt)("p",null,"Casbin menyediakan beberapa API untuk Anda memodifikasi model dan kebijakan RBAC. Jika Anda familiar dengan RBAC, Anda dapat dengan mudah menggunakan API ini."),(0,t.kt)("p",null,"Di sini, kami hanya menunjukkan cara menggunakan API RBAC Casbin dan tidak akan membahas RBAC itu sendiri. Anda bisa mendapatkan detail lebih lanjut ",(0,t.kt)("a",{parentName:"p",href:"/docs/rbac"},"di sini"),"."),(0,t.kt)("p",null,"Kami menggunakan kode berikut untuk memuat model dan kebijakan, seperti sebelumnya."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n')),(0,t.kt)("p",null,"Kemudian, kita dapat menggunakan instance dari Enforcer ",(0,t.kt)("inlineCode",{parentName:"p"},"enforcer")," untuk mengakses API ini."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'roles, err := enforcer.GetRolesForUser("amber")\nfmt.Println(roles) // [admin]\nusers, err := enforcer.GetUsersForRole("admin")\nfmt.Println(users) // [amber abc]\n')),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," mengembalikan sebuah array yang berisi semua peran yang dimiliki oleh amber. Dalam contoh ini, amber hanya memiliki satu peran, yaitu admin, sehingga array ",(0,t.kt)("inlineCode",{parentName:"p"},"roles")," adalah ",(0,t.kt)("inlineCode",{parentName:"p"},"[admin]"),". Demikian pula, Anda dapat menggunakan ",(0,t.kt)("inlineCode",{parentName:"p"},"GetUsersForRole()")," untuk mendapatkan pengguna yang termasuk dalam suatu peran. Nilai kembalian dari fungsi ini juga berupa sebuah array."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.HasRoleForUser("amber", "admin") // true\n')),(0,t.kt)("p",null,"Anda dapat menggunakan ",(0,t.kt)("inlineCode",{parentName:"p"},"HasRoleForUser()")," untuk mengonfirmasi apakah pengguna termasuk dalam peran tersebut. Dalam contoh ini, amber adalah anggota dari admin, sehingga nilai kembalian dari fungsi tersebut adalah ",(0,t.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("bob", "data2", "write")) // true\nenforcer.DeletePermission("data2", "write")\nfmt.Println(enforcer.Enforce("bob", "data2", "write")) // false\n')),(0,t.kt)("p",null,"Anda dapat menggunakan ",(0,t.kt)("inlineCode",{parentName:"p"},"DeletePermission()")," untuk menghapus sebuah izin."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("alice", "data1", "read")) // true\nenforcer.DeletePermissionForUser("alice", "data1", "read")\nfmt.Println(enforcer.Enforce("alice", "data1", "read")) // false\n')),(0,t.kt)("p",null,"Dan gunakan ",(0,t.kt)("inlineCode",{parentName:"p"},"DeletePermissionForUser()")," untuk menghapus izin untuk seorang pengguna."),(0,t.kt)("p",null,"Casbin memiliki banyak API seperti ini. Metode pemanggilan dan nilai kembaliannya memiliki gaya yang sama dengan API di atas. Anda dapat menemukan API ini di ",(0,t.kt)("a",{parentName:"p",href:"/docs/rbac-api"},"dokumen berikutnya"),"."))}p.isMDXComponent=!0}}]);