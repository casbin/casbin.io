"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[3732],{3905:(e,o,t)=>{t.d(o,{Zo:()=>c,kt:()=>m});var a=t(7294);function r(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function n(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?n(Object(t),!0).forEach((function(o){r(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function s(e,o){if(null==e)return{};var t,a,r=function(e,o){if(null==e)return{};var t,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],o.indexOf(t)>=0||(r[t]=e[t]);return r}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var o=a.useContext(l),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},c=function(e){var o=p(e.components);return a.createElement(l.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},u=a.forwardRef((function(e,o){var t=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||n;return t?a.createElement(f,i(i({ref:o},c),{},{components:t})):a.createElement(f,i({ref:o},c))}));function m(e,o){var t=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var n=t.length,i=new Array(n);i[0]=u;var s={};for(var l in o)hasOwnProperty.call(o,l)&&(s[l]=o[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<n;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3202:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const n={id:"how-it-works",title:"How It Works",description:"Como o Casbin Funciona",keywords:["PERM","request","policy","matcher","effect"],authors:["nodece"]},i=void 0,s={unversionedId:"how-it-works",id:"how-it-works",title:"How It Works",description:"Como o Casbin Funciona",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/HowItWorks.mdx",sourceDirName:".",slug:"/how-it-works",permalink:"/pt/docs/how-it-works",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/HowItWorks.mdx",tags:[],version:"current",frontMatter:{id:"how-it-works",title:"How It Works",description:"Como o Casbin Funciona",keywords:["PERM","request","policy","matcher","effect"],authors:["nodece"]},sidebar:"docs",previous:{title:"Get Started",permalink:"/pt/docs/get-started"},next:{title:"Tutorials",permalink:"/pt/docs/tutorials"}},l={},p=[{value:"Request",id:"request",level:3},{value:"Policy",id:"policy",level:3},{value:"Matcher",id:"matcher",level:3},{value:"Effect",id:"effect",level:3}],c={toc:p};function d(e){let{components:o,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"No Casbin, um modelo de controle de acesso \xe9 abstra\xeddo em um arquivo CONF baseado no ",(0,r.kt)("strong",{parentName:"p"},"metamodelo PERM (Policy, Effect, Request, Matchers)"),". Trocar ou atualizar o mecanismo de autoriza\xe7\xe3o para um projeto \xe9 t\xe3o simples quanto modificar uma configura\xe7\xe3o. Voc\xea pode personalizar seu pr\xf3prio modelo de controle de acesso combinando os modelos dispon\xedveis. Por exemplo, voc\xea pode combinar pap\xe9is RBAC e atributos ABAC juntos dentro de um mesmo modelo e compartilhar um conjunto de regras de pol\xedtica."),(0,r.kt)("p",null,"O modelo PERM \xe9 composto por quatro fundamentos: Pol\xedtica, Efeito, Requisi\xe7\xe3o e Correspondentes. Esses fundamentos descrevem a rela\xe7\xe3o entre recursos e usu\xe1rios."),(0,r.kt)("h3",{id:"request"},"Request"),(0,r.kt)("p",null,"Define os par\xe2metros da requisi\xe7\xe3o. Uma requisi\xe7\xe3o b\xe1sica \xe9 um objeto tupla, exigindo pelo menos um sujeito (entidade acessada), objeto (recurso acessado) e a\xe7\xe3o (m\xe9todo de acesso)."),(0,r.kt)("p",null,"Por exemplo, uma defini\xe7\xe3o de requisi\xe7\xe3o pode ser assim:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"r={sub,obj,act}")),(0,r.kt)("h3",{id:"policy"},"Policy"),(0,r.kt)("p",null,"Esta defini\xe7\xe3o especifica os nomes dos par\xe2metros e a ordem exigida pela fun\xe7\xe3o de correspond\xeancia de controle de acesso. Define o modelo para a estrat\xe9gia de acesso."),(0,r.kt)("p",null,"Especifica o nome e a ordem dos campos no documento de regra de Pol\xedtica."),(0,r.kt)("p",null,"Por exemplo:"),(0,r.kt)("h3",{id:"matcher"},"Matcher"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"p={sub, obj, act}")," ou ",(0,r.kt)("inlineCode",{parentName:"p"},"p={sub, obj, act, eft}")),(0,r.kt)("p",null,"Nota: Se eft (resultado da pol\xedtica) n\xe3o for definido, o campo de resultado no arquivo de pol\xedtica n\xe3o ser\xe1 lido, e o resultado da pol\xedtica correspondente ser\xe1 permitido por padr\xe3o. Define as regras de correspond\xeancia para Requisi\xe7\xe3o e Pol\xedtica."),(0,r.kt)("h3",{id:"effect"},"Effect"),(0,r.kt)("p",null,"Por exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"m = r.sub == p.sub && r.act == p.act && r.obj == p.obj")),(0,r.kt)("p",null,"Esta regra de correspond\xeancia simples e comum significa que se os par\xe2metros solicitados (entidades, recursos e m\xe9todos) forem iguais aos encontrados na pol\xedtica, ent\xe3o o resultado da pol\xedtica (",(0,r.kt)("inlineCode",{parentName:"p"},"p.eft"),") \xe9 retornado."),(0,r.kt)("p",null,"O resultado da estrat\xe9gia ser\xe1 salvo em ",(0,r.kt)("inlineCode",{parentName:"p"},"p.eft"),"."),(0,r.kt)("p",null,"Realiza um julgamento de combina\xe7\xe3o l\xf3gica nos resultados de correspond\xeancia dos Correspondentes."),(0,r.kt)("p",null,"Por exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"e = some(where(p.eft == allow))")),(0,r.kt)("p",null,"Esta declara\xe7\xe3o significa que se o resultado da estrat\xe9gia de correspond\xeancia ",(0,r.kt)("inlineCode",{parentName:"p"},"p.eft")," tiver o resultado de (algum) permitir, ent\xe3o o resultado final \xe9 verdadeiro. Vamos olhar para outro exemplo: ",(0,r.kt)("inlineCode",{parentName:"p"},"e = some(where (p.eft == allow)) && !some(where (p.eft == deny))")),(0,r.kt)("p",null,"O significado l\xf3gico desta combina\xe7\xe3o de exemplo \xe9: se houver uma estrat\xe9gia que corresponda ao resultado de permitir e nenhuma estrat\xe9gia que corresponda ao resultado de negar, o resultado \xe9 verdadeiro. Em outras palavras, \xe9 verdadeiro quando as estrat\xe9gias de correspond\xeancia s\xe3o todas de permitir."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"# Request definition\n[request_definition]\nr = sub, obj, act\n\n# Policy definition\n[policy_definition]\np = sub, obj, act\n\n# Policy effect\n[policy_effect]\ne = some(where (p.eft == allow))\n\n# Matchers\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act\n\n")),(0,r.kt)("p",null,"Se houver qualquer nega\xe7\xe3o, ambos s\xe3o falsos (mais simplesmente, quando permitir e negar existem ao mesmo tempo, a nega\xe7\xe3o tem preced\xeancia)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, bob, data2, write\n")),(0,r.kt)("p",null,"O modelo mais b\xe1sico e simples no Casbin \xe9 o ACL."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"O modelo CONF para ACL \xe9 o seguinte:"),(0,r.kt)("li",{parentName:"ul"},"Um exemplo de pol\xedtica para o modelo ACL \xe9:")),(0,r.kt)("p",null,"Isso significa:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"# Matchers\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj \\\n  && r.act == p.act\n")),(0,r.kt)("p",null,"alice pode ler data1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"# Matchers\n[matchers]\nm = r.obj == p.obj && r.act == p.act || r.obj in ('data2', 'data3')\n")),(0,r.kt)("p",null,"N\xf3s tamb\xe9m suportamos o modo multi-linha anexando '' no final:"),(0,r.kt)("p",null,"For more operators, you may take a look at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casbin/govaluate"},"govaluate"),"."))}d.isMDXComponent=!0}}]);