"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1909],{6936:o=>{o.exports=JSON.parse('{"blogPosts":[{"id":"/2021/08/19/apisix-casbin-authorization","metadata":{"permalink":"/pt/blog/2021/08/19/apisix-casbin-authorization","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/pt/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md","source":"@site/i18n/pt/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md","title":"Autoriza\xe7\xe3o no APISIX usando Casbin","description":"Introdu\xe7\xe3o","date":"2021-08-19T00:00:00.000Z","formattedDate":"19 de agosto de 2021","tags":[],"readingTime":5.75,"hasTruncateMarker":false,"authors":[{"name":"Rushikesh Tote","title":"Membro do Casbin","url":"http://github.com/rushitote","imageURL":"https://avatars.githubusercontent.com/rushitote"}],"frontMatter":{"title":"Autoriza\xe7\xe3o no APISIX usando Casbin","author":"Rushikesh Tote","authorTitle":"Membro do Casbin","authorURL":"http://github.com/rushitote","authorImageURL":"https://avatars.githubusercontent.com/rushitote"},"nextItem":{"title":"Yang Luo - Vencedor do Pr\xeamio Google Open Source Peer Bonus","permalink":"/pt/blog/2020/04/21/google-award"}},"content":"## Introdu\xe7\xe3o\\n\\n[APISIX](https://apisix.apache.org/) \xe9 um gateway de API nativo da nuvem de alta performance e escal\xe1vel baseado em Nginx e etcd. \xc9 um projeto de c\xf3digo aberto da Apache Software Foundation. Al\xe9m disso, o que torna o APISIX t\xe3o bom \xe9 o suporte de muitos \xf3timos plugins integrados que podem ser usados para implementar recursos como autentica\xe7\xe3o, monitoramento, roteamento, etc. E o fato de que os plugins no APISIX s\xe3o recarregados em tempo real (sem reinicializa\xe7\xf5es) o torna muito din\xe2mico.\\n\\nMas ao usar o APISIX, podem surgir cen\xe1rios em que voc\xea queira adicionar l\xf3gica de autoriza\xe7\xe3o complexa em sua aplica\xe7\xe3o. \xc9 aqui que o authz-casbin pode ajud\xe1-lo, authz-casbin \xe9 um plugin do APISIX baseado no [Lua Casbin](https://github.com/casbin/lua-casbin/) que permite uma autoriza\xe7\xe3o poderosa baseada em v\xe1rios modelos de controle de acesso. [Casbin](/) \xe9 uma biblioteca de autoriza\xe7\xe3o que suporta modelos de controle de acesso como ACL, RBAC, ABAC. Originalmente escrito em Go, foi portado para muitas linguagens e Lua Casbin \xe9 a implementa\xe7\xe3o em Lua do Casbin. O desenvolvimento do authz-casbin come\xe7ou quando propusemos um novo plugin para autoriza\xe7\xe3o no reposit\xf3rio do APISIX ([#4674](https://github.com/apache/apisix/issues/4674)) ao qual os membros principais concordaram. E ap\xf3s as revis\xf5es \xfateis que levaram a algumas mudan\xe7as importantes e melhorias, o PR ([#4710](https://github.com/apache/apisix/pull/4710)) foi finalmente mesclado.\\n\\nNeste blog, usaremos o plugin authz-casbin para mostrar como voc\xea pode implementar um modelo de autoriza\xe7\xe3o baseado em Controle de Acesso Baseado em Fun\xe7\xf5es (RBAC) no APISIX.\\n\\n**NOTA**: Voc\xea precisar\xe1 usar algum outro plugin ou fluxo de trabalho personalizado para autenticar o usu\xe1rio, j\xe1 que o Casbin far\xe1 apenas autoriza\xe7\xe3o e n\xe3o autentica\xe7\xe3o.\\n\\n## Criando um modelo\\n\\nO plugin usa tr\xeas par\xe2metros para autorizar qualquer solicita\xe7\xe3o - sujeito, objeto e a\xe7\xe3o. Aqui, sujeito \xe9 o valor do cabe\xe7alho do nome de usu\xe1rio, que poderia ser algo como `[username: alice]`. Ent\xe3o, o objeto \xe9 o caminho da URL que est\xe1 sendo acessado e a a\xe7\xe3o \xe9 o m\xe9todo de solicita\xe7\xe3o usado.\\n\\nVamos dizer que queremos criar um modelo com tr\xeas recursos nos caminhos - `/`, `/res1` e `/res2`. E queremos ter um modelo assim:\\n\\n![imagem](/img/blog/model.png)\\n\\nIsso significaria que todos os usu\xe1rios (`*`) como por exemplo `jack` podem acessar a p\xe1gina inicial (`/`). E usu\xe1rios com permiss\xf5es de `admin` como `alice` e `bob` podem acessar todas as p\xe1ginas e recursos (como `res1` e `res2`). Al\xe9m disso, vamos restringir usu\xe1rios sem quaisquer permiss\xf5es de admin a usar apenas o m\xe9todo de solicita\xe7\xe3o `GET`. Para este cen\xe1rio, poder\xedamos definir o modelo como:\\n\\n```ini\\n[request_definition]\\nr = sub, obj, act\\n\\n[policy_definition]\\np = sub, obj, act\\n\\n[role_definition]\\ng = _, _\\n\\n[policy_effect]\\ne = some(where (p.eft == allow))\\n\\n[matchers]\\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\n```\\n\\n## Criando uma pol\xedtica\\n\\nDo cen\xe1rio acima, a pol\xedtica seria:\\n\\n```csv\\np, *, /, GET\\np, admin, *, *\\ng, alice, admin\\ng, bob, admin\\n```\\n\\nO matcher do modelo significa:\\n\\n1. `(g(r.sub, p.sub) || keyMatch(r.sub, p.sub))`: Ou o sujeito da solicita\xe7\xe3o tem um papel como o sujeito da pol\xedtica ou o sujeito da solicita\xe7\xe3o corresponde ao sujeito da pol\xedtica em `keyMatch`. `keyMatch` \xe9 uma fun\xe7\xe3o integrada no Lua Casbin, voc\xea pode dar uma olhada na descri\xe7\xe3o da fun\xe7\xe3o e em mais fun\xe7\xf5es que podem ser \xfateis [aqui](https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua).\\n2. `keyMatch(r.obj, p.obj)`: O objeto da solicita\xe7\xe3o corresponde ao objeto da pol\xedtica (caminho da URL aqui).\\n3. `keyMatch(r.act, p.act)`: A a\xe7\xe3o da solicita\xe7\xe3o corresponde \xe0 a\xe7\xe3o da pol\xedtica (m\xe9todo de solicita\xe7\xe3o HTTP aqui).\\n\\n## Habilitando o plugin em uma rota\\n\\nUma vez que voc\xea tenha criado o modelo e a pol\xedtica, voc\xea pode habilit\xe1-los em uma rota usando a API Admin do APISIX. Para habilit\xe1-los usando caminhos de arquivos de modelo e pol\xedtica:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"model_path\\": \\"/path/to/model.conf\\",\\n            \\"policy_path\\": \\"/path/to/policy.csv\\",\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127.0.0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/*\\"\\n}\'\\n```\\n\\nAqui, o campo de nome de usu\xe1rio \xe9 o nome do cabe\xe7alho que voc\xea usar\xe1 para passar o sujeito. Por exemplo, se voc\xea for passar o cabe\xe7alho de nome de usu\xe1rio como `user: alice`, voc\xea usaria `\\"username\\": \\"user\\"`.\\n\\nPara usar texto de modelo/pol\xedtica em vez de arquivos, voc\xea pode usar os campos `model` e `policy` em vez disso:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"model\\": \\"[request_definition]\\n            r = sub, obj, act\\n\\n            [policy_definition]\\n            p = sub, obj, act\\n\\n            [role_definition]\\n            g = _, _\\n\\n            [policy_effect]\\n            e = some(where (p.eft == allow))\\n\\n            [matchers]\\n            m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\",\\n\\n            \\"policy\\": \\"p, *, /, GET\\n            p, admin, *, *\\n            g, alice, admin\\n            g, bob, admin\\",\\n\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127.0.0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/*\\"\\n}\'\\n```\\n\\n## Habilitando o plugin usando um modelo/pol\xedtica global\\n\\nPode haver situa\xe7\xf5es em que voc\xea queira usar uma \xfanica configura\xe7\xe3o de modelo e pol\xedtica em v\xe1rias rotas. Voc\xea pode fazer isso primeiro enviando uma solicita\xe7\xe3o `PUT` para adicionar a configura\xe7\xe3o de modelo e pol\xedtica aos metadados do plugin por:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/plugin_metadata/authz-casbin -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -i -X PUT -d \'\\n{\\n\\"model\\": \\"[request_definition]\\nr = sub, obj, act\\n\\n[policy_definition]\\np = sub, obj, act\\n\\n[role_definition]\\ng = _, _\\n\\n[policy_effect]\\ne = some(where (p.eft == allow))\\n\\n[matchers]\\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\",\\n\\n\\"policy\\": \\"p, *, /, GET\\np, admin, *, *\\ng, alice, admin\\ng, bob, admin\\"\\n}\'\\n```\\n\\nE ent\xe3o para habilitar a mesma configura\xe7\xe3o em alguma rota, envie uma solicita\xe7\xe3o usando a API Admin:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127.0.0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/route1/*\\"\\n}\'\\n```\\n\\nIsso adicionar\xe1 a configura\xe7\xe3o de metadados do plugin \xe0 rota. Voc\xea tamb\xe9m pode facilmente atualizar a configura\xe7\xe3o de metadados do plugin reenviando a solicita\xe7\xe3o aos metadados do plugin com a configura\xe7\xe3o de modelo e pol\xedtica atualizada, o plugin atualizar\xe1 automaticamente todas as rotas usando a configura\xe7\xe3o de metadados do plugin.\\n\\n## Casos de Uso\\n\\n- O principal caso de uso deste plugin seria na implementa\xe7\xe3o de autoriza\xe7\xe3o em suas APIs. Voc\xea pode facilmente adicionar este plugin em qualquer rota de API que voc\xea esteja usando com seu modelo de autoriza\xe7\xe3o e configura\xe7\xe3o de pol\xedtica.\\n- Se voc\xea quiser ter um \xfanico modelo de autoriza\xe7\xe3o para todas as suas APIs, voc\xea pode usar o m\xe9todo de modelo/pol\xedtica global. Isso facilita a atualiza\xe7\xe3o da pol\xedtica para todas as rotas, j\xe1 que voc\xea s\xf3 precisa atualizar os metadados no etcd.\\n- Enquanto se voc\xea gostaria de usar um modelo diferente para cada rota diferente, voc\xea pode usar o m\xe9todo de rota. Isso \xe9 \xfatil quando diferentes rotas de API t\xeam diferentes conjuntos de permiss\xf5es de usu\xe1rio. Voc\xea tamb\xe9m pode usar isso quando estiver lidando com pol\xedticas maiores, pois tornar\xe1 a autoriza\xe7\xe3o mais r\xe1pida quando filtrada em v\xe1rias rotas."},{"id":"/2020/04/21/google-award","metadata":{"permalink":"/pt/blog/2020/04/21/google-award","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/pt/docusaurus-plugin-content-blog/2020-04-21-google-award.md","source":"@site/i18n/pt/docusaurus-plugin-content-blog/2020-04-21-google-award.md","title":"Yang Luo - Vencedor do Pr\xeamio Google Open Source Peer Bonus","description":"Hoje, temos o prazer de anunciar que o fundador do Casbin, Yang Luo, foi premiado com o \\"vencedores do Google Open Source Peer Bonus\\" por seu trabalho no Casbin, Npcap e Nmap no 3\xba trimestre de 2019.","date":"2020-04-21T00:00:00.000Z","formattedDate":"21 de abril de 2020","tags":[],"readingTime":0.79,"hasTruncateMarker":false,"authors":[{"name":"Casbin","title":"Conta Oficial","url":"http://github.com/casbin","imageURL":"https://avatars.githubusercontent.com/casbin"}],"frontMatter":{"title":"Yang Luo - Vencedor do Pr\xeamio Google Open Source Peer Bonus","author":"Casbin","authorTitle":"Conta Oficial","authorURL":"http://github.com/casbin","authorImageURL":"https://avatars.githubusercontent.com/casbin"},"prevItem":{"title":"Autoriza\xe7\xe3o no APISIX usando Casbin","permalink":"/pt/blog/2021/08/19/apisix-casbin-authorization"},"nextItem":{"title":"Reestruturando nossa Documenta\xe7\xe3o","permalink":"/pt/blog/2018/09/23/new-website"}},"content":"Hoje, temos o prazer de anunciar que o fundador do Casbin, [Yang Luo](https://github.com/hsluoyz), foi premiado com o \\"vencedores do Google Open Source Peer Bonus\\" por seu trabalho no [Casbin](/), [Npcap](https://nmap.org/npcap/) e [Nmap](https://nmap.org/) no 3\xba trimestre de 2019.\\n\\n![ospb](https://hsluoyz.github.io/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.png)\\n\\n> A carta de premia\xe7\xe3o original pode ser acessada [aqui](https://github.com/hsluoyz/hsluoyz.github.io/blob/master/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.pdf).\\n\\nO programa [Google Open Source Peer Bonus](https://opensource.google.com/docs/growing/peer-bonus/) \xe9 descrito como:\\n\\n> _Da mesma forma que um Google Peer Bonus \xe9 usado para reconhecer um colega do Google que se destacou, um Open Source Peer Bonus reconhece pessoas externas que fizeram contribui\xe7\xf5es excepcionais para o c\xf3digo aberto._\\n\\nO [an\xfancio dos vencedores de 2019](https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html) est\xe1 dispon\xedvel em:\\n\\n> https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html\\n\\nYang e Casbin est\xe3o listados entre desenvolvedores e projetos de c\xf3digo aberto que t\xeam um impacto relevante, como Git, TensorFlow, V8, CPython, LLVM, projetos Apache, Angular ou Jenkins.\\n\\nEstamos felizes em ver o Casbin reconhecido desta forma por sua contribui\xe7\xe3o ao c\xf3digo aberto e \xe0 seguran\xe7a na nuvem!\\n\\n_Obrigado por voar com Casbin!_"},{"id":"/2018/09/23/new-website","metadata":{"permalink":"/pt/blog/2018/09/23/new-website","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/pt/docusaurus-plugin-content-blog/2018-09-23-new-website.md","source":"@site/i18n/pt/docusaurus-plugin-content-blog/2018-09-23-new-website.md","title":"Reestruturando nossa Documenta\xe7\xe3o","description":"Hoje, migramos a documenta\xe7\xe3o do Casbin do Wiki do GitHub para Docs deste site, que \xe9 alimentado pelo Docusaurus. O Docusaurus oferece muitos recursos incr\xedveis como melhores estilos de Markdown, busca de texto completo, versionamento, tradu\xe7\xe3o.","date":"2018-09-23T00:00:00.000Z","formattedDate":"23 de setembro de 2018","tags":[],"readingTime":0.31,"hasTruncateMarker":false,"authors":[{"name":"Yang Luo","title":"Criador do Casbin","url":"http://github.com/hsluoyz","imageURL":"https://avatars.githubusercontent.com/hsluoyz"}],"frontMatter":{"title":"Reestruturando nossa Documenta\xe7\xe3o","author":"Yang Luo","authorTitle":"Criador do Casbin","authorURL":"http://github.com/hsluoyz","authorImageURL":"https://avatars.githubusercontent.com/hsluoyz"},"prevItem":{"title":"Yang Luo - Vencedor do Pr\xeamio Google Open Source Peer Bonus","permalink":"/pt/blog/2020/04/21/google-award"},"nextItem":{"title":"node-Casbin: Novo Membro da Fam\xedlia Casbin","permalink":"/pt/blog/2018/08/27/node-casbin"}},"content":"Hoje, migramos a documenta\xe7\xe3o do Casbin do Wiki do GitHub para `Docs` deste site, que \xe9 alimentado pelo Docusaurus. O Docusaurus oferece muitos recursos incr\xedveis como melhores estilos de Markdown, busca de texto completo, versionamento, tradu\xe7\xe3o.\\n\\nA documenta\xe7\xe3o ainda n\xe3o est\xe1 perfeita e ainda precisa de ajustes. O c\xf3digo fonte est\xe1 hospedado no GitHub: https://github.com/casbin/casbin-website-v2 .\\n\\nQualquer contribui\xe7\xe3o ou sugest\xe3o \xe9 bem-vinda!"},{"id":"/2018/08/27/node-casbin","metadata":{"permalink":"/pt/blog/2018/08/27/node-casbin","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/pt/docusaurus-plugin-content-blog/2018-08-27-node-casbin.md","source":"@site/i18n/pt/docusaurus-plugin-content-blog/2018-08-27-node-casbin.md","title":"node-Casbin: Novo Membro da Fam\xedlia Casbin","description":"Hoje, n\xf3s portamos com sucesso o Casbin para Node.js, que \xe9 nomeado como: node-Casbin.","date":"2018-08-27T00:00:00.000Z","formattedDate":"27 de agosto de 2018","tags":[],"readingTime":0.29,"hasTruncateMarker":false,"authors":[{"name":"Zixuan Liu","title":"Mantenedor do Casbin","url":"http://github.com/nodece","imageURL":"https://avatars.githubusercontent.com/nodece"}],"frontMatter":{"title":"node-Casbin: Novo Membro da Fam\xedlia Casbin","author":"Zixuan Liu","authorTitle":"Mantenedor do Casbin","authorURL":"http://github.com/nodece","authorImageURL":"https://avatars.githubusercontent.com/nodece"},"prevItem":{"title":"Reestruturando nossa Documenta\xe7\xe3o","permalink":"/pt/blog/2018/09/23/new-website"},"nextItem":{"title":"O Casbin Server foi lan\xe7ado!","permalink":"/pt/blog/2018/08/07/launching-casbin-server"}},"content":"Hoje, n\xf3s portamos com sucesso o Casbin para Node.js, que \xe9 nomeado como: [node-Casbin](https://github.com/casbin/node-casbin).\\n\\n**node-Casbin** compartilha o uso similar e a API com outras implementa\xe7\xf5es do Casbin. Os middlewares para Express, Koa2 e Egg.js est\xe3o prontos para uso. O adaptador de armazenamento para Sequelize tamb\xe9m est\xe1 preparado.\\n\\nEspero que possa atender bem \xe0s suas necessidades :)\\n\\nGitHub: https://github.com/casbin/node-casbin"},{"id":"/2018/08/07/launching-casbin-server","metadata":{"permalink":"/pt/blog/2018/08/07/launching-casbin-server","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/pt/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md","source":"@site/i18n/pt/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md","title":"O Casbin Server foi lan\xe7ado!","description":"Alguns de nossos clientes perguntam se o Casbin pode ser usado como um servi\xe7o em vez de uma biblioteca. A resposta \xe9 SIM. Hoje, lan\xe7amos o projeto Casbin Server como uma solu\xe7\xe3o concreta para Controle de Acesso como um Servi\xe7o.","date":"2018-08-07T00:00:00.000Z","formattedDate":"7 de agosto de 2018","tags":[],"readingTime":0.74,"hasTruncateMarker":false,"authors":[{"name":"Helong Zhang","title":"Mantenedor do Casbin","url":"http://github.com/BetaCat0","imageURL":"https://avatars.githubusercontent.com/BetaCat0"}],"frontMatter":{"title":"O Casbin Server foi lan\xe7ado!","author":"Helong Zhang","authorTitle":"Mantenedor do Casbin","authorURL":"http://github.com/BetaCat0","authorImageURL":"https://avatars.githubusercontent.com/BetaCat0"},"prevItem":{"title":"node-Casbin: Novo Membro da Fam\xedlia Casbin","permalink":"/pt/blog/2018/08/27/node-casbin"}},"content":"Alguns de nossos clientes perguntam se o Casbin pode ser usado como um servi\xe7o em vez de uma biblioteca. A resposta \xe9 **SIM**. Hoje, lan\xe7amos o projeto [Casbin Server](https://github.com/casbin/casbin-server) como uma solu\xe7\xe3o concreta para **Controle de Acesso como um Servi\xe7o**.\\n\\n**Casbin Server** est\xe1 em desenvolvimento ativo pela nossa equipe principal. Ele possui v\xe1rias caracter\xedsticas:\\n\\n- Desenvolvido puramente em Golang.\\n- Pode gerenciar milhares de inst\xe2ncias do Casbin, para que voc\xea possa mover a l\xf3gica de aplica\xe7\xe3o de pol\xedticas de m\xfaltiplos servi\xe7os para um \xfanico Casbin Server.\\n- **gRPC** \xe9 usado para se comunicar com o Casbin Server. Tamb\xe9m consideramos adicionar suporte **RESTful** em um futuro pr\xf3ximo.\\n- Um portal administrativo amig\xe1vel \xe9 fornecido para administradores n\xe3o desenvolvedores gerenciarem todos os detalhes como inst\xe2ncias do Casbin, modelos, armazenamento de pol\xedticas e balanceamento de carga.\\n\\n\\n\\nO c\xf3digo-fonte est\xe1 hospedado no GitHub: https://github.com/casbin/casbin-server\\n\\nQuaisquer problemas ou pull requests s\xe3o bem-vindos :)"}]}')}}]);