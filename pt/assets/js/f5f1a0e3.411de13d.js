"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[284],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>u});var n=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(t),u=o,f=m["".concat(l,".").concat(u)]||m[u]||c[u]||r;return t?n.createElement(f,s(s({ref:a},d),{},{components:t})):n.createElement(f,s({ref:a},d))}));function u(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},964:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const r={id:"syntax-for-models",title:"Syntax for Models",description:"Sintaxe para Modelos",keywords:["syntax"],authors:["nodece"]},s=void 0,i={unversionedId:"syntax-for-models",id:"syntax-for-models",title:"Syntax for Models",description:"Sintaxe para Modelos",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/SyntaxForModels.mdx",sourceDirName:".",slug:"/syntax-for-models",permalink:"/pt/docs/syntax-for-models",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/SyntaxForModels.mdx",tags:[],version:"current",frontMatter:{id:"syntax-for-models",title:"Syntax for Models",description:"Sintaxe para Modelos",keywords:["syntax"],authors:["nodece"]},sidebar:"docs",previous:{title:"Supported Models",permalink:"/pt/docs/supported-models"},next:{title:"Effector",permalink:"/pt/docs/effector"}},l={},p=[{value:"Defini\xe7\xe3o de Requisi\xe7\xe3o",id:"defini\xe7\xe3o-de-requisi\xe7\xe3o",level:2},{value:"Defini\xe7\xe3o de Pol\xedtica",id:"defini\xe7\xe3o-de-pol\xedtica",level:2},{value:"Efeito de Pol\xedtica",id:"efeito-de-pol\xedtica",level:2},{value:"Matchers",id:"matchers",level:2},{value:"Ordem das express\xf5es nos correspondentes",id:"ordem-das-express\xf5es-nos-correspondentes",level:3},{value:"Tipos de Se\xe7\xe3o M\xfaltiplos",id:"tipos-de-se\xe7\xe3o-m\xfaltiplos",level:2},{value:"Gram\xe1tica Especial",id:"gram\xe1tica-especial",level:2},{value:"Avaliador de Express\xe3o",id:"avaliador-de-express\xe3o",level:2}],d=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",a)},c=d("Tabs"),m=d("TabItem"),u={toc:p};function f(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Uma configura\xe7\xe3o de modelo (CONF) deve ter pelo menos quatro se\xe7\xf5es: ",(0,o.kt)("inlineCode",{parentName:"p"},"[request_definition]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"[policy_definition]"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"[policy_effect]")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"[matchers]"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Se um modelo usa Controle de Acesso Baseado em Fun\xe7\xf5es (RBAC), ele tamb\xe9m deve incluir a se\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"[role_definition]"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Uma configura\xe7\xe3o de modelo (CONF) pode conter coment\xe1rios. Coment\xe1rios come\xe7am com o s\xedmbolo ",(0,o.kt)("inlineCode",{parentName:"p"},"#"),", e tudo ap\xf3s o s\xedmbolo ",(0,o.kt)("inlineCode",{parentName:"p"},"#")," ser\xe1 comentado."))),(0,o.kt)("h2",{id:"defini\xe7\xe3o-de-requisi\xe7\xe3o"},"Defini\xe7\xe3o de Requisi\xe7\xe3o"),(0,o.kt)("p",null,"A se\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"[request_definition]")," define os argumentos na fun\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"e.Enforce(...)"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n")),(0,o.kt)("p",null,"Neste exemplo, ",(0,o.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"obj")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"act")," representam o cl\xe1ssico triplo de acesso: o sujeito (entidade que acessa), o objeto (recurso acessado) e a a\xe7\xe3o (m\xe9todo de acesso). No entanto, voc\xea pode personalizar seu pr\xf3prio formato de requisi\xe7\xe3o. Por exemplo, voc\xea pode usar ",(0,o.kt)("inlineCode",{parentName:"p"},"sub, act")," se n\xe3o precisar especificar um recurso em particular, ou ",(0,o.kt)("inlineCode",{parentName:"p"},"sub, sub2, obj, act")," se voc\xea tiver duas entidades acessando."),(0,o.kt)("h2",{id:"defini\xe7\xe3o-de-pol\xedtica"},"Defini\xe7\xe3o de Pol\xedtica"),(0,o.kt)("p",null,"A ",(0,o.kt)("inlineCode",{parentName:"p"},"[policy_definition]")," \xe9 a defini\xe7\xe3o para uma pol\xedtica. Ela define o significado da pol\xedtica. Por exemplo, temos o seguinte modelo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_definition]\np = sub, obj, act\np2 = sub, act\n")),(0,o.kt)("p",null,"E temos a seguinte pol\xedtica (se em um arquivo de pol\xedtica):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np2, bob, write-all-objects\n")),(0,o.kt)("p",null,"Cada linha em uma pol\xedtica \xe9 chamada de regra de pol\xedtica. Cada regra de pol\xedtica come\xe7a com um ",(0,o.kt)("inlineCode",{parentName:"p"},"tipo de pol\xedtica"),", como ",(0,o.kt)("inlineCode",{parentName:"p"},"p")," ou ",(0,o.kt)("inlineCode",{parentName:"p"},"p2"),". \xc9 usado para combinar a defini\xe7\xe3o de pol\xedtica se houver m\xfaltiplas defini\xe7\xf5es. A pol\xedtica acima mostra a seguinte vincula\xe7\xe3o. A vincula\xe7\xe3o pode ser usada no comparador."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"(alice, data1, read) -> (p.sub, p.obj, p.act)\n(bob, write-all-objects) -> (p2.sub, p2.act)\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Os elementos em uma regra de pol\xedtica s\xe3o sempre considerados como ",(0,o.kt)("inlineCode",{parentName:"p"},"strings"),". Se voc\xea tiver alguma d\xfavida sobre isso, por favor, consulte a discuss\xe3o em: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/113"},"https://github.com/casbin/casbin/issues/113"))),(0,o.kt)("h2",{id:"efeito-de-pol\xedtica"},"Efeito de Pol\xedtica"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"[policy_effect]")," \xe9 a defini\xe7\xe3o para o efeito da pol\xedtica. Determina se a solicita\xe7\xe3o de acesso deve ser aprovada se v\xe1rias regras de pol\xedtica corresponderem \xe0 solicita\xe7\xe3o. Por exemplo, uma regra permite e a outra nega."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = some(where (p.eft == allow))\n")),(0,o.kt)("p",null,"O efeito de pol\xedtica acima significa que se houver qualquer regra de pol\xedtica correspondente de ",(0,o.kt)("inlineCode",{parentName:"p"},"allow"),", o efeito final \xe9 ",(0,o.kt)("inlineCode",{parentName:"p"},"allow")," (tamb\xe9m conhecido como sobrescrita de permiss\xe3o). ",(0,o.kt)("inlineCode",{parentName:"p"},"p.eft")," \xe9 o efeito para uma pol\xedtica, e pode ser ",(0,o.kt)("inlineCode",{parentName:"p"},"allow")," ou ",(0,o.kt)("inlineCode",{parentName:"p"},"deny"),". \xc9 opcional, e o valor padr\xe3o \xe9 ",(0,o.kt)("inlineCode",{parentName:"p"},"allow"),". Como n\xe3o especificamos acima, ele usa o valor padr\xe3o."),(0,o.kt)("p",null,"Outro exemplo para o efeito de pol\xedtica \xe9:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = !some(where (p.eft == deny))\n")),(0,o.kt)("p",null,"Isto significa que se n\xe3o houver regras de pol\xedtica correspondentes de ",(0,o.kt)("inlineCode",{parentName:"p"},"deny"),", o efeito final \xe9 ",(0,o.kt)("inlineCode",{parentName:"p"},"allow")," (tamb\xe9m conhecido como sobrescrita de nega\xe7\xe3o). ",(0,o.kt)("inlineCode",{parentName:"p"},"some")," significa que existe uma regra de pol\xedtica correspondente. ",(0,o.kt)("inlineCode",{parentName:"p"},"any")," significa que todas as regras de pol\xedtica correspondentes (n\xe3o usado aqui). O efeito de pol\xedtica pode at\xe9 ser conectado com express\xf5es l\xf3gicas:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n")),(0,o.kt)("p",null,"Isto significa que deve haver pelo menos uma regra de pol\xedtica correspondente de ",(0,o.kt)("inlineCode",{parentName:"p"},"allow"),", e n\xe3o pode haver nenhuma regra de pol\xedtica correspondente de ",(0,o.kt)("inlineCode",{parentName:"p"},"deny"),". Portanto, desta forma, ambas as autoriza\xe7\xf5es de permitir e negar s\xe3o suportadas, e a nega\xe7\xe3o sobrep\xf5e."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Embora tenhamos projetado a sintaxe do efeito de pol\xedtica como acima, as implementa\xe7\xf5es atuais usam apenas efeitos de pol\xedtica codificados. Isto \xe9 porque descobrimos que n\xe3o h\xe1 muita necessidade para esse n\xedvel de flexibilidade. Ent\xe3o, por enquanto, voc\xea deve usar um dos efeitos de pol\xedtica integrados em vez de personalizar o seu pr\xf3prio.")),(0,o.kt)("p",null,"Os efeitos de pol\xedtica integrados suportados s\xe3o:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Efeito de Pol\xedtica"),(0,o.kt)("th",{parentName:"tr",align:null},"Significado"),(0,o.kt)("th",{parentName:"tr",align:null},"Exemplo"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"some(where (p.eft == allow))"),(0,o.kt)("td",{parentName:"tr",align:null},"sobrescrita de permiss\xe3o"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"ACL, RBAC, etc."))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"!some(where (p.eft == deny))"),(0,o.kt)("td",{parentName:"tr",align:null},"sobrescrita de nega\xe7\xe3o"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Sobrescrita de nega\xe7\xe3o"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"some(where (p.eft == allow)) && !some(where (p.eft == deny))"),(0,o.kt)("td",{parentName:"tr",align:null},"allow-and-deny"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Allow-and-deny"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"priority(p.eft) ","|","|"," deny"),(0,o.kt)("td",{parentName:"tr",align:null},"priority"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Priority"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"subjectPriority(p.eft)"),(0,o.kt)("td",{parentName:"tr",align:null},"prioridade baseada em papel"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Subject-Priority"))))),(0,o.kt)("h2",{id:"matchers"},"Matchers"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"[matchers]")," \xe9 a defini\xe7\xe3o para os correspondentes de pol\xedtica. Os correspondentes s\xe3o express\xf5es que definem como as regras de pol\xedtica s\xe3o avaliadas contra a solicita\xe7\xe3o."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act\n")),(0,o.kt)("p",null,"O correspondente acima \xe9 o mais simples e significa que o sujeito, objeto e a\xe7\xe3o em uma solicita\xe7\xe3o devem corresponder aos da regra de pol\xedtica."),(0,o.kt)("p",null,"Operadores aritm\xe9ticos como ",(0,o.kt)("inlineCode",{parentName:"p"},"+, -, *, /")," e operadores l\xf3gicos como ",(0,o.kt)("inlineCode",{parentName:"p"},"&&, ||, !")," podem ser usados nos correspondentes."),(0,o.kt)("h3",{id:"ordem-das-express\xf5es-nos-correspondentes"},"Ordem das express\xf5es nos correspondentes"),(0,o.kt)("p",null,"A ordem das express\xf5es pode afetar muito o desempenho. D\xea uma olhada no seguinte exemplo para mais detalhes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'const rbac_models = `\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\n\nfunc TestManyRoles(t *testing.T) {\n\n    m, _ := model.NewModelFromString(rbac_models)\n    e, _ := NewEnforcer(m, false)\n\n    roles := []string{"admin", "manager", "developer", "tester"}\n\n    // 2500 projects\n    for nbPrj := 1; nbPrj < 2500; nbPrj++ {\n        // 4 objects and 1 role per object (so 4 roles)\n        for _, role := range roles {\n            roleDB := fmt.Sprintf("%s_project:%d", role, nbPrj)\n            objectDB := fmt.Sprintf("/projects/%d", nbPrj)\n            e.AddPolicy(roleDB, objectDB, "GET")\n        }\n        jasmineRole := fmt.Sprintf("%s_project:%d", roles[1], nbPrj)\n        e.AddGroupingPolicy("jasmine", jasmineRole)\n    }\n\n    e.AddGroupingPolicy("abu", "manager_project:1")\n    e.AddGroupingPolicy("abu", "manager_project:2499")\n\n    // With same number of policies\n    // User \'abu\' has only two roles\n    // User \'jasmine\' has many roles (1 role per policy, here 2500 roles)\n\n    request := func(subject, object, action string) {\n        t0 := time.Now()\n        resp, _ := e.Enforce(subject, object, action)\n        tElapse := time.Since(t0)\n        t.Logf("RESPONSE %-10s %s\\t %s : %5v IN: %+v", subject, object, action, resp, tElapse)\n        if tElapse > time.Millisecond*100 {\n            t.Errorf("More than 100 milliseconds for %s %s %s : %+v", subject, object, action, tElapse)\n        }\n    }\n\n    request("abu", "/projects/1", "GET")        // really fast because only 2 roles in all policies and at the beginning of the casbin_rule table\n    request("abu", "/projects/2499", "GET")     // fast because only 2 roles in all policies\n    request("jasmine", "/projects/1", "GET")    // really fast at the beginning of the casbin_rule table\n\n    request("jasmine", "/projects/2499", "GET") // slow and fails the only 1st time   <<<< pb here\n    request("jasmine", "/projects/2499", "GET") // fast maybe due to internal cache mechanism\n\n    // same issue with non-existing roles\n    // request("jasmine", "/projects/999999", "GET") // slow fails the only 1st time   <<<< pb here\n    // request("jasmine", "/projects/999999", "GET") // fast maybe due to internal cache mechanism\n}\n')),(0,o.kt)("p",null,"O tempo de execu\xe7\xe3o pode ser muito longo, at\xe9 6 segundos."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go test -run ^TestManyRoles$ github.com/casbin/casbin/v2 -v\n\n=== RUN   TestManyRoles\n    rbac_api_test.go:598: RESPONSE abu        /projects/1        GET :  true IN: 438.379\xb5s\n    rbac_api_test.go:598: RESPONSE abu        /projects/2499     GET :  true IN: 39.005173ms\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/1        GET :  true IN: 1.774319ms\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/2499     GET :  true IN: 6.164071648s\n    rbac_api_test.go:600: More than 100 milliseconds for jasmine /projects/2499 GET : 6.164071648s\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/2499     GET :  true IN: 12.164122ms\n--- FAIL: TestManyRoles (6.24s)\nFAIL\nFAIL    github.com/casbin/casbin/v2     6.244s\nFAIL\n")),(0,o.kt)("p",null,"No entanto, se ajustarmos a ordem das express\xf5es nos correspondentes e colocarmos express\xf5es mais demoradas como fun\xe7\xf5es para tr\xe1s, o tempo de execu\xe7\xe3o ser\xe1 muito curto."),(0,o.kt)("p",null,"Mudando a ordem das express\xf5es nos correspondentes no exemplo acima para:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = r.obj == p.obj && g(r.sub, p.sub) && r.act == p.act\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go test -run ^TestManyRoles$ github.com/casbin/casbin/v2 -v\n=== RUN   TestManyRoles\n    rbac_api_test.go:599: RESPONSE abu        /projects/1        GET :  true IN: 786.635\xb5s\n    rbac_api_test.go:599: RESPONSE abu        /projects/2499     GET :  true IN: 4.933064ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/1        GET :  true IN: 2.908534ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/2499     GET :  true IN: 7.292963ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/2499     GET :  true IN: 6.168307ms\n--- PASS: TestManyRoles (0.05s)\nPASS\nok      github.com/casbin/casbin/v2     0.053s\n")),(0,o.kt)("h2",{id:"tipos-de-se\xe7\xe3o-m\xfaltiplos"},"Tipos de Se\xe7\xe3o M\xfaltiplos"),(0,o.kt)("p",null,"Se voc\xea precisar de m\xfaltiplas defini\xe7\xf5es de pol\xedtica ou m\xfaltiplos correspondentes, voc\xea pode usar ",(0,o.kt)("inlineCode",{parentName:"p"},"p2")," ou ",(0,o.kt)("inlineCode",{parentName:"p"},"m2")," como exemplos. Na verdade, todas as quatro se\xe7\xf5es mencionadas acima podem usar m\xfaltiplos tipos, e a sintaxe \xe9 ",(0,o.kt)("inlineCode",{parentName:"p"},"r")," seguido por um n\xfamero, como ",(0,o.kt)("inlineCode",{parentName:"p"},"r2")," ou ",(0,o.kt)("inlineCode",{parentName:"p"},"e2"),". Por padr\xe3o, essas quatro se\xe7\xf5es devem corresponder um-a-um. Por exemplo, sua se\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"r2")," s\xf3 usar\xe1 o correspondente ",(0,o.kt)("inlineCode",{parentName:"p"},"m2")," para combinar com pol\xedticas ",(0,o.kt)("inlineCode",{parentName:"p"},"p2"),"."),(0,o.kt)("p",null,"Voc\xea pode passar um ",(0,o.kt)("inlineCode",{parentName:"p"},"EnforceContext")," como o primeiro par\xe2metro do m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"enforce")," para especificar os tipos. O ",(0,o.kt)("inlineCode",{parentName:"p"},"EnforceContext")," \xe9 definido da seguinte forma:"),(0,o.kt)(c,{groupId:"langs",mdxType:"Tabs"},(0,o.kt)(m,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'EnforceContext{"r2","p2","e2","m2"}\ntype EnforceContext struct {\n    RType string\n    PType string\n    EType string\n    MType string\n}\n'))),(0,o.kt)(m,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const enforceContext = new EnforceContext('r2', 'p2', 'e2', 'm2');\nclass EnforceContext {\n  constructor(rType, pType, eType, mType) {\n    this.pType = pType;\n    this.eType = eType;\n    this.mType = mType;\n    this.rType = rType;\n  }\n}\n"))),(0,o.kt)(m,{value:"Java",label:"Java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'EnforceContext enforceContext = new EnforceContext("2");\npublic class EnforceContext {\n    private String pType;\n    private String eType;\n    private String mType;\n    private String rType;\n    public EnforceContext(String suffix) {\n      this.pType = "p" + suffix;\n      this.eType = "e" + suffix;\n      this.mType = "m" + suffix;\n      this.rType = "r" + suffix;\n    }\n}\n')))),(0,o.kt)("p",null,"Aqui est\xe1 um exemplo de uso. Por favor, consulte o ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/multiple_policy_definitions_model.conf"},"modelo")," e a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/multiple_policy_definitions_policy.csv"},"pol\xedtica"),". A solicita\xe7\xe3o \xe9 a seguinte:"),(0,o.kt)(c,{groupId:"langs",mdxType:"Tabs"},(0,o.kt)(m,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Pass in a suffix as a parameter to NewEnforceContext, such as 2 or 3, and it will create r2, p2, etc.\nenforceContext := NewEnforceContext("2")\n// You can also specify a certain type individually\nenforceContext.EType = "e"\n// Don\'t pass in EnforceContext; the default is r, p, e, m\ne.Enforce("alice", "data2", "read")        // true\n// Pass in EnforceContext\ne.Enforce(enforceContext, struct{ Age int }{Age: 70}, "/data1", "read")        //false\ne.Enforce(enforceContext, struct{ Age int }{Age: 30}, "/data1", "read")        //true\n'))),(0,o.kt)(m,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// Pass in a suffix as a parameter to NewEnforceContext, such as 2 or 3, and it will create r2, p2, etc.\nconst enforceContext = new NewEnforceContext(\'2\');\n\n// You can also specify a certain type individually\nenforceContext.eType = "e"\n\n// Don\'t pass in EnforceContext; the default is r, p, e, m\ne.Enforce("alice", "data2", "read")        // true\n\n// Pass in EnforceContext\ne.Enforce(enforceContext, {Age: 70}, "/data1", "read")        //false\ne.Enforce(enforceContext, {Age: 30}, "/data1", "read")        //true\n'))),(0,o.kt)(m,{value:"Java",label:"Java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'// Pass in a suffix as a parameter to NewEnforceContext, such as 2 or 3, and it will create r2, p2, etc.\nEnforceContext enforceContext = new EnforceContext("2");\n// You can also specify a certain type individually\nenforceContext.seteType("e");\n// Don\'t pass in EnforceContext; the default is r, p, e, m\ne.enforce("alice", "data2", "read");  // true\n// Pass in EnforceContext\n// TestEvalRule is located in https://github.com/casbin/jcasbin/blob/master/src/test/java/org/casbin/jcasbin/main/AbacAPIUnitTest.java#L56\ne.enforce(enforceContext, new AbacAPIUnitTest.TestEvalRule("alice", 70), "/data1", "read"); // false\ne.enforce(enforceContext, new AbacAPIUnitTest.TestEvalRule("alice", 30), "/data1", "read"); // true\n')))),(0,o.kt)("h2",{id:"gram\xe1tica-especial"},"Gram\xe1tica Especial"),(0,o.kt)("p",null,'Voc\xea tamb\xe9m pode usar o operador "in", que \xe9 o \xfanico operador com um nome de texto. Este operador verifica o array do lado direito para ver se cont\xe9m um valor igual ao valor do lado esquerdo. A igualdade \xe9 determinada usando o operador ==, e esta biblioteca n\xe3o verifica os tipos entre os valores. Contanto que dois valores possam ser convertidos para interface{} e ainda possam ser verificados para igualdade com ==, eles funcionar\xe3o conforme o esperado. Observe que voc\xea pode usar um par\xe2metro para o array, mas ele deve ser um []interface{}.'),(0,o.kt)("p",null,"Consulte tamb\xe9m ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/rbac_model_matcher_using_in_op.conf"},"rbac","_","model","_","matcher","_","using","_","in","_","op"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/keyget2_model.conf"},"keyget2","_","model"),", e ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/keyget_model.conf"},"keyget","_","model"),"."),(0,o.kt)("p",null,"Exemplo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj\n...\n[matchers]\nm = r.sub.Name in (r.obj.Admins)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'e.Enforce(Sub{Name: "alice"}, Obj{Name: "a book", Admins: []interface{}{"alice", "bob"}})\n')),(0,o.kt)("h2",{id:"avaliador-de-express\xe3o"},"Avaliador de Express\xe3o"),(0,o.kt)("p",null,"A avalia\xe7\xe3o de correspondentes no Casbin \xe9 implementada por avaliadores de express\xe3o em cada linguagem. Casbin integra seus poderes para fornecer a linguagem PERM unificada. Al\xe9m da sintaxe do modelo fornecida aqui, esses avaliadores de express\xe3o podem oferecer funcionalidades extras que podem n\xe3o ser suportadas por outra linguagem ou implementa\xe7\xe3o. Por favor, seja cauteloso ao usar essa funcionalidade."),(0,o.kt)("p",null,"Os avaliadores de express\xe3o usados por cada implementa\xe7\xe3o do Casbin s\xe3o os seguintes:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Implementa\xe7\xe3o"),(0,o.kt)("th",{parentName:"tr",align:null},"Linguagem"),(0,o.kt)("th",{parentName:"tr",align:null},"Avaliador de Express\xe3o"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,o.kt)("td",{parentName:"tr",align:null},"Golang"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/Knetic/govaluate"},"https://github.com/Knetic/govaluate"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"jCasbin"),(0,o.kt)("td",{parentName:"tr",align:null},"Java"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/killme2008/aviator"},"https://github.com/killme2008/aviator"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Node-Casbin"),(0,o.kt)("td",{parentName:"tr",align:null},"Node.js"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/donmccurdy/expression-eval"},"https://github.com/donmccurdy/expression-eval"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PHP-Casbin"),(0,o.kt)("td",{parentName:"tr",align:null},"PHP"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/symfony/expression-language"},"https://github.com/symfony/expression-language"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"PyCasbin"),(0,o.kt)("td",{parentName:"tr",align:null},"Python"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/danthedeckie/simpleeval"},"https://github.com/danthedeckie/simpleeval"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Casbin.NET"),(0,o.kt)("td",{parentName:"tr",align:null},"C#"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/davideicardi/DynamicExpresso"},"https://github.com/davideicardi/DynamicExpresso"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Casbin4D"),(0,o.kt)("td",{parentName:"tr",align:null},"Delphi"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/casbin4d/Casbin4D/tree/master/SourceCode/Common/Third%20Party/TExpressionParser"},"https://github.com/casbin4d/Casbin4D/tree/master/SourceCode/Common/Third%20Party/TExpressionParser"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"casbin-rs"),(0,o.kt)("td",{parentName:"tr",align:null},"Rust"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/jonathandturner/rhai"},"https://github.com/jonathandturner/rhai"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"casbin-cpp"),(0,o.kt)("td",{parentName:"tr",align:null},"C++"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/ArashPartow/exprtk"},"https://github.com/ArashPartow/exprtk"))))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Se voc\xea encontrar um problema de desempenho com o Casbin, \xe9 prov\xe1vel que seja causado pela baixa efici\xeancia do avaliador de express\xf5es. Voc\xea pode endere\xe7ar o problema ao Casbin ou ao avaliador de express\xf5es diretamente para obter conselhos sobre como acelerar o desempenho. Para mais detalhes, por favor, consulte a se\xe7\xe3o ",(0,o.kt)("a",{parentName:"p",href:"/docs/benchmark"},"Benchmarks"),".")))}f.isMDXComponent=!0}}]);