"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5941],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=c(n),m=o,u=f["".concat(p,".").concat(m)]||f[m]||d[m]||a;return n?r.createElement(u,i(i({ref:t},s),{},{components:n})):r.createElement(u,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8756:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={id:"effector",title:"Effector",description:"A interface Effector no Casbin",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},i=void 0,l={unversionedId:"effector",id:"effector",title:"Effector",description:"A interface Effector no Casbin",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/Effector.mdx",sourceDirName:".",slug:"/effector",permalink:"/pt/docs/effector",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/Effector.mdx",tags:[],version:"current",frontMatter:{id:"effector",title:"Effector",description:"A interface Effector no Casbin",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},sidebar:"docs",previous:{title:"Syntax for Models",permalink:"/pt/docs/syntax-for-models"},next:{title:"Functions",permalink:"/pt/docs/function"}},p={},c=[{value:"<code>MergeEffects()</code>",id:"mergeeffects",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},d=s("Tabs"),f=s("TabItem"),m={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"O ",(0,o.kt)("inlineCode",{parentName:"p"},"Effect")," representa o resultado de uma regra de pol\xedtica, e o ",(0,o.kt)("inlineCode",{parentName:"p"},"Effector")," \xe9 a interface para lidar com efeitos no Casbin."),(0,o.kt)("h2",{id:"mergeeffects"},(0,o.kt)("inlineCode",{parentName:"h2"},"MergeEffects()")),(0,o.kt)("p",null,"A fun\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"MergeEffects()")," \xe9 usada para mesclar todos os resultados correspondentes coletados pelo executor em uma \xfanica decis\xe3o."),(0,o.kt)("p",null,"Por exemplo:"),(0,o.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,o.kt)(f,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"Effect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,o.kt)("p",null,"Neste exemplo:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Effect")," \xe9 a decis\xe3o final que \xe9 mesclada por esta fun\xe7\xe3o (inicializada como ",(0,o.kt)("inlineCode",{parentName:"li"},"Indeterminate"),")."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"explainIndex")," \xe9 o \xedndice de ",(0,o.kt)("inlineCode",{parentName:"li"},"eft")," (",(0,o.kt)("inlineCode",{parentName:"li"},"Allow")," ou ",(0,o.kt)("inlineCode",{parentName:"li"},"Deny"),"), e \xe9 inicializado como ",(0,o.kt)("inlineCode",{parentName:"li"},"-1"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"err")," \xe9 usado para verificar se o efeito \xe9 suportado."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"expr")," \xe9 a representa\xe7\xe3o em string dos efeitos da pol\xedtica."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"effects")," \xe9 um array de efeitos, que podem ser ",(0,o.kt)("inlineCode",{parentName:"li"},"Allow"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Indeterminate")," ou ",(0,o.kt)("inlineCode",{parentName:"li"},"Deny"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"matches")," \xe9 um array que indica se o resultado corresponde \xe0 pol\xedtica."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"policyIndex")," \xe9 o \xedndice da pol\xedtica no modelo."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"policyLength")," \xe9 o comprimento da pol\xedtica.")),(0,o.kt)("p",null,"O c\xf3digo acima ilustra como passar os par\xe2metros para a fun\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"MergeEffects()"),", e a fun\xe7\xe3o processar\xe1 os efeitos e correspond\xeancias com base no ",(0,o.kt)("inlineCode",{parentName:"p"},"expr"),"."),(0,o.kt)("p",null,"Para usar o ",(0,o.kt)("inlineCode",{parentName:"p"},"Effector"),", siga estes passos:"),(0,o.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,o.kt)(f,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"var e Effector\nEffect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,o.kt)("p",null,"A ideia b\xe1sica de ",(0,o.kt)("inlineCode",{parentName:"p"},"MergeEffects()")," \xe9 que se o ",(0,o.kt)("inlineCode",{parentName:"p"},"expr")," puder corresponder aos resultados, indicando que o ",(0,o.kt)("inlineCode",{parentName:"p"},"p_eft")," \xe9 ",(0,o.kt)("inlineCode",{parentName:"p"},"allow"),", ent\xe3o todos os efeitos podem ser mesclados. Se nenhuma regra de nega\xe7\xe3o for correspondida, ent\xe3o a decis\xe3o \xe9 permitir."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Se o ",(0,o.kt)("inlineCode",{parentName:"p"},"expr")," n\xe3o corresponder \xe0 condi\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"'priority(p_eft) || deny'"),", e o ",(0,o.kt)("inlineCode",{parentName:"p"},"policyIndex")," for menor que ",(0,o.kt)("inlineCode",{parentName:"p"},"policyLength-1"),", ele ir\xe1 ",(0,o.kt)("strong",{parentName:"p"},"interromper")," alguns efeitos no meio.")))}u.isMDXComponent=!0}}]);