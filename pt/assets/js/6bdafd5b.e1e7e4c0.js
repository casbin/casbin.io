"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1216],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var o=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,o,r=function(e,t){if(null==e)return{};var a,o,r={},n=Object.keys(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)a=n[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=o.createContext({}),s=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(a),m=r,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||n;return a?o.createElement(f,i(i({ref:t},d),{},{components:a})):o.createElement(f,i({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<n;s++)i[s]=a[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8185:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>c,toc:()=>s});var o=a(7462),r=(a(7294),a(3905));const n={id:"policy-subset-loading",title:"Policy Subset Loading",description:"Carregando pol\xedticas filtradas",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},i=void 0,c={unversionedId:"policy-subset-loading",id:"policy-subset-loading",title:"Policy Subset Loading",description:"Carregando pol\xedticas filtradas",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/PolicySubsetLoading.mdx",sourceDirName:".",slug:"/policy-subset-loading",permalink:"/pt/docs/policy-subset-loading",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PolicySubsetLoading.mdx",tags:[],version:"current",frontMatter:{id:"policy-subset-loading",title:"Policy Subset Loading",description:"Carregando pol\xedticas filtradas",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Policy Storage",permalink:"/pt/docs/policy-storage"},next:{title:"Scenarios",permalink:"/pt/docs/category/scenarios"}},l={},s=[],d={toc:s};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Alguns adaptadores suportam gerenciamento de pol\xedticas filtradas. Isso significa que a pol\xedtica carregada pelo Casbin \xe9 um subconjunto da pol\xedtica armazenada no banco de dados com base em um filtro dado. Isso permite a aplica\xe7\xe3o eficiente de pol\xedticas em ambientes grandes e multi-tenant, onde a an\xe1lise da pol\xedtica inteira se torna um gargalo de desempenho."),(0,r.kt)("p",null,"Para usar pol\xedticas filtradas com um adaptador compat\xedvel, basta chamar o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),". O formato v\xe1lido para o par\xe2metro de filtro depende do adaptador usado. Para evitar perda acidental de dados, o m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"SavePolicy")," \xe9 desativado quando uma pol\xedtica filtrada \xe9 carregada."),(0,r.kt)("p",null,'Por exemplo, o seguinte trecho de c\xf3digo usa o adaptador de arquivo filtrado embutido e o modelo RBAC com dom\xednios. Neste caso, o filtro limita a pol\xedtica a um \xfanico dom\xednio. Quaisquer linhas de pol\xedtica para dom\xednios diferentes de "domain1" s\xe3o omitidas da pol\xedtica carregada:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    fileadapter "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\nenforcer, _ := casbin.NewEnforcer()\n\nadapter := fileadapter.NewFilteredAdapter("examples/rbac_with_domains_policy.csv")\nenforcer.InitWithAdapter("examples/rbac_with_domains_model.conf", adapter)\n\nfilter := &fileadapter.Filter{\n    P: []string{"", "domain1"},\n    G: []string{"", "", "domain1"},\n}\nenforcer.LoadFilteredPolicy(filter)\n\n// The loaded policy now only contains the entries pertaining to "domain1".\n')),(0,r.kt)("p",null,"H\xe1 outro m\xe9todo que suporta o recurso de carregamento de subconjunto: ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy")," \xe9 semelhante a ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),", mas n\xe3o limpa a pol\xedtica previamente carregada. Ele apenas acrescenta a pol\xedtica filtrada \xe0 pol\xedtica existente."))}p.isMDXComponent=!0}}]);