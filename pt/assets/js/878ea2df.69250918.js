"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[7756],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,b=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return r?n.createElement(b,o(o({ref:t},l),{},{components:r})):n.createElement(b,o({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3314:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const i={id:"multi-threading",title:"Multi-threading",description:"Utilizando Casbin em um ambiente multi-threading",keywords:["multi-threading"],authors:["hsluoyz"]},o=void 0,c={unversionedId:"multi-threading",id:"multi-threading",title:"Multi-threading",description:"Utilizando Casbin em um ambiente multi-threading",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/MultiThreading.mdx",sourceDirName:".",slug:"/multi-threading",permalink:"/pt/docs/multi-threading",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/MultiThreading.mdx",tags:[],version:"current",frontMatter:{id:"multi-threading",title:"Multi-threading",description:"Utilizando Casbin em um ambiente multi-threading",keywords:["multi-threading"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Advanced usage",permalink:"/pt/docs/category/advanced-usage"},next:{title:"Benchmarks",permalink:"/pt/docs/benchmark"}},s={},u=[],l={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Ao usar Casbin em um ambiente multi-threading, voc\xea pode empregar o wrapper sincronizado do Casbin enforcer: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/enforcer_synced.go"},"https://github.com/casbin/casbin/blob/master/enforcer","_","synced.go")," (GoLang) e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-cpp/blob/master/casbin/enforcer_synced.cpp"},"https://github.com/casbin/casbin-cpp/blob/master/casbin/enforcer","_","synced.cpp")," (C++)."),(0,a.kt)("p",null,"Al\xe9m disso, ele tamb\xe9m oferece suporte para o recurso 'AutoLoad', permitindo que o Casbin enforcer carregue automaticamente as regras de pol\xedtica mais recentes do banco de dados se ocorrerem altera\xe7\xf5es. Para iniciar o carregamento autom\xe1tico de pol\xedticas periodicamente, chame a fun\xe7\xe3o 'StartAutoLoadPolicy()'. Da mesma forma, para interromper esse carregamento autom\xe1tico, chame a fun\xe7\xe3o 'StopAutoLoadPolicy()'."))}p.isMDXComponent=!0}}]);