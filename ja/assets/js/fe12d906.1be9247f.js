"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[3032],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),f=i,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={id:"policy-subset-loading",title:"\u30dd\u30ea\u30b7\u30fc\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f",description:"Loading filtered policies",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},a=void 0,l={unversionedId:"policy-subset-loading",id:"policy-subset-loading",title:"\u30dd\u30ea\u30b7\u30fc\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f",description:"Loading filtered policies",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/PolicySubsetLoading.mdx",sourceDirName:".",slug:"/policy-subset-loading",permalink:"/ja/docs/policy-subset-loading",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PolicySubsetLoading.mdx",tags:[],version:"current",frontMatter:{id:"policy-subset-loading",title:"\u30dd\u30ea\u30b7\u30fc\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f",description:"Loading filtered policies",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"\u30dd\u30ea\u30b7\u30fc\u30b9\u30c8\u30ec\u30fc\u30b8",permalink:"/ja/docs/policy-storage"},next:{title:"Extensions",permalink:"/ja/docs/category/extensions"}},c={},s=[],p={toc:s};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u30d5\u30a3\u30eb\u30bf\u3055\u308c\u305f\u30dd\u30ea\u30b7\u30fc\u7ba1\u7406\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30a2\u30c0\u30d7\u30bf\u3082\u3042\u308a\u307e\u3059\u3002 This means that the policy loaded by Casbin is a subset of the policy stored in the database based on a given filter. This allows for efficient policy enforcement in large, multi-tenant environments where parsing the entire policy becomes a performance bottleneck."),(0,i.kt)("p",null,"\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30a2\u30c0\u30d7\u30bf\u30fc\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3055\u308c\u305f\u30dd\u30ea\u30b7\u30fc\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001 ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy")," \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002 \u30d5\u30a3\u30eb\u30bf\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6709\u52b9\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001\u4f7f\u7528\u3059\u308b\u30a2\u30c0\u30d7\u30bf\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059\u3002 \u5076\u767a\u7684\u306a\u30c7\u30fc\u30bf\u640d\u5931\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u30dd\u30ea\u30b7\u30fc\u304c\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u3001 ",(0,i.kt)("inlineCode",{parentName:"p"},"SavePolicy")," \u30e1\u30bd\u30c3\u30c9\u306f\u7121\u52b9\u306b\u306a\u308a\u307e\u3059\u3002"),(0,i.kt)("p",null,"\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u3001\u7d44\u307f\u8fbc\u307f\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30a2\u30c0\u30d7\u30bf\u3068\u30c9\u30e1\u30a4\u30f3\u306eRBAC\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001\u30d5\u30a3\u30eb\u30bf\u306f\u30dd\u30ea\u30b7\u30fc\u3092\u5358\u4e00\u30c9\u30e1\u30a4\u30f3\u306b\u5236\u9650\u3057\u307e\u3059\u3002 ",(0,i.kt)("inlineCode",{parentName:"p"},'"domain1"')," \u4ee5\u5916\u306e\u30c9\u30e1\u30a4\u30f3\u306e\u30dd\u30ea\u30b7\u30fc\u884c\u306f\u3001\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30dd\u30ea\u30b7\u30fc\u304b\u3089\u7701\u7565\u3055\u308c\u307e\u3059\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    fileadapter "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\nenforcer, _ := casbin.NewEnforcer()\n\nadapter := fileadapter.NewFilteredAdapter("examples/rbac_with_domains_policy.csv")\nenforcer.InitWithAdapter("examples/rbac_with_domains_model.conf", adapter)\n\nfilter := &fileadapter.Filter{\n    P: []string{"", "domain1"},\n    G: []string{"", "", "domain1"},\n}\nenforcer.LoadFilteredPolicy(filter)\n\n// The loaded policy now only contains the entries pertaining to "domain1".\n')),(0,i.kt)("p",null,"There is another method that supports the subset loading feature: ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy")," is similar to ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),", but it does not clear the previously loaded policy. It only appends the filtered policy to the existing policy."))}d.isMDXComponent=!0}}]);