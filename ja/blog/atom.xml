<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://casbin.org/ja/blog</id>
    <title>Casbin Blog</title>
    <updated>2021-08-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://casbin.org/ja/blog"/>
    <subtitle>Casbin Blog</subtitle>
    <icon>https://casbin.org/ja/img/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[Casbin を使用して APISIX での承認]]></title>
        <id>/2021/08/19/apisix-casbin-authorization</id>
        <link href="https://casbin.org/ja/blog/2021/08/19/apisix-casbin-authorization"/>
        <updated>2021-08-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[はじめに]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="はじめに">はじめに<a class="hash-link" href="#はじめに" title="見出しへの直接リンク">​</a></h2><p><a href="https://apisix.apache.org/" target="_blank" rel="noopener noreferrer">APISIX</a> は Nginx や etcd に基づく高性能でスケーラブルなクラウド ネイティブ API ゲートウェイです。 これは、Apache Software Foundationによるオープンソースプロジェクトです。 それに加えて、APISIXがとても良いのは、認証のような機能を実装するために使用できる多くの偉大なプラグインのサポートです。 モニタリングルーティングなど APISIX のプラグインが(再起動なしで)ホットリロードされているという事実は、それを非常に動的にします。</p><p>しかし、APISIXを使用している間に、アプリケーションに複雑な認可ロジックを追加するシナリオがあるかもしれません。 ここで、authz-casbinがあなたを助けるかもしれません。 authz-casbin は <a href="https://github.com/casbin/lua-casbin/" target="_blank" rel="noopener noreferrer">Lua Casbin</a> をベースにした APISIX プラグインで、さまざまなアクセス制御モデルに基づいた強力な認証を可能にします。 <a href="/ja/">Casbin</a> is an authorization library which supports access control models like ACL, RBAC, ABAC. もともとはGoで書かれており、それは多くの言語に移植されており、Lua CasbinはCasbinのLua実装です。 authz-casbinの開発は、コアメンバーが合意したAPISIXリポジトリ(<a href="https://github.com/apache/apisix/issues/4674" target="_blank" rel="noopener noreferrer">#4674</a>)で承認のための新しいプラグインを提案した時に始まりました。 そして、大きな変更と改善につながった役立つレビューの後、PR (<a href="https://github.com/apache/apisix/pull/4710" target="_blank" rel="noopener noreferrer">#4710</a>) が最終的にマージされました。</p><p>このブログで APISIXのロールベースアクセス制御(RBAC)に基づいて認証モデルを実装する方法を示すために、authz-casbinプラグインを使用します。</p><p><strong>注意</strong>: Casbinは認証のみを行い、認証しないので、ユーザーを認証するために、他のプラグインまたはカスタムワークフローを使用する必要があります。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="モデルの作成">モデルの作成<a class="hash-link" href="#モデルの作成" title="見出しへの直接リンク">​</a></h2><p>このプラグインは、すべてのリクエストを承認するために3つのパラメータを使用します - 件名、オブジェクト、およびアクション。 ここで、subject はユーザー名ヘッダーの値で、 <code>[username: alice]</code> のようなものになる可能性があります。 次に、オブジェクトはアクセスされているURLパスであり、アクションはリクエストメソッドが使用されています。</p><p>Let's say we want to create a model with three resources at the paths - <code>/</code>, <code>/res1</code> and <code>/res2</code>. 次のようなモデルが必要です</p><p><img loading="lazy" src="https://i.imgur.com/7BlvBNR.png" alt="画像" class="img_ev3q"></p><p>例えば、<code>jack</code>のようなすべてのユーザー( <code>*</code> )がホームページにアクセスできることを意味します(<code>/</code>)。 <code>alice</code> や <code>bob</code> のような <code>管理者</code> 権限を持つユーザーは、( <code>res1</code> や <code>res2</code> のような) すべてのページとリソースにアクセスできます。 また、 <code>GET</code> リクエストメソッドのみを使用するように、管理者権限のないユーザーを制限しましょう。 このシナリオでは、次のようにモデルを定義できます。</p><div class="language-ini codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ini codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token section punctuation" style="color:#393A34">[</span><span class="token section section-name selector" style="color:#00009f">request_definition</span><span class="token section punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key attr-name" style="color:#00a4db">r</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token value attr-value" style="color:#e3116c">sub, obj, act</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token section punctuation" style="color:#393A34">[</span><span class="token section section-name selector" style="color:#00009f">policy_definition</span><span class="token section punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key attr-name" style="color:#00a4db">p</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token value attr-value" style="color:#e3116c">sub, obj, act</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token section punctuation" style="color:#393A34">[</span><span class="token section section-name selector" style="color:#00009f">role_definition</span><span class="token section punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key attr-name" style="color:#00a4db">g</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token value attr-value" style="color:#e3116c">_, _</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token section punctuation" style="color:#393A34">[</span><span class="token section section-name selector" style="color:#00009f">policy_effect</span><span class="token section punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key attr-name" style="color:#00a4db">e</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token value attr-value" style="color:#e3116c">some(where (p.eft == allow))</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token section punctuation" style="color:#393A34">[</span><span class="token section section-name selector" style="color:#00009f">matchers</span><span class="token section punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key attr-name" style="color:#00a4db">m</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">=</span><span class="token plain"> </span><span class="token value attr-value" style="color:#e3116c">(g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) &amp;&amp; keyMatch(r.obj, p.obj) &amp;&amp; keyMatch(r.act, p.act)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ポリシーの作成">ポリシーの作成<a class="hash-link" href="#ポリシーの作成" title="見出しへの直接リンク">​</a></h2><p>上記のシナリオから、ポリシーは次のようになります。</p><div class="language-csv codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csv codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token value">p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> *</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> /</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> GET</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token value">p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> admin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> *</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> *</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token value">g</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> alice</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> admin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token value">g</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> bob</span><span class="token punctuation" style="color:#393A34">,</span><span class="token value"> admin</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>モデルからのマッチャは以下のことを意味します:</p><ol><li><code>(g(r.sub, p.sub) || keyMatch(r.sub, p. ub)) &lt;code&gt;</code>: リクエストの件名は、ポリシーの件名としての役割を持っているか、リクエストの件名は、 <code>keyMatch</code> 内のポリシーの件名と一致します。 <code>keyMatch</code> is built in function in Lua Casbin, you can take a look at the function's description and more such functions that could be useful <a href="https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua" target="_blank" rel="noopener noreferrer">here</a>.</li><li><code>keyMatch(r.obj, p.obj)</code>: リクエストのオブジェクトはポリシーのオブジェクト (URLパスはこちら) に一致します。</li><li><code>keyMatch(r.act, p.act)</code>: リクエストのアクションはポリシーのアクション (HTTP リクエストメソッドはこちら) と一致します。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ルート上でプラグインを有効にしています">ルート上でプラグインを有効にしています<a class="hash-link" href="#ルート上でプラグインを有効にしています" title="見出しへの直接リンク">​</a></h2><p>モデルとポリシーを作成したら、APISIX Admin API を使用してルート上で有効にできます。 モデルとポリシーのファイルパスを使用して有効にするには:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl http://127.0.0.1:9080/apisix/admin/routes/1 -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -X PUT -d '</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "plugins": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "authz-casbin": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "model_path": "/path/to/model.conf",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "policy_path": "/path/to/policy.csv",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "username": "username"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "upstream": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "nodes": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "127.0.0.1:1980": 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "roundrobin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "uri": "/*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ここで、username フィールドは、subject に渡すために使用するヘッダー名です。 例えば、ユーザー名ヘッダーを <code>user: alice</code>として渡す場合は、 <code>"username": "user"</code> を使用します。</p><p>ファイルの代わりにモデル/ポリシーテキストを使用するには、代わりに <code>モデル</code> と <code>ポリシー</code> フィールドを使用できます。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl http://127.0.0.1:9080/apisix/admin/routes/1 -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -X PUT -d '</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "plugins": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "authz-casbin": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "model": "[request_definition]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            r = sub, obj, act</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            [policy_definition]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            p = sub, obj, act</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            [role_definition]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            g = _, _</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            [policy_effect]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            e = some(where (p.eft == allow))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            [matchers]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) &amp;&amp; keyMatch(r.obj, p.obj) &amp;&amp; keyMatch(r.act, p.act)",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "policy": "p, *, /, GET</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            p, admin, *, *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            g, alice, admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            g, bob, admin",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "username": "username"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "upstream": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "nodes": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "127.0.0.1:1980": 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "roundrobin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "uri": "/*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="グローバルモデルポリシーを使用してプラグインを有効にする">グローバルモデル/ポリシーを使用してプラグインを有効にする<a class="hash-link" href="#グローバルモデルポリシーを使用してプラグインを有効にする" title="見出しへの直接リンク">​</a></h2><p>複数のルートで単一のモデルとポリシー構成を使用したい場合があります。 まず、 <code>PUT</code> のリクエストを送信して、モデルとポリシーの設定をプラグインのメタデータに追加できます:</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl http://127.0.0.1:9080/apisix/admin/plugin_metadata/authz-casbin -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -i -X PUT -d '</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"model": "[request_definition]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">r = sub, obj, act</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[policy_definition]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">p = sub, obj, act</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[role_definition]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g = _, _</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[policy_effect]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">e = some(where (p.eft == allow))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[matchers]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) &amp;&amp; keyMatch(r.obj, p.obj) &amp;&amp; keyMatch(r.act, p.act)",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">"policy": "p, *, /, GET</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">p, admin, *, *</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g, alice, admin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g, bob, admin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>そして、いくつかのルートで同じ設定を有効にするには、Admin API を使用してリクエストを送信します。</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl http://127.0.0.1:9080/apisix/admin/routes/1 -H 'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1' -X PUT -d '</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "plugins": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "authz-casbin": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "username": "username"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "upstream": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "nodes": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "127.0.0.1:1980": 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "roundrobin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "uri": "/route1/*"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="クリップボードにコードをコピー" title="コピー" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>これにより、プラグインのメタデータの設定がルートに追加されます。 また、更新されたモデルとポリシー設定を使用してプラグインのメタデータにリクエストを再送することで、プラグインのメタデータ設定を簡単に更新することもできます。 プラグインはメタデータを使ってルートを自動的に更新します</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ユースケース">ユースケース<a class="hash-link" href="#ユースケース" title="見出しへの直接リンク">​</a></h2><ul><li>このプラグインの主な使用例は、API での認証を実装することです。 このプラグインは、認証モデルとポリシーの設定で使用しているAPIルートに簡単に追加できます。</li><li>すべての API に対して単一の認可モデルを使用したい場合は、グローバルモデル/ポリシーメソッドを使用できます。 これにより、etcd 内のメタデータのみを更新する必要があるため、すべてのルートでポリシーの更新が容易になります。</li><li>異なるルートごとに異なるモデルを使用したい場合は、route (ルート)メソッドを使用できます。 これは、異なるAPIルートが異なるユーザ権限セットを持つ場合に役立ちます。 より大きなポリシーを扱っている場合にもこれを使用できます。複数のルートにフィルタされると認可が速くなりますので。</li></ul>]]></content>
        <author>
            <name>Rushikesh Tote</name>
            <uri>http://github.com/rushitote</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yang Luo - Google オープンソースピアボーナス受賞]]></title>
        <id>/2020/04/21/google-award</id>
        <link href="https://casbin.org/ja/blog/2020/04/21/google-award"/>
        <updated>2020-04-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are pleased to announce that Casbin's founder, Yang Luo is awarded the "Google Open Source Peer Bonus winners" for his work on Casbin, Npcap and Nmap in 2019 Q3.]]></summary>
        <content type="html"><![CDATA[<p>Today, we are pleased to announce that Casbin's founder, <a href="https://github.com/hsluoyz" target="_blank" rel="noopener noreferrer">Yang Luo</a> is awarded the "Google Open Source Peer Bonus winners" for his work on <a href="/ja/">Casbin</a>, <a href="https://nmap.org/npcap/" target="_blank" rel="noopener noreferrer">Npcap</a> and <a href="https://nmap.org/" target="_blank" rel="noopener noreferrer">Nmap</a> in 2019 Q3.</p><p><img loading="lazy" src="https://hsluoyz.github.io/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.png" alt="spb" class="img_ev3q"></p><blockquote><p>オリジナルの賞状はこちら <a href="https://github.com/hsluoyz/hsluoyz.github.io/blob/master/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.pdf" target="_blank" rel="noopener noreferrer"></a> にアクセスできます。</p></blockquote><p><a href="https://opensource.google.com/docs/growing/peer-bonus/" target="_blank" rel="noopener noreferrer">Google Open Source Peer Bonus</a> プログラムは次のように記述されています。</p><blockquote><p><em>Google ピアボーナスは、上記以降のGoogleの仲間を認識するために使用されるのと同じように。 オープンソースピアボーナスは、オープンソースに卓越した貢献をした外部の人を認識します。</em></p></blockquote><p>The <a href="https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html" target="_blank" rel="noopener noreferrer">announcement for the 2019 winners</a> is available at:</p><blockquote><p><a href="https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html" target="_blank" rel="noopener noreferrer">https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html</a></p></blockquote><p>ヤン氏とカスビン氏は、オープンソースの開発者やそこに影響を与えるプロジェクトにリストされています。 Git、TensorFlow、V8、CPython、LLVM、Apacheプロジェクト、Angular、Jenkinsなど。</p><p>オープンソースとクラウドのセキュリティへの貢献により、Casbinがこのように認識されたことを嬉しく思います。</p><p><em>ご利用ありがとうございます！</em></p>]]></content>
        <author>
            <name>Casbin</name>
            <uri>http://github.com/casbin</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ドキュメントのリワーク]]></title>
        <id>/2018/09/23/new-website</id>
        <link href="https://casbin.org/ja/blog/2018/09/23/new-website"/>
        <updated>2018-09-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we migrated Casbin's documentation from GitHub Wiki to Docs of this website, which is powered by Docusaurus. Docusaurusはより良い マークダウンスタイル、全文検索、バージョン管理、翻訳などの素晴らしい機能をたくさん提供しています。]]></summary>
        <content type="html"><![CDATA[<p>Today, we migrated Casbin's documentation from GitHub Wiki to <code>Docs</code> of this website, which is powered by Docusaurus. Docusaurusはより良い マークダウンスタイル、全文検索、バージョン管理、翻訳などの素晴らしい機能をたくさん提供しています。</p><p>ドキュメントはまだ完璧ではなく、まだチューニングが必要です。 The source code is hosted on GitHub: <a href="https://github.com/casbin/casbin-website" target="_blank" rel="noopener noreferrer">https://github.com/casbin/casbin-website</a>.</p><p>どんな貢献も提案も歓迎です!</p>]]></content>
        <author>
            <name>Yang Luo</name>
            <uri>http://github.com/hsluoyz</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[node-Casbin: Casbin ファミリーの新しいメンバー]]></title>
        <id>/2018/08/27/node-casbin</id>
        <link href="https://casbin.org/ja/blog/2018/08/27/node-casbin"/>
        <updated>2018-08-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[今日、Casbin を Node.js に正常に移植しました。これは node-Casbin という名前です。]]></summary>
        <content type="html"><![CDATA[<p>今日、Casbin を Node.js に正常に移植しました。これは <a href="https://github.com/casbin/node-casbin" target="_blank" rel="noopener noreferrer">node-Casbin</a> という名前です。</p><p><strong>node-Casbin</strong> は、Casbin の他の実装と同様の使用法と API を共有しています。 Express、Koa2、Egg.jsのミドルウェアは 用意されています。 シーケンス用のストレージアダプタも用意されています。</p><p>それがあなたの必要性によく役立つことを願っています:)</p><p>GitHub: <a href="https://github.com/casbin/node-casbin" target="_blank" rel="noopener noreferrer">https://github.com/casbin/node-casbin</a></p>]]></content>
        <author>
            <name>Zixuan Liu</name>
            <uri>http://github.com/nodece</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Casbin Server が起動しました！]]></title>
        <id>/2018/08/07/launching-casbin-server</id>
        <link href="https://casbin.org/ja/blog/2018/08/07/launching-casbin-server"/>
        <updated>2018-08-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[一部のお客様は、Casbinがライブラリの代わりにサービスとして使用できるかどうかを尋ねています。 の答えは はい です。 本日、 Casbin Server プロジェクトを、 Access Control as a Service の具体的なソリューションとして開始しました。]]></summary>
        <content type="html"><![CDATA[<p>一部のお客様は、Casbinがライブラリの代わりにサービスとして使用できるかどうかを尋ねています。 の答えは <strong>はい</strong> です。 本日、 <a href="https://github.com/casbin/casbin-server" target="_blank" rel="noopener noreferrer">Casbin Server</a> プロジェクトを、 <strong>Access Control as a Service</strong> の具体的なソリューションとして開始しました。</p><p><strong>Casbin Server</strong> はコアチームによって積極的に開発されています。 いくつかの機能があります:</p><ul><li>純粋にゴランで開発されました。</li><li>数千のCasbinインスタンスを管理できるため、ポリシー執行ロジックを複数のサービスから1つのCasbinサーバーに移動できます。</li><li><strong>gRPC</strong> はCasbin Server との通信に使用されます。 また、近い将来、 <strong>RESTful</strong> のサポートを追加することも検討しています。</li><li>開発者以外の管理者は、Casbinインスタンス、モデル、ポリシーストレージ、ロードバランシングなどのすべての詳細を管理するためのフレンドリーなWeb管理者ポータルが提供されています。</li></ul><p>ソースコードは GitHub でホストされています: <a href="https://github.com/casbin/casbin-server" target="_blank" rel="noopener noreferrer">https://github.com/casbin/casbin-server</a></p><p>問題やプルリクエストは歓迎します:)</p>]]></content>
        <author>
            <name>Helong Zhang</name>
            <uri>http://github.com/BetaCat0</uri>
        </author>
    </entry>
</feed>