"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[6325],{3905:(a,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>k});var t=n(7294);function i(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function r(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,t)}return n}function s(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function l(a,e){if(null==a)return{};var n,t,i=function(a,e){if(null==a)return{};var n,t,i={},r=Object.keys(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||(i[n]=a[n]);return i}(a,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)n=r[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(a,n)&&(i[n]=a[n])}return i}var p=t.createContext({}),o=function(a){var e=t.useContext(p),n=e;return a&&(n="function"==typeof a?a(e):s(s({},e),a)),n},m=function(a){var e=o(a.components);return t.createElement(p.Provider,{value:e},a.children)},d={inlineCode:"code",wrapper:function(a){var e=a.children;return t.createElement(t.Fragment,{},e)}},u=t.forwardRef((function(a,e){var n=a.components,i=a.mdxType,r=a.originalType,p=a.parentName,m=l(a,["components","mdxType","originalType","parentName"]),u=o(n),k=i,c=u["".concat(p,".").concat(k)]||u[k]||d[k]||r;return n?t.createElement(c,s(s({ref:e},m),{},{components:n})):t.createElement(c,s({ref:e},m))}));function k(a,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof a||i){var r=n.length,s=new Array(r);s[0]=u;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=a,l.mdxType="string"==typeof a?a:i,s[1]=l;for(var o=2;o<r;o++)s[o]=n[o];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6934:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var t=n(7462),i=(n(7294),n(3905));const r={id:"syntax-for-models",title:"Syntax for Models",description:"Sintaks untuk Model",keywords:["syntax"],authors:["nodece"]},s=void 0,l={unversionedId:"syntax-for-models",id:"syntax-for-models",title:"Syntax for Models",description:"Sintaks untuk Model",source:"@site/i18n/ms/docusaurus-plugin-content-docs/current/SyntaxForModels.mdx",sourceDirName:".",slug:"/syntax-for-models",permalink:"/ms/docs/syntax-for-models",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/SyntaxForModels.mdx",tags:[],version:"current",frontMatter:{id:"syntax-for-models",title:"Syntax for Models",description:"Sintaks untuk Model",keywords:["syntax"],authors:["nodece"]},sidebar:"docs",previous:{title:"Supported Models",permalink:"/ms/docs/supported-models"},next:{title:"Effector",permalink:"/ms/docs/effector"}},p={},o=[{value:"Definisi permintaan",id:"definisi-permintaan",level:2},{value:"Takrifan Polisi",id:"takrifan-polisi",level:2},{value:"Kesan Dasar",id:"kesan-dasar",level:2},{value:"Pemadanan",id:"pemadanan",level:2},{value:"Susunan ungkapan dalam pemadanan",id:"susunan-ungkapan-dalam-pemadanan",level:3},{value:"Pelbagai Jenis Bahagian",id:"pelbagai-jenis-bahagian",level:2},{value:"Tatabahasa Khas",id:"tatabahasa-khas",level:2},{value:"Penilaian Ekspresi",id:"penilaian-ekspresi",level:2}],m=a=>function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)},d=m("Tabs"),u=m("TabItem"),k={toc:o};function c(a){let{components:e,...n}=a;return(0,i.kt)("wrapper",(0,t.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Konfigurasi model (CONF) harus mempunyai sekurang-kurangnya empat bahagian: ",(0,i.kt)("inlineCode",{parentName:"p"},"[request_definition]"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"[policy_definition]"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"[policy_effect]"),", dan ",(0,i.kt)("inlineCode",{parentName:"p"},"[matchers]"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jika model menggunakan Kontrol Akses Berbasis Peranan (RBAC), ia juga harus memasukkan bahagian ",(0,i.kt)("inlineCode",{parentName:"p"},"[role_definition]"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Konfigurasi model (CONF) boleh mengandungi komen. Komen bermula dengan simbol ",(0,i.kt)("inlineCode",{parentName:"p"},"#"),", dan semua yang berada selepas simbol ",(0,i.kt)("inlineCode",{parentName:"p"},"#")," akan dikomen keluar."))),(0,i.kt)("h2",{id:"definisi-permintaan"},"Definisi permintaan"),(0,i.kt)("p",null,"Bahagian ",(0,i.kt)("inlineCode",{parentName:"p"},"[request_definition]")," mentakrifkan argumen dalam fungsi ",(0,i.kt)("inlineCode",{parentName:"p"},"e.Enforce(...)"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n")),(0,i.kt)("p",null,"Dalam contoh ini, ",(0,i.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"obj"),", dan ",(0,i.kt)("inlineCode",{parentName:"p"},"act")," mewakili tiga klasik akses: subjek (entiti yang mengakses), objek (sumber yang diakses), dan tindakan (cara akses). Walau bagaimanapun, anda boleh menyesuaikan format permintaan anda sendiri. Sebagai contoh, anda boleh menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},"sub, act")," jika anda tidak perlu menentukan sumber tertentu, atau ",(0,i.kt)("inlineCode",{parentName:"p"},"sub, sub2, obj, act")," jika anda mempunyai dua entiti yang mengakses."),(0,i.kt)("h2",{id:"takrifan-polisi"},"Takrifan Polisi"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[policy_definition]")," adalah takrifan untuk satu polisi. Ia mentakrifkan makna polisi tersebut. Sebagai contoh, kami mempunyai model berikut:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_definition]\np = sub, obj, act\np2 = sub, act\n")),(0,i.kt)("p",null,"Dan kami mempunyai polisi berikut (jika dalam fail polisi):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np2, bob, write-all-objects\n")),(0,i.kt)("p",null,"Setiap baris dalam polisi dipanggil peraturan polisi. Setiap peraturan polisi bermula dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"jenis polisi"),", seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"p")," atau ",(0,i.kt)("inlineCode",{parentName:"p"},"p2"),". Ia digunakan untuk memadankan takrifan polisi jika terdapat beberapa takrifan. Dasar di atas menunjukkan ikatan berikut. Ikatan ini boleh digunakan dalam penapis."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"(alice, data1, read) -> (p.sub, p.obj, p.act)\n(bob, write-all-objects) -> (p2.sub, p2.act)\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Elemen dalam peraturan dasar sentiasa dianggap sebagai ",(0,i.kt)("inlineCode",{parentName:"p"},"rentetan"),". Sekiranya anda mempunyai sebarang pertanyaan mengenai ini, sila rujuk perbincangan di: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/113"},"https://github.com/casbin/casbin/issues/113"))),(0,i.kt)("h2",{id:"kesan-dasar"},"Kesan Dasar"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[policy_effect]")," adalah definisi untuk kesan dasar. Ia menentukan sama ada permintaan akses harus diluluskan jika berbilang peraturan dasar sepadan dengan permintaan tersebut. Contohnya, satu peraturan membenarkan dan yang lain menafikan."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = some(where (p.eft == allow))\n")),(0,i.kt)("p",null,"Kesan dasar di atas bermakna jika terdapat sebarang peraturan dasar yang sepadan dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"benarkan"),", kesan akhir adalah ",(0,i.kt)("inlineCode",{parentName:"p"},"benarkan")," (juga dikenali sebagai benarkan-timpa). ",(0,i.kt)("inlineCode",{parentName:"p"},"p.eft")," adalah kesan untuk satu dasar, dan ia boleh menjadi sama ada ",(0,i.kt)("inlineCode",{parentName:"p"},"benarkan")," atau ",(0,i.kt)("inlineCode",{parentName:"p"},"nafi"),". Ia adalah pilihan, dan nilai lalai ialah ",(0,i.kt)("inlineCode",{parentName:"p"},"allow"),". Oleh kerana kita tidak menentukannya di atas, ia menggunakan nilai lalai."),(0,i.kt)("p",null,"Satu lagi contoh untuk kesan dasar ialah:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = !some(where (p.eft == deny))\n")),(0,i.kt)("p",null,"Ini bermakna jika tiada peraturan dasar yang sepadan dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"deny"),", kesan akhir ialah ",(0,i.kt)("inlineCode",{parentName:"p"},"allow")," (juga dikenali sebagai deny-override). ",(0,i.kt)("inlineCode",{parentName:"p"},"some")," bermakna terdapat sekurang-kurangnya satu peraturan dasar yang sepadan. ",(0,i.kt)("inlineCode",{parentName:"p"},"any")," bermakna semua peraturan dasar yang sepadan (tidak digunakan di sini). Kesan dasar juga boleh dihubungkaitkan dengan ungkapan logik:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n")),(0,i.kt)("p",null,"Ini bermakna mesti ada sekurang-kurangnya satu peraturan dasar yang sepadan dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"allow"),", dan tidak boleh ada peraturan dasar yang sepadan dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"deny"),". Oleh itu, dengan cara ini, kedua-dua kebenaran dan penafian diluluskan disokong, dan penafian mengatasi."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Walaupun kita mereka bentuk sintaks kesan dasar seperti di atas, pelaksanaan semasa hanya menggunakan kesan dasar yang dikodkan secara keras. Ini kerana kami mendapati bahawa tidak ada keperluan yang besar untuk tahap fleksibiliti tersebut. Jadi buat masa ini, anda mesti menggunakan salah satu kesan polisi terbina dalam daripada menyesuaikan sendiri.")),(0,i.kt)("p",null,"Kesan polisi terbina dalam yang disokong adalah:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Kesan Polisi"),(0,i.kt)("th",{parentName:"tr",align:null},"Maksud"),(0,i.kt)("th",{parentName:"tr",align:null},"Contoh"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"some(where (p.eft == allow))"),(0,i.kt)("td",{parentName:"tr",align:null},"allow-override"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"ACL, RBAC, dll."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"!some(where (p.eft == deny))"),(0,i.kt)("td",{parentName:"tr",align:null},"tolak-mengatasi"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Tolak-mengatasi"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"beberapa(tempat (p.eft == benarkan)) && !beberapa(tempat (p.eft == tolak))"),(0,i.kt)("td",{parentName:"tr",align:null},"benarkan-dan-tolak"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Benarkan-dan-tolak"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"keutamaan(p.eft) ","|","|"," tolak"),(0,i.kt)("td",{parentName:"tr",align:null},"keutamaan"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Keutamaan"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"keutamaanSubjek(p.eft)"),(0,i.kt)("td",{parentName:"tr",align:null},"keutamaan berdasarkan peranan"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/supported-models#examples"},"Subjek-Keutamaan"))))),(0,i.kt)("h2",{id:"pemadanan"},"Pemadanan"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[pemadanan]")," adalah definisi untuk pemadanan polisi. Pemadanan adalah ungkapan yang mentakrifkan bagaimana peraturan polisi dinilai terhadap permintaan."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act\n")),(0,i.kt)("p",null,"Pemadanan di atas adalah yang paling mudah dan bermaksud bahawa subjek, objek, dan tindakan dalam permintaan harus sepadan dengan yang ada dalam peraturan polisi."),(0,i.kt)("p",null,"Operator aritmetik seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"+, -, *, /")," dan operator logik seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"&&, ||, !")," boleh digunakan dalam pemadanan."),(0,i.kt)("h3",{id:"susunan-ungkapan-dalam-pemadanan"},"Susunan ungkapan dalam pemadanan"),(0,i.kt)("p",null,"Susunan ungkapan boleh memberi kesan yang besar kepada prestasi. Lihat contoh berikut untuk butiran lanjut:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'const rbac_models = `\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n`\n\nfunc TestManyRoles(t *testing.T) {\n\n    m, _ := model.NewModelFromString(rbac_models)\n    e, _ := NewEnforcer(m, false)\n\n    roles := []string{"admin", "manager", "developer", "tester"}\n\n    // 2500 projects\n    for nbPrj := 1; nbPrj < 2500; nbPrj++ {\n        // 4 objects and 1 role per object (so 4 roles)\n        for _, role := range roles {\n            roleDB := fmt.Sprintf("%s_project:%d", role, nbPrj)\n            objectDB := fmt.Sprintf("/projects/%d", nbPrj)\n            e.AddPolicy(roleDB, objectDB, "GET")\n        }\n        jasmineRole := fmt.Sprintf("%s_project:%d", roles[1], nbPrj)\n        e.AddGroupingPolicy("jasmine", jasmineRole)\n    }\n\n    e.AddGroupingPolicy("abu", "manager_project:1")\n    e.AddGroupingPolicy("abu", "manager_project:2499")\n\n    // With same number of policies\n    // User \'abu\' has only two roles\n    // User \'jasmine\' has many roles (1 role per policy, here 2500 roles)\n\n    request := func(subject, object, action string) {\n        t0 := time.Now()\n        resp, _ := e.Enforce(subject, object, action)\n        tElapse := time.Since(t0)\n        t.Logf("RESPONSE %-10s %s\\t %s : %5v IN: %+v", subject, object, action, resp, tElapse)\n        if tElapse > time.Millisecond*100 {\n            t.Errorf("More than 100 milliseconds for %s %s %s : %+v", subject, object, action, tElapse)\n        }\n    }\n\n    request("abu", "/projects/1", "GET")        // really fast because only 2 roles in all policies and at the beginning of the casbin_rule table\n    request("abu", "/projects/2499", "GET")     // fast because only 2 roles in all policies\n    request("jasmine", "/projects/1", "GET")    // really fast at the beginning of the casbin_rule table\n\n    request("jasmine", "/projects/2499", "GET") // slow and fails the only 1st time   <<<< pb here\n    request("jasmine", "/projects/2499", "GET") // fast maybe due to internal cache mechanism\n\n    // same issue with non-existing roles\n    // request("jasmine", "/projects/999999", "GET") // slow fails the only 1st time   <<<< pb here\n    // request("jasmine", "/projects/999999", "GET") // fast maybe due to internal cache mechanism\n}\n')),(0,i.kt)("p",null,"Masa penguatkuasaan mungkin sangat lama, sehingga 6 saat."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go test -run ^TestManyRoles$ github.com/casbin/casbin/v2 -v\n\n=== RUN   TestManyRoles\n    rbac_api_test.go:598: RESPONSE abu        /projects/1        GET :  true IN: 438.379\xb5s\n    rbac_api_test.go:598: RESPONSE abu        /projects/2499     GET :  true IN: 39.005173ms\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/1        GET :  true IN: 1.774319ms\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/2499     GET :  true IN: 6.164071648s\n    rbac_api_test.go:600: More than 100 milliseconds for jasmine /projects/2499 GET : 6.164071648s\n    rbac_api_test.go:598: RESPONSE jasmine    /projects/2499     GET :  true IN: 12.164122ms\n--- FAIL: TestManyRoles (6.24s)\nFAIL\nFAIL    github.com/casbin/casbin/v2     6.244s\nFAIL\n")),(0,i.kt)("p",null,"Walau bagaimanapun, jika kita menyesuaikan susunan ungkapan dalam penapis dan meletakkan ungkapan yang memakan lebih banyak masa seperti fungsi di belakang, masa pelaksanaan akan menjadi sangat singkat."),(0,i.kt)("p",null,"Menukar susunan ungkapan dalam penapis dalam contoh di atas kepada:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = r.obj == p.obj && g(r.sub, p.sub) && r.act == p.act\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go test -run ^TestManyRoles$ github.com/casbin/casbin/v2 -v\n=== RUN   TestManyRoles\n    rbac_api_test.go:599: RESPONSE abu        /projects/1        GET :  true IN: 786.635\xb5s\n    rbac_api_test.go:599: RESPONSE abu        /projects/2499     GET :  true IN: 4.933064ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/1        GET :  true IN: 2.908534ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/2499     GET :  true IN: 7.292963ms\n    rbac_api_test.go:599: RESPONSE jasmine    /projects/2499     GET :  true IN: 6.168307ms\n--- PASS: TestManyRoles (0.05s)\nPASS\nok      github.com/casbin/casbin/v2     0.053s\n")),(0,i.kt)("h2",{id:"pelbagai-jenis-bahagian"},"Pelbagai Jenis Bahagian"),(0,i.kt)("p",null,"Jika anda memerlukan pelbagai definisi polisi atau pelbagai penapis, anda boleh menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},"p2")," atau ",(0,i.kt)("inlineCode",{parentName:"p"},"m2")," sebagai contoh. Sebenarnya, keempat-empat bahagian yang dinyatakan di atas boleh menggunakan pelbagai jenis, dan sintaksnya adalah ",(0,i.kt)("inlineCode",{parentName:"p"},"r")," diikuti dengan nombor, seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"r2")," atau ",(0,i.kt)("inlineCode",{parentName:"p"},"e2"),". Secara lalai, keempat-empat bahagian ini harus sepadan satu-dengan-satu. Sebagai contoh, bahagian ",(0,i.kt)("inlineCode",{parentName:"p"},"r2")," anda hanya akan menggunakan penapis ",(0,i.kt)("inlineCode",{parentName:"p"},"m2")," untuk memadankan polisi ",(0,i.kt)("inlineCode",{parentName:"p"},"p2"),"."),(0,i.kt)("p",null,"Anda boleh menyampaikan ",(0,i.kt)("inlineCode",{parentName:"p"},"EnforceContext")," sebagai parameter pertama kaedah ",(0,i.kt)("inlineCode",{parentName:"p"},"enforce")," untuk menentukan jenis. ",(0,i.kt)("inlineCode",{parentName:"p"},"EnforceContext")," ditakrifkan seperti berikut:"),(0,i.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'EnforceContext{"r2","p2","e2","m2"}\ntype EnforceContext struct {\n    RType string\n    PType string\n    EType string\n    MType string\n}\n'))),(0,i.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const enforceContext = new EnforceContext('r2', 'p2', 'e2', 'm2');\nclass EnforceContext {\n  constructor(rType, pType, eType, mType) {\n    this.pType = pType;\n    this.eType = eType;\n    this.mType = mType;\n    this.rType = rType;\n  }\n}\n"))),(0,i.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'EnforceContext enforceContext = new EnforceContext("2");\npublic class EnforceContext {\n    private String pType;\n    private String eType;\n    private String mType;\n    private String rType;\n    public EnforceContext(String suffix) {\n      this.pType = "p" + suffix;\n      this.eType = "e" + suffix;\n      this.mType = "m" + suffix;\n      this.rType = "r" + suffix;\n    }\n}\n')))),(0,i.kt)("p",null,"Berikut adalah contoh penggunaan. Sila rujuk kepada ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/multiple_policy_definitions_model.conf"},"model")," dan ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/multiple_policy_definitions_policy.csv"},"polisi"),". Permintaannya adalah seperti berikut:"),(0,i.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// Pass in a suffix as a parameter to NewEnforceContext, such as 2 or 3, and it will create r2, p2, etc.\nenforceContext := NewEnforceContext("2")\n// You can also specify a certain type individually\nenforceContext.EType = "e"\n// Don\'t pass in EnforceContext; the default is r, p, e, m\ne.Enforce("alice", "data2", "read")        // true\n// Pass in EnforceContext\ne.Enforce(enforceContext, struct{ Age int }{Age: 70}, "/data1", "read")        //false\ne.Enforce(enforceContext, struct{ Age int }{Age: 30}, "/data1", "read")        //true\n'))),(0,i.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// Pass in a suffix as a parameter to NewEnforceContext, such as 2 or 3, and it will create r2, p2, etc.\nconst enforceContext = new NewEnforceContext(\'2\');\n\n// You can also specify a certain type individually\nenforceContext.eType = "e"\n\n// Don\'t pass in EnforceContext; the default is r, p, e, m\ne.Enforce("alice", "data2", "read")        // true\n\n// Pass in EnforceContext\ne.Enforce(enforceContext, {Age: 70}, "/data1", "read")        //false\ne.Enforce(enforceContext, {Age: 30}, "/data1", "read")        //true\n'))),(0,i.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Pass in a suffix as a parameter to NewEnforceContext, such as 2 or 3, and it will create r2, p2, etc.\nEnforceContext enforceContext = new EnforceContext("2");\n// You can also specify a certain type individually\nenforceContext.seteType("e");\n// Don\'t pass in EnforceContext; the default is r, p, e, m\ne.enforce("alice", "data2", "read");  // true\n// Pass in EnforceContext\n// TestEvalRule is located in https://github.com/casbin/jcasbin/blob/master/src/test/java/org/casbin/jcasbin/main/AbacAPIUnitTest.java#L56\ne.enforce(enforceContext, new AbacAPIUnitTest.TestEvalRule("alice", 70), "/data1", "read"); // false\ne.enforce(enforceContext, new AbacAPIUnitTest.TestEvalRule("alice", 30), "/data1", "read"); // true\n')))),(0,i.kt)("h2",{id:"tatabahasa-khas"},"Tatabahasa Khas"),(0,i.kt)("p",null,'Anda juga boleh menggunakan operator "in", yang merupakan satu-satunya operator dengan nama teks. Operator ini memeriksa tatasusunan di sebelah kanan untuk melihat sama ada ia mengandungi nilai yang sama dengan nilai di sebelah kiri. Kesamaan ditentukan dengan menggunakan operator ==, dan perpustakaan ini tidak menyemak jenis antara nilai-nilai tersebut. Selagi dua nilai boleh ditukar kepada interface{} dan masih boleh diperiksa untuk kesamaan dengan ==, ia akan bertindak seperti yang dijangkakan. Ambil perhatian bahawa anda boleh menggunakan parameter untuk tatasusunan, tetapi ia mestilah []interface{}.'),(0,i.kt)("p",null,"Rujuk juga kepada ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/rbac_model_matcher_using_in_op.conf"},"rbac","_","model","_","matcher","_","using","_","in","_","op"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/keyget2_model.conf"},"keyget2","_","model"),", dan ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/277c1a2b85698272f764d71a94d2595a8d425915/examples/keyget_model.conf"},"keyget","_","model"),"."),(0,i.kt)("p",null,"Contoh:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj\n...\n[matchers]\nm = r.sub.Name in (r.obj.Admins)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'e.Enforce(Sub{Name: "alice"}, Obj{Name: "a book", Admins: []interface{}{"alice", "bob"}})\n')),(0,i.kt)("h2",{id:"penilaian-ekspresi"},"Penilaian Ekspresi"),(0,i.kt)("p",null,"Penilaian pencocokan dalam Casbin dilaksanakan oleh penilai ekspresi dalam setiap bahasa. Casbin menggabungkan kekuatan mereka untuk menyediakan bahasa PERM yang seragam. Selain sintaks model yang diberikan di sini, penilai ekspresi ini mungkin menawarkan fungsi tambahan yang mungkin tidak didukung oleh bahasa atau implementasi lain. Harap berhati-hati ketika menggunakan fungsi ini."),(0,i.kt)("p",null,"Penilai ekspresi yang digunakan oleh setiap implementasi Casbin adalah sebagai berikut:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Implementasi"),(0,i.kt)("th",{parentName:"tr",align:null},"Bahasa"),(0,i.kt)("th",{parentName:"tr",align:null},"Penilai Ekspresi"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Golang"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/Knetic/govaluate"},"https://github.com/Knetic/govaluate"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"jCasbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Java"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/killme2008/aviator"},"https://github.com/killme2008/aviator"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Node-Casbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Node.js"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/donmccurdy/expression-eval"},"https://github.com/donmccurdy/expression-eval"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PHP-Casbin"),(0,i.kt)("td",{parentName:"tr",align:null},"PHP"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/symfony/expression-language"},"https://github.com/symfony/expression-language"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"PyCasbin"),(0,i.kt)("td",{parentName:"tr",align:null},"Python"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/danthedeckie/simpleeval"},"https://github.com/danthedeckie/simpleeval"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Casbin.NET"),(0,i.kt)("td",{parentName:"tr",align:null},"C#"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/davideicardi/DynamicExpresso"},"https://github.com/davideicardi/DynamicExpresso"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Casbin4D"),(0,i.kt)("td",{parentName:"tr",align:null},"Delphi"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/casbin4d/Casbin4D/tree/master/SourceCode/Common/Third%20Party/TExpressionParser"},"https://github.com/casbin4d/Casbin4D/tree/master/SourceCode/Common/Third%20Party/TExpressionParser"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"casbin-rs"),(0,i.kt)("td",{parentName:"tr",align:null},"Rust"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/jonathandturner/rhai"},"https://github.com/jonathandturner/rhai"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"casbin-cpp"),(0,i.kt)("td",{parentName:"tr",align:null},"C++"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/ArashPartow/exprtk"},"https://github.com/ArashPartow/exprtk"))))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Jika anda menghadapi masalah prestasi dengan Casbin, ia mungkin disebabkan oleh kekurangan kecekapan penilaian ungkapan. Anda boleh menangani isu ini kepada Casbin atau penilaian ungkapan terus untuk mendapatkan nasihat tentang mempercepatkan prestasi. Untuk maklumat lanjut, sila rujuk bahagian ",(0,i.kt)("a",{parentName:"p",href:"/docs/benchmark"},"Penanda Aras"),".")))}c.isMDXComponent=!0}}]);