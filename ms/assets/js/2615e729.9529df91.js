"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2480],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>s});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function d(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=t.createContext({}),m=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=m(e.components);return t.createElement(p.Provider,{value:a},e.children)},i={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},g=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),g=m(n),s=l,k=g["".concat(p,".").concat(s)]||g[s]||i[s]||r;return n?t.createElement(k,o(o({ref:a},u),{},{components:n})):t.createElement(k,o({ref:a},u))}));function s(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=g;var d={};for(var p in a)hasOwnProperty.call(a,p)&&(d[p]=a[p]);d.originalType=e,d.mdxType="string"==typeof e?e:l,o[1]=d;for(var m=2;m<r;m++)o[m]=n[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3021:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>k,frontMatter:()=>r,metadata:()=>d,toc:()=>m});var t=n(7462),l=(n(7294),n(3905));const r={id:"rolemanager-api",title:"RoleManager API",description:"API RoleManager menyediakan antara muka untuk menentukan operasi menguruskan peranan. Penambahan fungsi padanan kepada RoleManager membolehkan penggunaan wildcard dalam nama peranan dan domain.",keywords:["rolemanager","API"],authors:["closetool","kiloson-c"]},o=void 0,d={unversionedId:"rolemanager-api",id:"rolemanager-api",title:"RoleManager API",description:"API RoleManager menyediakan antara muka untuk menentukan operasi menguruskan peranan. Penambahan fungsi padanan kepada RoleManager membolehkan penggunaan wildcard dalam nama peranan dan domain.",source:"@site/i18n/ms/docusaurus-plugin-content-docs/current/RoleManagerApi.mdx",sourceDirName:".",slug:"/rolemanager-api",permalink:"/ms/docs/rolemanager-api",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RoleManagerApi.mdx",tags:[],version:"current",frontMatter:{id:"rolemanager-api",title:"RoleManager API",description:"API RoleManager menyediakan antara muka untuk menentukan operasi menguruskan peranan. Penambahan fungsi padanan kepada RoleManager membolehkan penggunaan wildcard dalam nama peranan dan domain.",keywords:["rolemanager","API"],authors:["closetool","kiloson-c"]},sidebar:"docs",previous:{title:"RBAC with Conditions API",permalink:"/ms/docs/rbac-with-conditions-api"},next:{title:"Advanced usage",permalink:"/ms/docs/category/advanced-usage"}},p={},m=[{value:"RoleManager",id:"rolemanager",level:2},{value:"<code>AddNamedMatchingFunc()</code>",id:"addnamedmatchingfunc",level:3},{value:"<code>AddNamedDomainMatchingFunc()</code>",id:"addnameddomainmatchingfunc",level:3},{value:"<code>GetRoleManager()</code>",id:"getrolemanager",level:3},{value:"<code>GetNamedRoleManager()</code>",id:"getnamedrolemanager",level:3},{value:"<code>SetRoleManager()</code>",id:"setrolemanager",level:3},{value:"<code>SetNamedRoleManager()</code>",id:"setnamedrolemanager",level:3},{value:"<code>Clear()</code>",id:"clear",level:3},{value:"<code>AddLink()</code>",id:"addlink",level:3},{value:"<code>DeleteLink()</code>",id:"deletelink",level:3},{value:"<code>HasLink()</code>",id:"haslink",level:3},{value:"<code>GetRoles()</code>",id:"getroles",level:3},{value:"<code>GetUsers()</code>",id:"getusers",level:3},{value:"<code>PrintRoles()</code>",id:"printroles",level:3},{value:"<code>SetLogger()</code>",id:"setlogger",level:3},{value:"<code>GetDomains()</code>",id:"getdomains",level:3}],u=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",a)},i=u("Tabs"),g=u("TabItem"),s={toc:m};function k(e){let{components:a,...n}=e;return(0,l.kt)("wrapper",(0,t.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"rolemanager"},"RoleManager"),(0,l.kt)("p",null,"RoleManager menyediakan antara muka untuk menentukan operasi menguruskan peranan. Penambahan fungsi padanan kepada RoleManager membolehkan penggunaan wildcard dalam nama peranan dan domain."),(0,l.kt)("h3",{id:"addnamedmatchingfunc"},(0,l.kt)("inlineCode",{parentName:"h3"},"AddNamedMatchingFunc()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"AddNamedMatchingFunc")," menambahkan ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," mengikut Ptype kepada RoleManager. ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," akan digunakan semasa melakukan pemadanan peranan."),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    e.AddNamedMatchingFunc("g", "", util.KeyMatch)\n    _, _ = e.AddGroupingPolicies([][]string{{"*", "admin", "domain1"}})\n    _, _ = e.GetRoleManager().HasLink("bob", "admin", "domain1") // -> true, nil\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await e.addNamedMatchingFunc('g', Util.keyMatchFunc);\n    await e.addGroupingPolicies([['*', 'admin', 'domain1']]);\n    await e.getRoleManager().hasLink('bob', 'admin', 'domain1');\n")))),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    e, _ := casbin.NewEnforcer("path/to/model", "path/to/policy")\n    e.AddNamedMatchingFunc("g", "", util.MatchKey)\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    const e = await newEnforcer('path/to/model', 'path/to/policy');\n    await e.addNamedMatchingFunc('g', Util.keyMatchFunc);\n")))),(0,l.kt)("h3",{id:"addnameddomainmatchingfunc"},(0,l.kt)("inlineCode",{parentName:"h3"},"AddNamedDomainMatchingFunc()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"AddNamedDomainMatchingFunc")," menambahkan ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," mengikut Ptype kepada RoleManager. ",(0,l.kt)("inlineCode",{parentName:"p"},"DomainMatchingFunc")," adalah serupa dengan ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," yang disenaraikan di atas."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    e, _ := casbin.NewEnforcer("path/to/model", "path/to/policy")\n    e.AddNamedDomainMatchingFunc("g", "", util.MatchKey)\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    const e = await newEnforcer('path/to/model', 'path/to/policy');\n    await e.addNamedDomainMatchingFunc('g', Util.keyMatchFunc);\n")))),(0,l.kt)("h3",{id:"getrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetRoleManager()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"GetRoleManager")," mendapatkan pengurus peranan semasa untuk ",(0,l.kt)("inlineCode",{parentName:"p"},"g"),"."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    rm := e.GetRoleManager()\n"))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    const rm = await e.getRoleManager();\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm = e.get_role_manager()\n")))),(0,l.kt)("h3",{id:"getnamedrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetNamedRoleManager()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"GetNamedRoleManager")," mendapatkan pengurus peranan berdasarkan Ptype bernama."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm := e.GetNamedRoleManager("g2")\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'    const rm = await e.getNamedRoleManager("g2");\n'))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm = e.get_named_role_manager("g2")\n')))),(0,l.kt)("h3",{id:"setrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetRoleManager()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"SetRoleManager")," menetapkan pengurus peranan semasa untuk ",(0,l.kt)("inlineCode",{parentName:"p"},"g"),"."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    e.SetRoleManager(rm)\n"))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    e.setRoleManager(rm);\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm = e.set_role_manager(rm)\n")))),(0,l.kt)("h3",{id:"setnamedrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetNamedRoleManager()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"SetNamedRoleManager")," menetapkan pengurus peranan berdasarkan Ptype bernama."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm := e.SetNamedRoleManager("g2", rm)\n'))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm = e.set_role_manager("g2", rm)\n')))),(0,l.kt)("h3",{id:"clear"},(0,l.kt)("inlineCode",{parentName:"h3"},"Clear()")),(0,l.kt)("p",null,"Fungsi ",(0,l.kt)("inlineCode",{parentName:"p"},"Clear")," menghapus semua data yang disimpan dan menetapkan pengurus peranan ke keadaan awalnya."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    rm.Clear()\n"))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.clear();\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm.clear()\n")))),(0,l.kt)("h3",{id:"addlink"},(0,l.kt)("inlineCode",{parentName:"h3"},"AddLink()")),(0,l.kt)("p",null,"AddLink menambahkan hubungan warisan antara dua peranan. peranan: nama1 dan peranan: nama2.\nDomain adalah awalan kepada peranan (boleh digunakan untuk tujuan lain)."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.AddLink("u1", "g1", "domain1")\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.addLink('u1', 'g1', 'domain1');\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.add_link("u1", "g1", "domain1")\n')))),(0,l.kt)("h3",{id:"deletelink"},(0,l.kt)("inlineCode",{parentName:"h3"},"DeleteLink()")),(0,l.kt)("p",null,"DeleteLink menghapus hubungan warisan antara dua peranan. peranan: nama1 dan peranan: nama2.\nDomain ialah awalan kepada peranan (boleh digunakan untuk tujuan lain)."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.DeleteLink("u1", "g1", "domain1")\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.deleteLink('u1', 'g1', 'domain1');\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.delete_link("u1", "g1", "domain1")\n')))),(0,l.kt)("h3",{id:"haslink"},(0,l.kt)("inlineCode",{parentName:"h3"},"HasLink()")),(0,l.kt)("p",null,"HasLink menentukan sama ada terdapat pautan antara dua peranan. peranan: nama1 mewarisi peranan: nama2.\nDomain ialah awalan kepada peranan (boleh digunakan untuk tujuan lain)."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.HasLink("u1", "g1", "domain1")\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.hasLink('u1', 'g1', 'domain1');\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.has_link("u1", "g1", "domain1")\n')))),(0,l.kt)("h3",{id:"getroles"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetRoles()")),(0,l.kt)("p",null,"GetRoles mendapatkan peranan yang diwarisi oleh pengguna.\nDomain ialah awalan kepada peranan (boleh digunakan untuk tujuan lain)."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.GetRoles("u1", "domain1")\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.getRoles('u1', 'domain1');\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.get_roles("u1", "domain")\n')))),(0,l.kt)("h3",{id:"getusers"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetUsers()")),(0,l.kt)("p",null,"GetUsers mendapatkan pengguna yang mewarisi peranan.\nDomain adalah awalan kepada pengguna (boleh digunakan untuk tujuan lain)."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.GetUsers("g1")\n'))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.getUsers('g1');\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.get_users("g1")\n')))),(0,l.kt)("h3",{id:"printroles"},(0,l.kt)("inlineCode",{parentName:"h3"},"PrintRoles()")),(0,l.kt)("p",null,"PrintRoles mencetak semua peranan ke log."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    rm.PrintRoles()\n"))),(0,l.kt)(g,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.printRoles();\n"))),(0,l.kt)(g,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm.print_roles()\n")))),(0,l.kt)("h3",{id:"setlogger"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetLogger()")),(0,l.kt)("p",null,"SetLogger menetapkan logger untuk pengurus peranan."),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    logger := log.DefaultLogger{}\n    logger.EnableLog(true)\n    rm.SetLogger(&logger)\n    _ = rm.PrintRoles()\n")))),(0,l.kt)("h3",{id:"getdomains"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetDomains()")),(0,l.kt)("p",null,"GetDomains mendapatkan domain yang dimiliki oleh pengguna"),(0,l.kt)("p",null,"Contohnya:"),(0,l.kt)(i,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    result, err := rm.GetDomains(name)\n")))))}k.isMDXComponent=!0}}]);