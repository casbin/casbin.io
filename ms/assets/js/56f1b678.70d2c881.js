"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[833],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>m});var t=n(7294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=t.createContext({}),p=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=p(e.components);return t.createElement(l.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,g=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return n?t.createElement(g,o(o({ref:a},d),{},{components:n})):t.createElement(g,o({ref:a},d))}));function m(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3545:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var t=n(7462),i=(n(7294),n(3905));const r={id:"policy-subset-loading",title:"Policy Subset Loading",description:"Memuatkan polisi yang disaring",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},o=void 0,s={unversionedId:"policy-subset-loading",id:"policy-subset-loading",title:"Policy Subset Loading",description:"Memuatkan polisi yang disaring",source:"@site/i18n/ms/docusaurus-plugin-content-docs/current/PolicySubsetLoading.mdx",sourceDirName:".",slug:"/policy-subset-loading",permalink:"/ms/docs/policy-subset-loading",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PolicySubsetLoading.mdx",tags:[],version:"current",frontMatter:{id:"policy-subset-loading",title:"Policy Subset Loading",description:"Memuatkan polisi yang disaring",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Policy Storage",permalink:"/ms/docs/policy-storage"},next:{title:"Scenarios",permalink:"/ms/docs/category/scenarios"}},l={},p=[],d={toc:p};function c(e){let{components:a,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sesetengah pengaya menyokong pengurusan polisi yang disaring. Ini bermakna polisi yang dimuatkan oleh Casbin adalah subset dari polisi yang disimpan dalam pangkalan data berdasarkan penapis yang diberikan. Ini membolehkan pelaksanaan polisi yang cekap dalam persekitaran besar dan berbilang penyewa di mana menghuraikan keseluruhan polisi menjadi penghambat prestasi."),(0,i.kt)("p",null,"Untuk menggunakan polisi yang disaring dengan pengaya yang disokong, cukup panggil kaedah ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),". Format yang sah untuk parameter penapis bergantung pada pengaya yang digunakan. Untuk mengelakkan kehilangan data secara tidak sengaja, kaedah ",(0,i.kt)("inlineCode",{parentName:"p"},"SavePolicy")," dilumpuhkan apabila dasar yang disaring dimuatkan."),(0,i.kt)("p",null,"Sebagai contoh, coretan kod berikut menggunakan penyesuai fail yang disaring dalam terbina dalam dan model RBAC dengan domain. Dalam kes ini, penapis menyekat dasar kepada satu domain sahaja. Mana-mana baris dasar untuk domain selain ",(0,i.kt)("inlineCode",{parentName:"p"},'"domain1"')," dikecualikan daripada dasar yang dimuatkan:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    fileadapter "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\nenforcer, _ := casbin.NewEnforcer()\n\nadapter := fileadapter.NewFilteredAdapter("examples/rbac_with_domains_policy.csv")\nenforcer.InitWithAdapter("examples/rbac_with_domains_model.conf", adapter)\n\nfilter := &fileadapter.Filter{\n    P: []string{"", "domain1"},\n    G: []string{"", "", "domain1"},\n}\nenforcer.LoadFilteredPolicy(filter)\n\n// The loaded policy now only contains the entries pertaining to "domain1".\n')),(0,i.kt)("p",null,"Terdapat satu lagi kaedah yang menyokong ciri pemuatan subset: ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy")," adalah serupa dengan ",(0,i.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),", tetapi ia tidak mengosongkan dasar yang telah dimuatkan sebelumnya. Ia hanya menambah dasar yang disaring kepada dasar yang sedia ada."))}c.isMDXComponent=!0}}]);