"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5134],{3905:(a,n,e)=>{e.d(n,{Zo:()=>s,kt:()=>k});var t=e(7294);function i(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function l(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,t)}return e}function u(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?l(Object(e),!0).forEach((function(n){i(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function r(a,n){if(null==a)return{};var e,t,i=function(a,n){if(null==a)return{};var e,t,i={},l=Object.keys(a);for(t=0;t<l.length;t++)e=l[t],n.indexOf(e)>=0||(i[e]=a[e]);return i}(a,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);for(t=0;t<l.length;t++)e=l[t],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(i[e]=a[e])}return i}var p=t.createContext({}),m=function(a){var n=t.useContext(p),e=n;return a&&(e="function"==typeof a?a(n):u(u({},n),a)),e},s=function(a){var n=m(a.components);return t.createElement(p.Provider,{value:n},a.children)},o={inlineCode:"code",wrapper:function(a){var n=a.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(a,n){var e=a.components,i=a.mdxType,l=a.originalType,p=a.parentName,s=r(a,["components","mdxType","originalType","parentName"]),g=m(e),k=i,d=g["".concat(p,".").concat(k)]||g[k]||o[k]||l;return e?t.createElement(d,u(u({ref:n},s),{},{components:e})):t.createElement(d,u({ref:n},s))}));function k(a,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof a||i){var l=e.length,u=new Array(l);u[0]=g;var r={};for(var p in n)hasOwnProperty.call(n,p)&&(r[p]=n[p]);r.originalType=a,r.mdxType="string"==typeof a?a:i,u[1]=r;for(var m=2;m<l;m++)u[m]=e[m];return t.createElement.apply(null,u)}return t.createElement.apply(null,e)}g.displayName="MDXCreateElement"},7207:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>m});var t=e(7462),i=(e(7294),e(3905));const l={title:"Penggunaan Casbin dalam APISIX untuk kebenaran",author:"Rushikesh Tote",authorTitle:"Ahli Casbin",authorURL:"http://github.com/rushitote",authorImageURL:"https://avatars.githubusercontent.com/rushitote"},u=void 0,r={permalink:"/ms/blog/2021/08/19/apisix-casbin-authorization",editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/i18n/ms/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md",source:"@site/i18n/ms/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md",title:"Penggunaan Casbin dalam APISIX untuk kebenaran",description:"Pengenalan",date:"2021-08-19T00:00:00.000Z",formattedDate:"19 Ogos 2021",tags:[],readingTime:5.135,hasTruncateMarker:!1,authors:[{name:"Rushikesh Tote",title:"Ahli Casbin",url:"http://github.com/rushitote",imageURL:"https://avatars.githubusercontent.com/rushitote"}],frontMatter:{title:"Penggunaan Casbin dalam APISIX untuk kebenaran",author:"Rushikesh Tote",authorTitle:"Ahli Casbin",authorURL:"http://github.com/rushitote",authorImageURL:"https://avatars.githubusercontent.com/rushitote"},nextItem:{title:"Yang Luo - Pemenang Bonus Rakan Sejawat Sumber Terbuka Google",permalink:"/ms/blog/2020/04/21/google-award"}},p={authorsImageUrls:[void 0]},m=[{value:"Pengenalan",id:"pengenalan",level:2},{value:"Membuat model",id:"membuat-model",level:2},{value:"Membuat polisi",id:"membuat-polisi",level:2},{value:"Mengaktifkan plugin pada laluan",id:"mengaktifkan-plugin-pada-laluan",level:2},{value:"Mengaktifkan plugin menggunakan model/polisi global",id:"mengaktifkan-plugin-menggunakan-modelpolisi-global",level:2},{value:"Kes Penggunaan",id:"kes-penggunaan",level:2}],s={toc:m};function o(a){let{components:n,...l}=a;return(0,i.kt)("wrapper",(0,t.Z)({},s,l,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"pengenalan"},"Pengenalan"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://apisix.apache.org/"},"APISIX")," ialah gerbang API berasaskan awan yang berkelajuan tinggi dan boleh diubah suai yang berdasarkan Nginx dan etcd. Ia adalah projek sumber terbuka oleh Yayasan Perisian Apache. Selain itu, apa yang menjadikan APISIX begitu baik ialah sokongan untuk banyak plugin terbina dalam yang hebat yang boleh digunakan untuk melaksanakan ciri-ciri seperti pengesahan, pemantauan, perutean, dsb. Dan hakikat bahawa plugin dalam APISIX dimuat semula secara panas (tanpa mula semula) menjadikannya sangat dinamik."),(0,i.kt)("p",null,"Tetapi semasa menggunakan APISIX, mungkin terdapat senario di mana anda mungkin ingin menambah logik kebenaran kompleks dalam aplikasi anda. Inilah di mana authz-casbin mungkin boleh membantu anda, authz-casbin adalah plugin APISIX yang berdasarkan ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/lua-casbin/"},"Lua Casbin")," yang membolehkan penggunaan kuasa penggunaan berdasarkan pelbagai model kawalan akses. ",(0,i.kt)("a",{parentName:"p",href:"/"},"Casbin")," adalah perpustakaan penggunaan yang menyokong model kawalan akses seperti ACL, RBAC, ABAC. Asalnya ditulis dalam Go, ia telah dipindahkan ke banyak bahasa dan Lua Casbin adalah pelaksanaan Lua bagi Casbin. Pembangunan authz-casbin bermula apabila kami mencadangkan plugin baru untuk penggunaan dalam repositori APISIX (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/issues/4674"},"#4674"),") yang mana ahli teras bersetuju. Dan selepas ulasan yang membantu yang menyebabkan beberapa perubahan dan penambahbaikan utama, PR (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/apisix/pull/4710"},"#4710"),") akhirnya digabungkan."),(0,i.kt)("p",null,"Dalam blog ini, kami akan menggunakan plugin authz-casbin untuk menunjukkan bagaimana anda boleh melaksanakan model penggunaan berdasarkan Kawalan Akses Berdasarkan Peranan (RBAC) dalam APISIX."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"PERHATIAN"),": Anda perlu menggunakan beberapa plugin lain atau alur kerja tersuai untuk mengesahkan pengguna kerana Casbin hanya akan melakukan penggunaan dan bukan pengesahan."),(0,i.kt)("h2",{id:"membuat-model"},"Membuat model"),(0,i.kt)("p",null,"Plugin ini menggunakan tiga parameter untuk membenarkan sebarang permintaan - subjek, objek dan tindakan. Di sini, subjek adalah nilai tajuk nama pengguna, yang boleh menjadi seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"[username: alice]"),". Kemudian, objek tersebut adalah laluan URL yang diakses dan tindakan adalah kaedah permintaan yang digunakan."),(0,i.kt)("p",null,"Katakan kita ingin membuat model dengan tiga sumber pada laluan - ",(0,i.kt)("inlineCode",{parentName:"p"},"/`\\`, "),"/res1",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," dan `",(0,i.kt)("inlineCode",{parentName:"p"},"/res2"),"`",". Dan kita ingin mempunyai model seperti ini:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"imej",src:e(8478).Z,width:"4520",height:"1720"})),(0,i.kt)("p",null,"Ini bermakna semua pengguna (",(0,i.kt)("inlineCode",{parentName:"p"},"*`\\`) seperti contohnya "),"jack",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," boleh mengakses laman utama (",(0,i.kt)("inlineCode",{parentName:"p"},"/`\\`). Dan pengguna dengan kebenaran "),"admin",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"alice`\\` dan "),"bob",(0,i.kt)("inlineCode",{parentName:"p"},"\\")," boleh mengakses semua halaman dan sumber (seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"res1`\\` dan "),"res2",(0,i.kt)("inlineCode",{parentName:"p"},"\\"),"). Juga, mari kita hadkan pengguna tanpa sebarang kebenaran admin untuk menggunakan hanya kaedah permintaan `",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),"`",". Untuk senario ini, kita boleh menentukan model sebagai:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\n")),(0,i.kt)("h2",{id:"membuat-polisi"},"Membuat polisi"),(0,i.kt)("p",null,"Dari senario di atas, polisi tersebut akan menjadi:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, *, /, GET\np, admin, *, *\ng, alice, admin\ng, bob, admin\n")),(0,i.kt)("p",null,"Pencocok dari model bermakna:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"(g(r.sub, p.sub) || keyMatch(r.sub, p.sub))"),": Sama ada subjek permintaan mempunyai peranan sebagai subjek polisi atau subjek permintaan sepadan dengan subjek polisi dalam ",(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch"),". ",(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch")," adalah fungsi terbina dalam Lua Casbin, anda boleh melihat penerangan fungsi dan lebih banyak fungsi yang boleh berguna ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua"},"di sini"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch(r.obj, p.obj)"),": Objek permintaan sepadan dengan objek polisi (laluan URL di sini)."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"keyMatch(r.act, p.act)"),": Tindakan permintaan sepadan dengan tindakan polisi (kaedah permintaan HTTP di sini).")),(0,i.kt)("h2",{id:"mengaktifkan-plugin-pada-laluan"},"Mengaktifkan plugin pada laluan"),(0,i.kt)("p",null,"Setelah anda mencipta model dan polisi, anda boleh mengaktifkannya pada laluan menggunakan APISIX Admin API. Untuk mengaktifkannya menggunakan laluan fail model dan polisi:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "model_path": "/path/to/model.conf",\n            "policy_path": "/path/to/policy.csv",\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/*"\n}\'\n')),(0,i.kt)("p",null,"Di sini, medan nama pengguna adalah nama header yang akan anda gunakan untuk menyampaikan subjek. Sebagai contoh, jika anda akan menyampaikan header nama pengguna sebagai ",(0,i.kt)("inlineCode",{parentName:"p"},"user: alice"),", anda akan menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},'"username": "user"'),"."),(0,i.kt)("p",null,"Untuk menggunakan teks model/polisi dan bukannya fail, anda boleh menggunakan medan ",(0,i.kt)("inlineCode",{parentName:"p"},"model")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"policy")," sebagai gantinya:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "model": "[request_definition]\n            r = sub, obj, act\n\n            [policy_definition]\n            p = sub, obj, act\n\n            [role_definition]\n            g = _, _\n\n            [policy_effect]\n            e = some(where (p.eft == allow))\n\n            [matchers]\n            m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)",\n\n            "policy": "p, *, /, GET\n            p, admin, *, *\n            g, alice, admin\n            g, bob, admin",\n\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/*"\n}\'\n')),(0,i.kt)("h2",{id:"mengaktifkan-plugin-menggunakan-modelpolisi-global"},"Mengaktifkan plugin menggunakan model/polisi global"),(0,i.kt)("p",null,"Mungkin terdapat situasi di mana anda mungkin ingin menggunakan konfigurasi model dan polisi tunggal merentasi pelbagai laluan. Anda boleh melakukannya dengan terlebih dahulu menghantar permintaan ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT")," untuk menambah konfigurasi model dan polisi ke metadata plugin dengan:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/plugin_metadata/authz-casbin -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -i -X PUT -d \'\n{\n"model": "[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)",\n\n"policy": "p, *, /, GET\np, admin, *, *\ng, alice, admin\ng, bob, admin"\n}\'\n')),(0,i.kt)("p",null,"Kemudian, untuk mengaktifkan konfigurasi yang sama pada beberapa rute, hantar permintaan menggunakan Admin API:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "plugins": {\n        "authz-casbin": {\n            "username": "username"\n        }\n    },\n    "upstream": {\n        "nodes": {\n            "127.0.0.1:1980": 1\n        },\n        "type": "roundrobin"\n    },\n    "uri": "/route1/*"\n}\'\n')),(0,i.kt)("p",null,"Ini akan menambah konfigurasi metadata plugin ke rute tersebut. Anda juga boleh mengemas kini konfigurasi metadata plugin dengan mudah dengan menghantar semula permintaan ke metadata plugin dengan konfigurasi model dan polisi yang dikemas kini, plugin akan mengemas kini semua rute yang menggunakan metadata plugin secara automatik."),(0,i.kt)("h2",{id:"kes-penggunaan"},"Kes Penggunaan"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Kes penggunaan utama plugin ini adalah dalam melaksanakan kebenaran dalam API anda. Anda boleh menambah plugin ini dengan mudah pada mana-mana rute API yang anda gunakan dengan konfigurasi model dan polisi kebenaran anda."),(0,i.kt)("li",{parentName:"ul"},"Jika anda ingin mempunyai model kebenaran tunggal untuk semua API anda, anda boleh menggunakan kaedah model/polisi global. Ini memudahkan pengemaskinian polisi untuk semua rute, kerana anda hanya perlu mengemas kini metadata dalam etcd."),(0,i.kt)("li",{parentName:"ul"},"Manakala jika anda ingin menggunakan model yang berbeza untuk setiap rute yang berbeza, anda boleh menggunakan kaedah rute. Ini berguna apabila laluan API yang berbeza mempunyai set kebenaran pengguna yang berbeza. Anda juga boleh menggunakan ini apabila anda menangani dasar yang lebih besar, kerana ia akan mempercepatkan pengesahan apabila disaring ke dalam pelbagai laluan.")))}o.isMDXComponent=!0},8478:(a,n,e)=>{e.d(n,{Z:()=>t});const t=e.p+"assets/images/model-1c0c2441dd19f8b957744635985283eb.png"}}]);