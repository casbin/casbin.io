"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[6967],{3905:(e,a,n)=>{n.d(a,{Zo:()=>s,kt:()=>m});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),d=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},s=function(e){var a=d(e.components);return t.createElement(p.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,f=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return n?t.createElement(f,l(l({ref:a},s),{},{components:n})):t.createElement(f,l({ref:a},s))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1443:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=n(7462),r=(n(7294),n(3905));const i={id:"effector",title:"Effector",description:"Antaramuka Effector dalam Casbin",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},l=void 0,o={unversionedId:"effector",id:"effector",title:"Effector",description:"Antaramuka Effector dalam Casbin",source:"@site/i18n/ms/docusaurus-plugin-content-docs/current/Effector.mdx",sourceDirName:".",slug:"/effector",permalink:"/ms/docs/effector",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/Effector.mdx",tags:[],version:"current",frontMatter:{id:"effector",title:"Effector",description:"Antaramuka Effector dalam Casbin",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},sidebar:"docs",previous:{title:"Syntax for Models",permalink:"/ms/docs/syntax-for-models"},next:{title:"Functions",permalink:"/ms/docs/function"}},p={},d=[{value:"<code>MergeEffects()</code>",id:"mergeeffects",level:2}],s=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",a)},c=s("Tabs"),u=s("TabItem"),m={toc:d};function f(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Effect")," mewakili hasil dari peraturan dasar, dan ",(0,r.kt)("inlineCode",{parentName:"p"},"Effector")," adalah antara muka untuk mengendalikan kesan dalam Casbin."),(0,r.kt)("h2",{id:"mergeeffects"},(0,r.kt)("inlineCode",{parentName:"h2"},"MergeEffects()")),(0,r.kt)("p",null,"Fungsi ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeEffects()")," digunakan untuk menggabungkan semua hasil padanan yang dikumpulkan oleh enforcer menjadi satu keputusan tunggal."),(0,r.kt)("p",null,"Contohnya:"),(0,r.kt)(c,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"Effect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,r.kt)("p",null,"Dalam contoh ini:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Effect")," adalah keputusan akhir yang digabungkan oleh fungsi ini (diinisialisasi sebagai ",(0,r.kt)("inlineCode",{parentName:"li"},"Indeterminate"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"explainIndex")," adalah indeks ",(0,r.kt)("inlineCode",{parentName:"li"},"eft")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Allow")," atau ",(0,r.kt)("inlineCode",{parentName:"li"},"Deny"),"), dan ia diinisialisasi sebagai ",(0,r.kt)("inlineCode",{parentName:"li"},"-1"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"err")," digunakan untuk memeriksa sama ada kesan disokong."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expr")," adalah perwakilan rentetan kesan dasar."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"effects")," adalah tatasusunan kesan, yang boleh menjadi ",(0,r.kt)("inlineCode",{parentName:"li"},"Allow"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Indeterminate"),", atau ",(0,r.kt)("inlineCode",{parentName:"li"},"Deny"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"matches")," ialah tatasusunan yang menunjukkan sama ada hasilnya sepadan dengan dasar."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"policyIndex")," ialah indeks dasar dalam model."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"policyLength")," ialah panjang dasar.")),(0,r.kt)("p",null,"Kod di atas menunjukkan cara untuk menyampaikan parameter kepada fungsi ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeEffects()"),", dan fungsi ini akan memproses kesan dan padanan berdasarkan ",(0,r.kt)("inlineCode",{parentName:"p"},"expr"),"."),(0,r.kt)("p",null,"Untuk menggunakan ",(0,r.kt)("inlineCode",{parentName:"p"},"Effector"),", ikuti langkah-langkah ini:"),(0,r.kt)(c,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"var e Effector\nEffect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,r.kt)("p",null,"Idea asas ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeEffects()")," ialah jika ",(0,r.kt)("inlineCode",{parentName:"p"},"expr")," boleh sepadan dengan hasil, menunjukkan bahawa ",(0,r.kt)("inlineCode",{parentName:"p"},"p_eft")," ialah ",(0,r.kt)("inlineCode",{parentName:"p"},"allow"),", maka semua kesan boleh digabungkan. Jika tiada peraturan tolak yang disepadankan, maka keputusannya ialah benarkan."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Jika ",(0,r.kt)("inlineCode",{parentName:"p"},"expr")," tidak sepadan dengan syarat ",(0,r.kt)("inlineCode",{parentName:"p"},'"priority(p_eft) || deny"'),", dan ",(0,r.kt)("inlineCode",{parentName:"p"},"policyIndex")," lebih pendek daripada ",(0,r.kt)("inlineCode",{parentName:"p"},"policyLength-1"),", ia akan ",(0,r.kt)("strong",{parentName:"p"},"short-circuit")," beberapa kesan di tengah-tengah.")))}f.isMDXComponent=!0}}]);