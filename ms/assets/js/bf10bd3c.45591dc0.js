"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[416],{3905:(a,n,e)=>{e.d(n,{Zo:()=>d,kt:()=>k});var t=e(7294);function i(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function r(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(a);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,t)}return e}function l(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){i(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function p(a,n){if(null==a)return{};var e,t,i=function(a,n){if(null==a)return{};var e,t,i={},r=Object.keys(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||(i[e]=a[e]);return i}(a,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(t=0;t<r.length;t++)e=r[t],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(i[e]=a[e])}return i}var m=t.createContext({}),u=function(a){var n=t.useContext(m),e=n;return a&&(e="function"==typeof a?a(n):l(l({},n),a)),e},d=function(a){var n=u(a.components);return t.createElement(m.Provider,{value:n},a.children)},o={inlineCode:"code",wrapper:function(a){var n=a.children;return t.createElement(t.Fragment,{},n)}},s=t.forwardRef((function(a,n){var e=a.components,i=a.mdxType,r=a.originalType,m=a.parentName,d=p(a,["components","mdxType","originalType","parentName"]),s=u(e),k=i,g=s["".concat(m,".").concat(k)]||s[k]||o[k]||r;return e?t.createElement(g,l(l({ref:n},d),{},{components:e})):t.createElement(g,l({ref:n},d))}));function k(a,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof a||i){var r=e.length,l=new Array(r);l[0]=s;var p={};for(var m in n)hasOwnProperty.call(n,m)&&(p[m]=n[m]);p.originalType=a,p.mdxType="string"==typeof a?a:i,l[1]=p;for(var u=2;u<r;u++)l[u]=e[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,e)}s.displayName="MDXCreateElement"},2022:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>m,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var t=e(7462),i=(e(7294),e(3905));const r={id:"rbac",title:"RBAC",description:"Penggunaan Casbin RBAC",keywords:["RBAC","role definition","role hierarchy"],authors:["hsluoyz"]},l=void 0,p={unversionedId:"rbac",id:"rbac",title:"RBAC",description:"Penggunaan Casbin RBAC",source:"@site/i18n/ms/docusaurus-plugin-content-docs/current/RBAC.mdx",sourceDirName:".",slug:"/rbac",permalink:"/ms/docs/rbac",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RBAC.mdx",tags:[],version:"current",frontMatter:{id:"rbac",title:"RBAC",description:"Penggunaan Casbin RBAC",keywords:["RBAC","role definition","role hierarchy"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Functions",permalink:"/ms/docs/function"},next:{title:"RBAC with Pattern",permalink:"/ms/docs/rbac-with-pattern"}},m={},u=[{value:"Takrifan Peranan",id:"takrifan-peranan",level:2},{value:"Hierarki Peranan",id:"hierarki-peranan",level:2},{value:"Bagaimana Membezakan Peranan daripada Pengguna?",id:"bagaimana-membezakan-peranan-daripada-pengguna",level:2},{value:"Bagaimana untuk Membuat Pertanyaan Peranan atau Kebenaran Tersirat?",id:"bagaimana-untuk-membuat-pertanyaan-peranan-atau-kebenaran-tersirat",level:2},{value:"Menggunakan Pemadanan Corak dalam RBAC",id:"menggunakan-pemadanan-corak-dalam-rbac",level:2},{value:"Pengurus Peranan",id:"pengurus-peranan",level:2}],d={toc:u};function o(a){let{components:n,...e}=a;return(0,i.kt)("wrapper",(0,t.Z)({},d,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"takrifan-peranan"},"Takrifan Peranan"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[role_definition]")," digunakan untuk menentukan hubungan warisan peranan RBAC. Casbin menyokong pelbagai contoh sistem RBAC, di mana pengguna boleh mempunyai peranan dan hubungan warisan mereka, dan sumber juga boleh mempunyai peranan serta hubungan warisan mereka. Kedua-dua sistem RBAC ini tidak akan mengganggu antara satu sama lain."),(0,i.kt)("p",null,"Bahagian ini adalah pilihan. Jika anda tidak menggunakan peranan RBAC dalam model, maka tinggalkan bahagian ini."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[role_definition]\ng = _, _\ng2 = _, _\n")),(0,i.kt)("p",null,"Takrifan peranan di atas menunjukkan bahawa ",(0,i.kt)("inlineCode",{parentName:"p"},"g")," adalah sistem RBAC, dan ",(0,i.kt)("inlineCode",{parentName:"p"},"g2")," adalah sistem RBAC yang lain. ",(0,i.kt)("inlineCode",{parentName:"p"},"_,_")," bermakna terdapat dua pihak yang terlibat dalam hubungan warisan. Dalam kes yang paling biasa, anda biasanya menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},"g")," sahaja jika anda hanya memerlukan peranan untuk pengguna. Anda juga boleh menggunakan kedua-dua ",(0,i.kt)("inlineCode",{parentName:"p"},"g")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"g2")," apabila anda memerlukan peranan (atau kumpulan) untuk kedua-dua pengguna dan sumber. Sila lihat ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"rbac","_","model.conf")," dan ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_with_resource_roles_model.conf"},"rbac","_","model","_","with","_","resource","_","roles.conf")," untuk contoh."),(0,i.kt)("p",null,"Casbin menyimpan pemetaan peranan pengguna sebenar (atau pemetaan peranan sumber jika anda menggunakan peranan pada sumber) dalam dasar. Contohnya:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, data2_admin, data2, read\ng, alice, data2_admin\n")),(0,i.kt)("p",null,"Ini bermakna ",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," mewarisi/adalah ahli peranan ",(0,i.kt)("inlineCode",{parentName:"p"},"data2_admin"),". Di sini, ",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," boleh menjadi pengguna, sumber, atau peranan. Casbin hanya mengenali ia sebagai rentetan."),(0,i.kt)("p",null,"Kemudian, dalam penapis, anda perlu memeriksa peranan seperti yang ditunjukkan di bawah:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,i.kt)("p",null,"Ini bermakna bahawa ",(0,i.kt)("inlineCode",{parentName:"p"},"sub")," dalam permintaan harus mempunyai peranan ",(0,i.kt)("inlineCode",{parentName:"p"},"sub")," dalam dasar."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},"Casbin hanya menyimpan pemetaan pengguna-peranan."),(0,i.kt)("li",{parentName:"ol"},"Casbin tidak mengesahkan sama ada pengguna itu adalah pengguna yang sah atau peranan itu adalah peranan yang sah. Itu harus dijaga oleh pengesahan."),(0,i.kt)("li",{parentName:"ol"},"Jangan gunakan nama yang sama untuk pengguna dan peranan dalam sistem RBAC, kerana Casbin mengenali pengguna dan peranan sebagai rentetan, dan tidak ada cara untuk Casbin mengetahui sama ada anda menentukan pengguna ",(0,i.kt)("inlineCode",{parentName:"li"},"alice")," atau peranan ",(0,i.kt)("inlineCode",{parentName:"li"},"alice"),". Anda boleh menyelesaikannya dengan mudah dengan menggunakan ",(0,i.kt)("inlineCode",{parentName:"li"},"role_alice"),"."),(0,i.kt)("li",{parentName:"ol"},"Jika ",(0,i.kt)("inlineCode",{parentName:"li"},"A")," mempunyai peranan ",(0,i.kt)("inlineCode",{parentName:"li"},"B"),", dan ",(0,i.kt)("inlineCode",{parentName:"li"},"B")," mempunyai peranan ",(0,i.kt)("inlineCode",{parentName:"li"},"C"),", maka ",(0,i.kt)("inlineCode",{parentName:"li"},"A")," mempunyai peranan ",(0,i.kt)("inlineCode",{parentName:"li"},"C"),". Keterusan ini adalah tidak terhingga buat masa ini."))),(0,i.kt)("admonition",{title:"Konvensyen Nama Token",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Secara konvensional, nama token subjek dalam definisi polisi adalah ",(0,i.kt)("inlineCode",{parentName:"p"},"sub")," dan diletakkan di awal. Sekarang, Golang Casbin menyokong nama token dan tempat yang disesuaikan. Jika nama token subjek adalah ",(0,i.kt)("inlineCode",{parentName:"p"},"sub"),", token subjek boleh diletakkan di tempat sewenang-wenangnya tanpa tindakan tambahan yang diperlukan. Jika nama token subjek bukan ",(0,i.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"e.SetFieldIndex()")," untuk ",(0,i.kt)("inlineCode",{parentName:"p"},"constant.SubjectIndex")," harus dipanggil selepas enforcer diinisialisasi, tanpa mengira kedudukannya."),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"# `subject` here is for sub\n[policy_definition]\np =  obj, act, subject\n")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-go"},'e.SetFieldIndex("p", constant.SubjectIndex, 2) // index starts from 0\nok, err := e.DeleteUser("alice") // without SetFieldIndex, it will raise an error\n'))),(0,i.kt)("h2",{id:"hierarki-peranan"},"Hierarki Peranan"),(0,i.kt)("p",null,"Casbin's RBAC menyokong ciri hierarki peranan RBAC1, yang bermaksud jika ",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," mempunyai ",(0,i.kt)("inlineCode",{parentName:"p"},"role1"),", dan ",(0,i.kt)("inlineCode",{parentName:"p"},"role1")," mempunyai ",(0,i.kt)("inlineCode",{parentName:"p"},"role2"),", maka ",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," juga akan mempunyai ",(0,i.kt)("inlineCode",{parentName:"p"},"role2")," dan mewarisi kebenarannya."),(0,i.kt)("p",null,"Di sini, kita mempunyai konsep yang dipanggil tahap hierarki. Jadi, dalam contoh ini, tahap hierarki adalah 2. Untuk pengurus peranan terbina dalam Casbin, anda boleh menentukan tahap hierarki maksimum. Nilai lalai ialah 10. Ini bermakna pengguna akhir seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," hanya boleh mewarisi 10 tahap peranan."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// NewRoleManager is the constructor for creating an instance of the\n// default RoleManager implementation.\nfunc NewRoleManager(maxHierarchyLevel int) rbac.RoleManager {\n    rm := RoleManager{}\n    rm.allRoles = &sync.Map{}\n    rm.maxHierarchyLevel = maxHierarchyLevel\n    rm.hasPattern = false\n\n    return &rm\n}\n")),(0,i.kt)("h2",{id:"bagaimana-membezakan-peranan-daripada-pengguna"},"Bagaimana Membezakan Peranan daripada Pengguna?"),(0,i.kt)("p",null,"Casbin tidak membezakan antara peranan dan pengguna dalam RBAC-nya. Kedua-duanya dianggap sebagai rentetan. Jika anda hanya menggunakan RBAC satu tahap (di mana peranan tidak akan menjadi ahli peranan lain), anda boleh menggunakan ",(0,i.kt)("inlineCode",{parentName:"p"},"e.GetAllSubjects()")," untuk mendapatkan semua pengguna dan ",(0,i.kt)("inlineCode",{parentName:"p"},"e.GetAllRoles()")," untuk mendapatkan semua peranan. Mereka akan menyenaraikan semua ",(0,i.kt)("inlineCode",{parentName:"p"},"u")," dan semua ",(0,i.kt)("inlineCode",{parentName:"p"},"r"),", masing-masing, dalam semua peraturan ",(0,i.kt)("inlineCode",{parentName:"p"},"g, u, r"),"."),(0,i.kt)("p",null,"Tetapi jika anda menggunakan RBAC berbilang tahap (dengan hierarki peranan) dan aplikasi anda tidak merekod sama ada nama (rentetan) adalah pengguna atau peranan, atau anda mempunyai pengguna dan peranan dengan nama yang sama, anda boleh menambah awalan kepada peranan seperti ",(0,i.kt)("inlineCode",{parentName:"p"},"role::admin")," sebelum menyampaikannya kepada Casbin. Dengan cara ini, anda akan tahu jika ia adalah peranan dengan memeriksa awalan ini."),(0,i.kt)("h2",{id:"bagaimana-untuk-membuat-pertanyaan-peranan-atau-kebenaran-tersirat"},"Bagaimana untuk Membuat Pertanyaan Peranan atau Kebenaran Tersirat?"),(0,i.kt)("p",null,'Apabila pengguna mewarisi peranan atau kebenaran melalui hierarki RBAC dan bukannya diberikan secara langsung dalam peraturan dasar, kami menyebut jenis tugasan ini sebagai "tak jelas" (implicit). Untuk menanyakan hubungan tak jelas (implicit) tersebut, anda perlu menggunakan dua API ini: ',(0,i.kt)("inlineCode",{parentName:"p"},"GetImplicitRolesForUser()")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"GetImplicitPermissionsForUser()")," dan bukannya ",(0,i.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," dan ",(0,i.kt)("inlineCode",{parentName:"p"},"GetPermissionsForUser()"),". Untuk maklumat lebih lanjut, sila lihat ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/137"},"isu GitHub ini"),"."),(0,i.kt)("h2",{id:"menggunakan-pemadanan-corak-dalam-rbac"},"Menggunakan Pemadanan Corak dalam RBAC"),(0,i.kt)("p",null,"Lihat ",(0,i.kt)("a",{parentName:"p",href:"/docs/rbac-with-pattern"},"RBAC dengan Corak")),(0,i.kt)("h2",{id:"pengurus-peranan"},"Pengurus Peranan"),(0,i.kt)("p",null,"Lihat bahagian ",(0,i.kt)("a",{parentName:"p",href:"/docs/role-managers"},"Pengurus Peranan")," untuk butiran lanjut."))}o.isMDXComponent=!0}}]);