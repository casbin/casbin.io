"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4850],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var i=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=i.createContext({}),u=function(e){var r=i.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=u(e.components);return i.createElement(p.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},d=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=n,b=d["".concat(p,".").concat(m)]||d[m]||s[m]||a;return t?i.createElement(b,o(o({ref:r},c),{},{components:t})):i.createElement(b,o({ref:r},c))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8040:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var i=t(3117),n=t(102),a=(t(7294),t(3905)),o=["components"],l={id:"priority-model",title:"Mod\xe8le de priorit\xe9",description:"Priority Model",keywords:["priority model"]},p=void 0,u={unversionedId:"priority-model",id:"priority-model",title:"Mod\xe8le de priorit\xe9",description:"Priority Model",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/PriorityModel.mdx",sourceDirName:".",slug:"/priority-model",permalink:"/fr/docs/priority-model",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PriorityModel.mdx",tags:[],version:"current",frontMatter:{id:"priority-model",title:"Mod\xe8le de priorit\xe9",description:"Priority Model",keywords:["priority model"]},sidebar:"docs",previous:{title:"ABAC",permalink:"/fr/docs/abac"},next:{title:"Super Admin",permalink:"/fr/docs/superadmin"}},c={},s=[{value:"Politique de charge avec priorit\xe9 implicitement",id:"politique-de-charge-avec-priorit\xe9-implicitement",level:2},{value:"Charger la politique avec la priorit\xe9 explicite",id:"charger-la-politique-avec-la-priorit\xe9-explicite",level:2},{value:"Politique de charge avec priorit\xe9 bas\xe9e sur le r\xf4le et la hi\xe9rarchie des utilisateurs",id:"politique-de-charge-avec-priorit\xe9-bas\xe9e-sur-le-r\xf4le-et-la-hi\xe9rarchie-des-utilisateurs",level:2}],d={toc:s};function m(e){var r=e.components,t=(0,n.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Casbin supporte les politiques de chargement avec priorit\xe9."),(0,a.kt)("h2",{id:"politique-de-charge-avec-priorit\xe9-implicitement"},"Politique de charge avec priorit\xe9 implicitement"),(0,a.kt)("p",null,"C'est assez simple, l'ordre d\xe9termine la priorit\xe9, la politique apparue plus t\xf4t a une plus grande priorit\xe9."),(0,a.kt)("p",null,"model.conf :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = priorit\xe9(p.eft) || nier\n")),(0,a.kt)("h2",{id:"charger-la-politique-avec-la-priorit\xe9-explicite"},"Charger la politique avec la priorit\xe9 explicite"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Voir aussi : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/550"},"casbin#550"))),(0,a.kt)("p",null,"Le nom du jeton de priorit\xe9 dans la d\xe9finition de la politique doit \xeatre \xab priorit\xe9 \xbb, et la plus petite valeur de priorit\xe9 aura une plus grande priorit\xe9. S'il y a des caract\xe8res non num\xe9riques dans la priorit\xe9, ce sera dans le dernier, plut\xf4t que de lancer une erreur. Maintenant, la priorit\xe9 explicite ne prend en charge que ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPolicy")," & ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPolicies"),", si ",(0,a.kt)("inlineCode",{parentName:"p"},"UpdatePolicy")," a \xe9t\xe9 appel\xe9e, vous ne devriez pas changer l'attribut prioritaire."),(0,a.kt)("p",null,"model.conf :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = priority, sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("p",null,"Politique.csv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"p, 10, data1_deny_group, data1, read, deny\np, 10, data1_deny_group, data1, write, deny\np, 10, data2_allow_group, data2, read, allow\np, 10, data2_allow_group, data2, write, allow\n\n\np, 1, alice, data1, write, allow\np, 1, alice, data1, read, allow\np, 1, bob, data2, read, deny\n\ng, bob, data2_allow_group\ng, alice, data1_deny_group\n")),(0,a.kt)("p",null,"Requ\xeate:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"alice, data1, write --\x3e true // pour `p, 1, alice, data1, write, allow` a la plus haute priorit\xe9\nbob, data2, read --\x3e false\nbob, data2, write --\x3e true // for bob has role of `data2_allow_group` which has right to write data2, et il n'y a pas de politique de refus avec une priorit\xe9 plus \xe9lev\xe9e \n")),(0,a.kt)("h2",{id:"politique-de-charge-avec-priorit\xe9-bas\xe9e-sur-le-r\xf4le-et-la-hi\xe9rarchie-des-utilisateurs"},"Politique de charge avec priorit\xe9 bas\xe9e sur le r\xf4le et la hi\xe9rarchie des utilisateurs"),(0,a.kt)("p",null,"La structure h\xe9rit\xe9e des r\xf4les et des utilisateurs ne peut \xeatre que de multiples arborescences et non des graphiques. Si un utilisateur a plusieurs r\xf4les, vous devez vous assurer que l'utilisateur a le m\xeame niveau dans diff\xe9rentes arborescences. Si deux r\xf4les ont le m\xeame niveau, la politique (le r\xf4le correspondant) est apparue plus t\xf4t a une plus grande priorit\xe9. plus de d\xe9tails voir aussi ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/pull/833"},"casbin#833")," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/831"},"casbin#831")),(0,a.kt)("p",null,"model.conf :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = subjectPriority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act \n")),(0,a.kt)("p",null,"Politique.csv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"p, root, data1, read, deny\np, admin, data1, read, deny\n\np, editor, data1, read, deny\np, subscriber, data1, read, deny\n\np, jane, data1, read, allow\np, alice, data1, read, allow\n\ng, admin, root\n\ng, editor, admin\ng, subscriber, admin\n\ng, jane, editor\ng, alice, subscriber \n")),(0,a.kt)("p",null,"Requ\xeate:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jane, data1, read --\x3e true // jane est en bas, donc la priorit\xe9 est sup\xe9rieure \xe0 l'\xe9diteur, admin et racine\nalice, data1, read --\x3e true\n")),(0,a.kt)("p",null," La hi\xe9rarchie des r\xf4les comme ceci:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"role: root\n \u2514\u2500 role: admin\n    \u251c\u2500 role editor\n    \u2502  \u2514\u2500 user: jane\n    \u2502\n    \u2514\u2500 role: subscriber\n       \u2514\u2500 user: john\n")),(0,a.kt)("p",null,"La priorit\xe9 ressemble automatiquement \xe0 ceci:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"role: root                 # auto priority: 30\n \u2514\u2500 role: admin            # auto priority: 20\n     \u251c\u2500 role: editor       # auto priority: 10\n     \u2514\u2500 role: subscriber   # auto priority: 10\n")))}m.isMDXComponent=!0}}]);