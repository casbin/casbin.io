"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[386],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>m});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?t.createElement(f,i(i({ref:r},u),{},{components:n})):t.createElement(f,i({ref:r},u))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9852:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=n(7462),a=(n(7294),n(3905));const o={id:"model-storage",title:"Stockage du mod\xe8le",description:"Model storage",keywords:["model storage"]},i=void 0,l={unversionedId:"model-storage",id:"model-storage",title:"Stockage du mod\xe8le",description:"Model storage",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/fr/docs/model-storage",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/fr",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Stockage du mod\xe8le",description:"Model storage",keywords:["model storage"]},sidebar:"docs",previous:{title:"Storage",permalink:"/fr/docs/category/storage"},next:{title:"Stockage de la politique",permalink:"/fr/docs/policy-storage"}},c={},s=[{value:"Charger le mod\xe8le depuis un fichier .CONF",id:"charger-le-mod\xe8le-depuis-un-fichier-conf",level:2},{value:"Charger le mod\xe8le \xe0 partir du code",id:"charger-le-mod\xe8le-\xe0-partir-du-code",level:2},{value:"Charger le mod\xe8le depuis une cha\xeene de caract\xe8res",id:"charger-le-mod\xe8le-depuis-une-cha\xeene-de-caract\xe8res",level:2}],u={toc:s};function p(e){let{components:r,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Contrairement \xe0 la politique, le mod\xe8le peut \xeatre charg\xe9 seulement, il ne peut pas \xeatre sauvegard\xe9. Parce que nous pensons que le mod\xe8le n'est pas un composant dynamique et ne devrait pas \xeatre modifi\xe9 \xe0 l'ex\xe9cution, donc nous n'impl\xe9mentons pas une API pour sauvegarder le mod\xe8le dans un stockage."),(0,a.kt)("p",null,"Cependant, la bonne nouvelle est que nous fournissons trois moyens \xe9quivalents pour charger un mod\xe8le, soit statiquement ou dynamiquement :"),(0,a.kt)("h2",{id:"charger-le-mod\xe8le-depuis-un-fichier-conf"},"Charger le mod\xe8le depuis un fichier .CONF"),(0,a.kt)("p",null,"C'est la fa\xe7on la plus courante d'utiliser Casbin. Il est facile \xe0 comprendre pour les d\xe9butants et pratique \xe0 partager lorsque vous demandez de l'aide \xe0 l'\xe9quipe de Casbin."),(0,a.kt)("p",null,"Le contenu du fichier ",(0,a.kt)("inlineCode",{parentName:"p"},".CONF")," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"exemples/rbac_model.conf"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("p",null,"Ensuite, vous pouvez charger le fichier mod\xe8le en tant que :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,a.kt)("h2",{id:"charger-le-mod\xe8le-\xe0-partir-du-code"},"Charger le mod\xe8le \xe0 partir du code"),(0,a.kt)("p",null,"Le mod\xe8le peut \xeatre initialis\xe9 dynamiquement \xe0 partir du code au lieu d'utiliser le fichier ",(0,a.kt)("inlineCode",{parentName:"p"},".CONF"),". Voici un exemple pour le mod\xe8le RBAC :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Initialise le mod\xe8le \xe0 partir du code Go.\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "e", "some(o\xf9 (p. ft == allow)")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p. bj && r.act == p.act")\n\n// Charge les r\xe8gles de r\xe9gulation depuis l\'adaptateur de fichier .CSV.\n// Remplacez-le par votre adaptateur pour \xe9viter les fichiers.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Cr\xe9er le responsable.\ne := casbin.NewEnforcer(m, a)\n')),(0,a.kt)("h2",{id:"charger-le-mod\xe8le-depuis-une-cha\xeene-de-caract\xe8res"},"Charger le mod\xe8le depuis une cha\xeene de caract\xe8res"),(0,a.kt)("p",null,"Ou vous pouvez simplement charger tout le texte du mod\xe8le \xe0 partir d'une cha\xeene de caract\xe8res multi-lignes. Le point positif de cette fa\xe7on est que vous n'avez pas besoin de maintenir un fichier mod\xe8le."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialise le mod\xe8le \xe0 partir d\'une cha\xeene de caract\xe8res.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = quelque part (o\xf9 (p. ft == allow))\n\n[matchers]\nm = g(r.sub, p. ub) && r.obj == p.obj && r.act == p. ct\n`\nm, _ := model.NewModelFromString(text)\n\n// Charge les r\xe8gles de r\xe9gulation depuis l\'adaptateur de fichier .CSV.\n// Remplacez-le par votre adaptateur pour \xe9viter les fichiers.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Cr\xe9er le responsable.\ne := casbin.NewEnforcer(m, a)\n')))}p.isMDXComponent=!0}}]);