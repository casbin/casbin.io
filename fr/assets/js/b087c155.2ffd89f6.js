"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5266],{3905:(e,a,l)=>{l.d(a,{Zo:()=>d,kt:()=>c});var t=l(7294);function r(e,a,l){return a in e?Object.defineProperty(e,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[a]=l,e}function s(e,a){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),l.push.apply(l,t)}return l}function n(e){for(var a=1;a<arguments.length;a++){var l=null!=arguments[a]?arguments[a]:{};a%2?s(Object(l),!0).forEach((function(a){r(e,a,l[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):s(Object(l)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(l,a))}))}return e}function o(e,a){if(null==e)return{};var l,t,r=function(e,a){if(null==e)return{};var l,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)l=s[t],a.indexOf(l)>=0||(r[l]=e[l]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)l=s[t],a.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(r[l]=e[l])}return r}var i=t.createContext({}),p=function(e){var a=t.useContext(i),l=a;return e&&(l="function"==typeof e?e(a):n(n({},a),e)),l},d=function(e){var a=p(e.components);return t.createElement(i.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var l=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(l),c=r,k=u["".concat(i,".").concat(c)]||u[c]||m[c]||s;return l?t.createElement(k,n(n({ref:a},d),{},{components:l})):t.createElement(k,n({ref:a},d))}));function c(e,a){var l=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=l.length,n=new Array(s);n[0]=u;var o={};for(var i in a)hasOwnProperty.call(a,i)&&(o[i]=a[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,n[1]=o;for(var p=2;p<s;p++)n[p]=l[p];return t.createElement.apply(null,n)}return t.createElement.apply(null,l)}u.displayName="MDXCreateElement"},3188:(e,a,l)=>{l.r(a),l.d(a,{assets:()=>i,contentTitle:()=>n,default:()=>k,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var t=l(7462),r=(l(7294),l(3905));const s={id:"rbac-api",title:"RBAC API",description:"Une API plus conviviale pour RBAC. Cette API est un sous-ensemble de l'API de gestion. Les utilisateurs RBAC pourraient utiliser cette API pour simplifier le code.",keywords:["RBAC","API"],authors:["nodece"]},n=void 0,o={unversionedId:"rbac-api",id:"rbac-api",title:"RBAC API",description:"Une API plus conviviale pour RBAC. Cette API est un sous-ensemble de l'API de gestion. Les utilisateurs RBAC pourraient utiliser cette API pour simplifier le code.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/RBACAPI.mdx",sourceDirName:".",slug:"/rbac-api",permalink:"/fr/docs/rbac-api",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RBACAPI.mdx",tags:[],version:"current",frontMatter:{id:"rbac-api",title:"RBAC API",description:"Une API plus conviviale pour RBAC. Cette API est un sous-ensemble de l'API de gestion. Les utilisateurs RBAC pourraient utiliser cette API pour simplifier le code.",keywords:["RBAC","API"],authors:["nodece"]},sidebar:"docs",previous:{title:"Management API",permalink:"/fr/docs/management-api"},next:{title:"RBAC with Domains API",permalink:"/fr/docs/rbac-with-domains-api"}},i={},p=[{value:"R\xe9f\xe9rence",id:"r\xe9f\xe9rence",level:2},{value:"<code>GetRolesForUser()</code>",id:"getrolesforuser",level:3},{value:"<code>GetUsersForRole()</code>",id:"getusersforrole",level:3},{value:"<code>HasRoleForUser()</code>",id:"hasroleforuser",level:3},{value:"<code>AddRoleForUser()</code>",id:"addroleforuser",level:3},{value:"<code>AddRolesForUser()</code>",id:"addrolesforuser",level:3},{value:"<code>DeleteRoleForUser()</code>",id:"deleteroleforuser",level:3},{value:"<code>DeleteRolesForUser()</code>",id:"deleterolesforuser",level:3},{value:"<code>DeleteUser()</code>",id:"deleteuser",level:3},{value:"<code>DeleteRole()</code>",id:"deleterole",level:3},{value:"<code>DeletePermission()</code>",id:"deletepermission",level:3},{value:"<code>AddPermissionForUser()</code>",id:"addpermissionforuser",level:3},{value:"<code>AddPermissionsForUser()</code>",id:"addpermissionsforuser",level:3},{value:"<code>DeletePermissionForUser()</code>",id:"deletepermissionforuser",level:3},{value:"<code>DeletePermissionsForUser()</code>",id:"deletepermissionsforuser",level:3},{value:"<code>GetPermissionsForUser()</code>",id:"getpermissionsforuser",level:3},{value:"<code>HasPermissionForUser()</code>",id:"haspermissionforuser",level:3},{value:"<code>GetImplicitRolesForUser()</code>",id:"getimplicitrolesforuser",level:3},{value:"<code>GetImplicitUsersForRole()</code>",id:"getimplicitusersforrole",level:3},{value:"<code>GetImplicitPermissionsForUser()</code>",id:"getimplicitpermissionsforuser",level:3},{value:"<code>GetNamedImplicitPermissionsForUser()</code>",id:"getnamedimplicitpermissionsforuser",level:3},{value:"<code>GetDomainsForUser()</code>",id:"getdomainsforuser",level:3},{value:"<code>GetImplicitResourcesForUser()</code>",id:"getimplicitresourcesforuser",level:3},{value:"<code>GetImplicitUsersForPermission()</code>",id:"getimplicitusersforpermission",level:3},{value:"<code>GetAllowedObjectConditions()</code>",id:"getallowedobjectconditions",level:3},{value:"<code>GetImplicitUsersForResource()</code>",id:"getimplicitusersforresource",level:3}],d=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",a)},m=d("Tabs"),u=d("TabItem"),c={toc:p};function k(e){let{components:a,...l}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,l,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Une API plus conviviale pour RBAC. Cette API est un sous-ensemble de l'API de gestion. Les utilisateurs RBAC pourraient utiliser cette API pour simplifier le code."),(0,r.kt)("h2",{id:"r\xe9f\xe9rence"},"R\xe9f\xe9rence"),(0,r.kt)("p",null,"La variable globale ",(0,r.kt)("inlineCode",{parentName:"p"},"e")," est une instance de Enforcer."),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e, err := NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const e = await newEnforcer('examples/rbac_model.conf', 'examples/rbac_policy.csv')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$e = new Enforcer('examples/rbac_model.conf', 'examples/rbac_policy.csv');\n"))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e = casbin.Enforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var e = new Enforcer("path/to/model.conf", "path/to/policy.csv");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let mut e = Enforcer::new("examples/rbac_model.conf", "examples/rbac_policy.csv").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Enforcer e = new Enforcer("examples/rbac_model.conf", "examples/rbac_policy.csv");\n')))),(0,r.kt)("h3",{id:"getrolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetRolesForUser()")),(0,r.kt)("p",null,"GetRolesForUser obtient les r\xf4les qu'un utilisateur a."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'res := e.GetRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const res = await e.getRolesForUser('alice')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$res = $e->getRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'roles = e.get_roles_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var res = e.GetRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let roles = e.get_roles_for_user("alice", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> res = e.getRolesForUser("alice");\n')))),(0,r.kt)("h3",{id:"getusersforrole"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetUsersForRole()")),(0,r.kt)("p",null,"GetUsersForRole obtient les utilisateurs qui ont un r\xf4le."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'res := e.GetUsersForRole("data1_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const res = await e.getUsersForRole('data1_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$res = $e->getUsersForRole("data1_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'users = e.get_users_for_role("data1_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var res = e.GetUsersForRole("data1_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let users = e.get_users_for_role("data1_admin", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> res = e.getUsersForRole("data1_admin");\n')))),(0,r.kt)("h3",{id:"hasroleforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"HasRoleForUser()")),(0,r.kt)("p",null,"HasRoleForUser d\xe9termine si un utilisateur a un r\xf4le."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'res := e.HasRoleForUser("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const res = await e.hasRoleForUser('alice', 'data1_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$res = $e->hasRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'has = e.has_role_for_user("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var res = e.HasRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let has = e.has_role_for_user("alice", "data1_admin", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean res = e.hasRoleForUser("alice", "data1_admin");\n')))),(0,r.kt)("h3",{id:"addroleforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddRoleForUser()")),(0,r.kt)("p",null,"AddRoleForUser ajoute un r\xf4le \xe0 un utilisateur.\nRenvoie false si l'utilisateur a d\xe9j\xe0 le r\xf4le (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.AddRoleForUser("alice", "data2_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.addRoleForUser('alice', 'data2_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-PHP"},'$e->addRoleForUser("alice", "data2_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.add_role_for_user("alice", "data2_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var added = e.AddRoleForUser("alice", "data2_admin");\nor\nvar added = await e.AddRoleForUserAsync("alice", "data2_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let added = e.add_role_for_user("alice", "data2_admin", None).await?; // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean added = e.addRoleForUser("alice", "data2_admin");\n')))),(0,r.kt)("h3",{id:"addrolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddRolesForUser()")),(0,r.kt)("p",null,"AddRolesForUser ajoute plusieurs r\xf4les \xe0 un utilisateur.\nRenvoie false si l'utilisateur a d\xe9j\xe0 l'un de ces r\xf4les (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'var roles = []string{"data2_admin", "data1_admin"}\ne.AddRolesForUser("alice", roles)\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const roles = ["data1_admin", "data2_admin"];\nroles.map((role) => e.addRoleForUser("alice", role));\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let roles = vec!["data1_admin".to_owned(), "data2_admin".to_owned()];\nlet all_added = e.add_roles_for_user("alice", roles, None).await?; // No domain\n')))),(0,r.kt)("h3",{id:"deleteroleforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteRoleForUser()")),(0,r.kt)("p",null,"DeleteRoleForUser supprime un r\xf4le pour un utilisateur.\nRenvoie false si l'utilisateur n'a pas le r\xf4le (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteRoleForUser("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deleteRoleForUser('alice', 'data1_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_role_for_user("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeleteRoleForUser("alice", "data1_admin");\nor\nvar deleted = await e.DeleteRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_role_for_user("alice", "data1_admin", None).await?; // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deleteRoleForUser("alice", "data1_admin");\n')))),(0,r.kt)("h3",{id:"deleterolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteRolesForUser()")),(0,r.kt)("p",null,"DeleteRolesForUser supprime tous les r\xf4les pour un utilisateur.\nRenvoie false si l'utilisateur n'a aucun r\xf4le (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deleteRolesForUser('alice')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_roles_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deletedAtLeastOne = e.DeleteRolesForUser("alice");\nor\nvar deletedAtLeastOne = await e.DeleteRolesForUserAsync("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted_at_least_one = e.delete_roles_for_user("alice", None).await?; // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deletedAtLeastOne = e.deleteRolesForUser("alice");\n')))),(0,r.kt)("h3",{id:"deleteuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteUser()")),(0,r.kt)("p",null,"DeleteUser supprime un utilisateur.\nRenvoie false si l'utilisateur n'existe pas (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deleteUser('alice')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeleteUser("alice");\nor\nvar deleted = await e.DeleteUserAsync("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_user("alice").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deleteUser("alice");\n')))),(0,r.kt)("h3",{id:"deleterole"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteRole()")),(0,r.kt)("p",null,"DeleteRole supprime un r\xf4le."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteRole("data2_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await e.deleteRole("data2_admin")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteRole("data2_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_role("data2_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeleteRole("data2_admin");\nor\nvar deleted = await e.DeleteRoleAsync("data2_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_role("data2_admin").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'e.deleteRole("data2_admin");\n')))),(0,r.kt)("h3",{id:"deletepermission"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeletePermission()")),(0,r.kt)("p",null,"DeletePermission supprime une permission.\nRenvoie false si la permission n'existe pas (aka non affect\xe9e)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeletePermission("read")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deletePermission('read')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deletePermission("read");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_permission("read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeletePermission("read");\nor\nvar deleted = await e.DeletePermissionAsync("read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_permission(vec!["read".to_owned()]).await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deletePermission("read");\n')))),(0,r.kt)("h3",{id:"addpermissionforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddPermissionForUser()")),(0,r.kt)("p",null,"AddPermissionForUser ajoute une permission pour un utilisateur ou un r\xf4le.\nRenvoie false si l'utilisateur ou le r\xf4le a d\xe9j\xe0 la permission (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.AddPermissionForUser("bob", "read")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.addPermissionForUser('bob', 'read')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->addPermissionForUser("bob", "read");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.add_permission_for_user("bob", "read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var added = e.AddPermissionForUser("bob", "read");\nor\nvar added = await e.AddPermissionForUserAsync("bob", "read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let added = e.add_permission_for_user("bob", vec!["read".to_owned()]).await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean added = e.addPermissionForUser("bob", "read");\n')))),(0,r.kt)("h3",{id:"addpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddPermissionsForUser()")),(0,r.kt)("p",null,"AddPermissionsForUser ajoute plusieurs permissions pour un utilisateur ou un r\xf4le.\nRenvoie false si l'utilisateur ou le r\xf4le a d\xe9j\xe0 l'une des permissions (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'var permissions = [][]string{{"data1", "read"},{"data2","write"}}\nfor i := 0; i < len(permissions); i++ {\n    e.AddPermissionsForUser("alice", permissions[i])\n}\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const permissions = [\n    ["data1", "read"],\n    ["data2", "write"],\n];\n\npermissions.map((permission) => e.addPermissionForUser("bob", ...permission));\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let permissions = vec![\n    vec!["data1".to_owned(), "read".to_owned()],\n    vec!["data2".to_owned(), "write".to_owned()],\n];\n\nlet all_added = e.add_permissions_for_user("bob", permissions).await?;\n')))),(0,r.kt)("h3",{id:"deletepermissionforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeletePermissionForUser()")),(0,r.kt)("p",null,"DeletePermissionForUser supprime une permission pour un utilisateur ou un r\xf4le.\nRenvoie false si l'utilisateur ou le r\xf4le n'a pas la permission (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeletePermissionForUser("bob", "read")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await e.deletePermissionForUser("bob", "read")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deletePermissionForUser("bob", "read");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_permission_for_user("bob", "read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeletePermissionForUser("bob", "read");\nor\nvar deleted = await e.DeletePermissionForUserAsync("bob", "read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_permission_for_user("bob", vec!["read".to_owned()]).await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deletePermissionForUser("bob", "read");\n')))),(0,r.kt)("h3",{id:"deletepermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeletePermissionsForUser()")),(0,r.kt)("p",null,"DeletePermissionsForUser supprime les permissions pour un utilisateur ou un r\xf4le.\nRenvoie false si l'utilisateur ou le r\xf4le n'a aucune permission (aka non affect\xe9)."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeletePermissionsForUser("bob")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deletePermissionsForUser('bob')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deletePermissionsForUser("bob");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_permissions_for_user("bob")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deletedAtLeastOne = e.DeletePermissionsForUser("bob");\nor\nvar deletedAtLeastOne = await e.DeletePermissionsForUserAsync("bob");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted_at_least_one = e.delete_permissions_for_user("bob").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deletedAtLeastOne = e.deletePermissionForUser("bob");\n')))),(0,r.kt)("h3",{id:"getpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetPermissionsForUser()")),(0,r.kt)("p",null,"GetPermissionsForUser obtient les permissions pour un utilisateur ou un r\xf4le."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetPermissionsForUser("bob")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.getPermissionsForUser('bob')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->getPermissionsForUser("bob");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_permissions_for_user("bob")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var permissions = e.GetPermissionsForUser("bob");\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<List<String>> permissions = e.getPermissionsForUser("bob");\n')))),(0,r.kt)("h3",{id:"haspermissionforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"HasPermissionForUser()")),(0,r.kt)("p",null,"HasPermissionForUser d\xe9termine si un utilisateur a une permission."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.HasPermissionForUser("alice", []string{"read"})\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.hasPermissionForUser('alice', 'read')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->hasPermissionForUser("alice", []string{"read"});\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'has = e.has_permission_for_user("alice", "read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var has = e.HasPermissionForUser("bob", "read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let has = e.has_permission_for_user("alice", vec!["data1".to_owned(), "read".to_owned()]);\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean has = e.hasPermissionForUser("alice", "read");\n')))),(0,r.kt)("h3",{id:"getimplicitrolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitRolesForUser()")),(0,r.kt)("p",null,"GetImplicitRolesForUser obtient les r\xf4les implicites qu'un utilisateur a.\nCompar\xe9 \xe0 GetRolesForUser(), cette fonction r\xe9cup\xe8re les r\xf4les indirects en plus des r\xf4les directs."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"g, alice, role:admin  \ng, role:admin, role:user  \n")),(0,r.kt)("p",null,'GetRolesForUser("alice") peut seulement obtenir: ',"[",'"role:admin"].\\\nMais GetImplicitRolesForUser("alice") obtiendra: ',"[",'"role:admin", "role:user"].'),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetImplicitRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await e.getImplicitRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->getImplicitRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_implicit_roles_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var implicitRoles = e.GetImplicitRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'e.get_implicit_roles_for_user("alice", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> implicitRoles = e.getImplicitRolesForUser("alice");\n')))),(0,r.kt)("h3",{id:"getimplicitusersforrole"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitUsersForRole()")),(0,r.kt)("p",null,"GetImplicitUsersForRole obtient tous les utilisateurs h\xe9ritant du r\xf4le.\nCompar\xe9 \xe0 GetUsersForRole(), cette fonction r\xe9cup\xe8re les utilisateurs indirects."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"g, alice, role:admin  \ng, role:admin, role:user  \n")),(0,r.kt)("p",null,'GetUsersForRole("role:user") peut seulement obtenir: ',"[",'"role:admin"].\\\nMais GetImplicitUesrsForRole("role:user") obtiendra : ',"[",'"role:admin", "alice"].'),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'users := e.GetImplicitUsersForRole("role:user")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const users = e.getImplicitUsersForRole("role:user");\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> users = e.getImplicitUsersForRole("role:user");\n')))),(0,r.kt)("h3",{id:"getimplicitpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitPermissionsForUser()")),(0,r.kt)("p",null,"GetImplicitPermissionsForUser obtient les permissions implicites pour un utilisateur ou un r\xf4le.\\\nCompar\xe9 \xe0 GetPermissionsForUser(), cette fonction r\xe9cup\xe8re les permissions pour les r\xf4les h\xe9rit\xe9s."),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read  \np, alice, data2, read  \ng, alice, admin \n")),(0,r.kt)("p",null,'GetPermissionsForUser("alice") ne peut obtenir que : ',"[","[",'"alice", "data2", "read"]].\\\nMais GetImplicitPermissionsForUser("alice") obtiendra : ',"[","[",'"admin", "data1", "read"], ',"[",'"alice", "data2", "read"]].'),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetImplicitPermissionsForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'await e.getImplicitPermissionsForUser("alice")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->getImplicitPermissionsForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_implicit_permissions_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var implicitPermissions = e.GetImplicitPermissionsForUser("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'e.get_implicit_permissions_for_user("alice", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<List<String>> implicitPermissions = e.getImplicitPermissionsForUser("alice");\n')))),(0,r.kt)("h3",{id:"getnamedimplicitpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetNamedImplicitPermissionsForUser()")),(0,r.kt)("p",null,"GetNamedImplicitPermissionsForUser obtient les permissions implicites pour un utilisateur ou un r\xf4le par politique nomm\xe9e. Compar\xe9 \xe0 GetImplicitPermissionsForUser(), cette fonction vous permet de sp\xe9cifier le nom de la politique."),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np2, admin, create\ng, alice, admin\n")),(0,r.kt)("p",null,'GetImplicitPermissionsForUser("alice") n\'obtient que : ',"[","[",'"admin", "data1", "read"]], dont la politique est par d\xe9faut "p"'),(0,r.kt)("p",null,'Mais vous pouvez sp\xe9cifier la politique comme "p2" pour obtenir : ',"[","[",'"admin", "create"]] avec GetNamedImplicitPermissionsForUser("p2","alice")'),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetNamedImplicitPermissionsForUser("p2","alice")\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_named_implicit_permissions_for_user("p2", "alice")\n')))),(0,r.kt)("h3",{id:"getdomainsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetDomainsForUser()")),(0,r.kt)("p",null,"GetDomainsForUser obtient tous les domaines qu'un utilisateur poss\xe8de."),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, domain1, data1, read\np, admin, domain2, data2, read\np, admin, domain2, data2, write\ng, alice, admin, domain1\ng, alice, admin, domain2\n")),(0,r.kt)("p",null,'GetDomainsForUser("alice") pourrait obtenir ',"[",'"domain1", "domain2"]'),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'result, err := e.GetDomainsForUser("alice")\n')))),(0,r.kt)("h3",{id:"getimplicitresourcesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitResourcesForUser()")),(0,r.kt)("p",null,"GetImplicitResourcesForUser renvoie toutes les politiques qui devraient \xeatre vraies pour l'utilisateur."),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\n\ng, alice, data2_admin\n")),(0,r.kt)("p",null,'GetImplicitResourcesForUser("alice") renverra ',(0,r.kt)("inlineCode",{parentName:"p"},"[[alice data1 read] [alice data2 read] [alice data2 write]]")),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'resources, err := e.GetImplicitResourcesForUser("alice")\n')))),(0,r.kt)("h3",{id:"getimplicitusersforpermission"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitUsersForPermission()")),(0,r.kt)("p",null,"GetImplicitUsersForPermission obtient les utilisateurs implicites pour une permission."),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, bob, data1, read\ng, alice, admin\n")),(0,r.kt)("p",null,'GetImplicitUsersForPermission("data1", "read") renverra : ',(0,r.kt)("inlineCode",{parentName:"p"},'["alice", "bob"]'),"."),(0,r.kt)("p",null,'Note : seuls les utilisateurs seront renvoy\xe9s, les r\xf4les (2\xe8me argument dans "g") seront exclus.'),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'users, err := e.GetImplicitUsersForPermission("data1", "read")\n')))),(0,r.kt)("h3",{id:"getallowedobjectconditions"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetAllowedObjectConditions()")),(0,r.kt)("p",null,"GetAllowedObjectConditions renvoie un tableau de cha\xeenes de conditions d'objet auxquelles l'utilisateur peut acc\xe9der."),(0,r.kt)("p",null,"Par exemple :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, r.obj.price < 25, read\np, admin, r.obj.category_id = 2, read\np, bob, r.obj.author = bob, write\n\ng, alice, admin\n")),(0,r.kt)("p",null,'e.GetAllowedObjectConditions("alice", "read", "r.obj.") renverra ',(0,r.kt)("inlineCode",{parentName:"p"},'["price < 25", "category_id = 2"], nil')),(0,r.kt)("p",null,"Note :"),(0,r.kt)("ol",{start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"pr\xe9fixe: Vous pouvez personnaliser le pr\xe9fixe des conditions de l'objet, et \"r.obj.\" est couramment utilis\xe9 comme pr\xe9fixe.\nApr\xe8s avoir supprim\xe9 le pr\xe9fixe, la partie restante est la condition de l'objet.\nS'il y a une politique obj qui ne r\xe9pond pas \xe0 l'exigence du pr\xe9fixe, une ",(0,r.kt)("inlineCode",{parentName:"p"},"errors.ERR_OBJ_CONDITION")," sera renvoy\xe9e.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Si le tableau 'objectConditions' est vide, renvoie ",(0,r.kt)("inlineCode",{parentName:"p"},"errors.ERR_EMPTY_CONDITION"),". Cette erreur est renvoy\xe9e parce que certains adaptateurs de donn\xe9es ORM renvoient par d\xe9faut des donn\xe9es de table compl\xe8tes lorsqu'ils re\xe7oivent une condition vide, ce qui a tendance \xe0 se comporter contrairement aux attentes. (par exemple, GORM) Si vous utilisez un adaptateur qui ne se comporte pas de cette fa\xe7on, vous pouvez choisir d'ignorer cette erreur."))),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'conditions, err := e.GetAllowedObjectConditions("alice", "read", "r.obj.")\n')))),(0,r.kt)("h3",{id:"getimplicitusersforresource"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitUsersForResource()")),(0,r.kt)("p",null,"GetImplicitUsersForResource renvoie un utilisateur implicite bas\xe9 sur la ressource."),(0,r.kt)("p",null,"Par exemple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\ng, alice, data2_admin\n")),(0,r.kt)("p",null,'GetImplicitUsersForResource("data2") renverra ',(0,r.kt)("inlineCode",{parentName:"p"},'["bob", "data2", "write"], ["alice", "data2", "read"] ["alice", "data2", "write"]], nil'),"."),(0,r.kt)("p",null,'GetImplicitUsersForResource("data1") renverra ',(0,r.kt)("inlineCode",{parentName:"p"},'["alice", "data1", "read"]], nil'),"."),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'ImplicitUsers, err := e.GetImplicitUsersForResource("data2")\n')))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},'Seuls les utilisateurs seront renvoy\xe9s, les r\xf4les (2\xe8me argument dans "g") seront exclus.')))}k.isMDXComponent=!0}}]);