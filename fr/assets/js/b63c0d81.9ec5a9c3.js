"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[628],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return t?o.createElement(b,r(r({ref:n},u),{},{components:t})):o.createElement(b,r({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7998:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=t(7462),a=(t(7294),t(3905));const i={id:"ucon",title:"Usage Control (UCON)",description:"Usage Control Model in Casbin",keywords:["ucon","usage control","access control","authorization","obligations","conditions"],authors:["nodece"]},r=void 0,s={unversionedId:"ucon",id:"ucon",title:"Usage Control (UCON)",description:"Usage Control Model in Casbin",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/UCON.mdx",sourceDirName:".",slug:"/ucon",permalink:"/fr/docs/ucon",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/UCON.mdx",tags:[],version:"current",frontMatter:{id:"ucon",title:"Usage Control (UCON)",description:"Usage Control Model in Casbin",keywords:["ucon","usage control","access control","authorization","obligations","conditions"],authors:["nodece"]},sidebar:"docs",previous:{title:"Priority Model",permalink:"/fr/docs/priority-model"},next:{title:"Super Admin",permalink:"/fr/docs/superadmin"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Model &amp; Policy",id:"model--policy",level:2},{value:"model",id:"model",level:3},{value:"policy",id:"policy",level:3},{value:"Core Components",id:"core-components",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Implementation with casbin-ucon",id:"implementation-with-casbin-ucon",level:2},{value:"Implementation Notes",id:"implementation-notes",level:2},{value:"Comparison with Traditional Models",id:"comparison-with-traditional-models",level:2},{value:"References",id:"references",level:2}],u={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The Usage Control (UCON) model is an extension of traditional access control models that integrates authorizations, obligations, and conditions. Developed by Sandhu and Park, UCON provides a comprehensive framework for controlling access to and usage of digital resources in distributed systems. Unlike traditional access control models that focus only on authorization decisions at access time, UCON introduces continuous enforcement and attribute mutability."),(0,a.kt)("h2",{id:"model--policy"},"Model & Policy"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),": Casbin does not directly support UCON in its core library. Instead, UCON functionality is provided through the extension library ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-ucon"},"casbin-ucon"),", which adds session-based access control with conditions, obligations, and continuous monitoring capabilities. It can use the same models and policies supported by the Casbin core.")),(0,a.kt)("h3",{id:"model"},"model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-conf"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("h3",{id:"policy"},"policy"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, document1, read\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),": In UCON, Conditions and Obligations are not written in policy.csv; they are added and managed in code through the casbin-ucon API.")),(0,a.kt)("h2",{id:"core-components"},"Core Components"),(0,a.kt)("p",null,"The UCON model consists of three core components:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Authorizations (A)"),": Traditional access control rules based on subject and object attributes"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"oBligations (B)"),": Requirements that must be fulfilled by subjects before or during resource usage"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Conditions (C)"),": Environmental or system factors independent of subjects and objects")),(0,a.kt)("h2",{id:"key-features"},"Key Features"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Continuity"),": Unlike traditional models that check permissions only at access time, UCON enables ongoing enforcement during the entire usage session"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Mutability"),": Subject and object attributes can be updated as a consequence of usage"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Pre-decisions"),": Authorizations, obligations, and conditions checked before access"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Ongoing-decisions"),": Continuous checking during resource usage"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Post-decisions"),": Updates to attributes after usage completion")),(0,a.kt)("h2",{id:"use-cases"},"Use Cases"),(0,a.kt)("p",null,"The UCON model is particularly useful in:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Digital Rights Management (DRM) systems"),(0,a.kt)("li",{parentName:"ul"},"Healthcare information systems"),(0,a.kt)("li",{parentName:"ul"},"Cloud computing environments"),(0,a.kt)("li",{parentName:"ul"},"IoT device access control"),(0,a.kt)("li",{parentName:"ul"},"Data sharing in collaborative environments"),(0,a.kt)("li",{parentName:"ul"},"Financial systems with complex compliance requirements")),(0,a.kt)("h2",{id:"implementation-with-casbin-ucon"},"Implementation with casbin-ucon"),(0,a.kt)("p",null,"To implement UCON in your Casbin-based application, you need to use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-ucon"},"casbin-ucon")," extension library:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"go get github.com/casbin/casbin-ucon\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// Import the required packages\nimport (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin-ucon"\n    "fmt"\n    "time"\n)\n\nfunc main() {\n    // Create standard Casbin enforcer\n    e, _ := casbin.NewEnforcer("model.conf", "policy.csv")\n\n    // Wrap with UCON functionality\n    uconE := ucon.NewUconEnforcer(e)\n\n    // Add conditions\n    condition := &ucon.Condition{\n        ID:   "location_condition",\n        Name: "location",\n        Kind: "always",\n        Expr: "office",\n    }\n    uconE.AddCondition(condition)\n\n    // Add obligations\n    obligation := &ucon.Obligation{\n        ID:   "post_log",\n        Name: "access_logging",\n        Kind: "post",\n        Expr: "log_level:detailed",\n    }\n    uconE.AddObligation(obligation)\n\n    // Create a session\n    sessionID, _ := uconE.CreateSession("alice", "read", "document1", map[string]interface{}{\n        "location":      "office",\n        "log_level":     "detailed",\n    })\n\n    // UCON session-based enforcement\n    session, err := uconE.EnforceWithSession(sessionID)\n    if session == nil {\n        // refused\n        fmt.Println("session refused because: ", err)\n    }\n\n    // Monitor session status\n    go func() {\n        for {\n            if !session.IfActive() {\n                if session.GetStopReason() == ucon.NormalStopReason {\n                    break\n                }\n                //TODO\n                //decide how to handle session termination yourself\n                // For example, clean up resources, close connections, write logs, notify the frontend, etc.\n                fmt.Printf("%s %s %s is stopped because: %s\\n",\n                          session.GetSubject(), session.GetAction(),\n                          session.GetObject(), session.GetStopReason())\n                break\n            }\n            time.Sleep(200 * time.Millisecond)\n        }\n    }()\n\n    // You can update attributes during the session\n    // session.UpdateAttribute("location", "home")\n\n    // Stop the session when done\n    _ = uconE.StopMonitoring(sessionID)\n}\n')),(0,a.kt)("h2",{id:"implementation-notes"},"Implementation Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"UCON encompasses traditional access control models like MAC, DAC, and RBAC"),(0,a.kt)("li",{parentName:"ul"},"Implementation requires a reference monitor capable of continuous monitoring"),(0,a.kt)("li",{parentName:"ul"},"Attribute updates (mutability) should be handled atomically to maintain consistency"),(0,a.kt)("li",{parentName:"ul"},"Obligations may require integration with external monitoring systems"),(0,a.kt)("li",{parentName:"ul"},"Conditions evaluation may depend on environmental factors outside the access control system"),(0,a.kt)("li",{parentName:"ul"},"When using casbin-ucon, you need to properly manage session lifecycle and monitoring")),(0,a.kt)("h2",{id:"comparison-with-traditional-models"},"Comparison with Traditional Models"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Aspect"),(0,a.kt)("th",{parentName:"tr",align:null},"Traditional Access Control"),(0,a.kt)("th",{parentName:"tr",align:null},"UCON"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Decision Time"),(0,a.kt)("td",{parentName:"tr",align:null},"Pre-access only"),(0,a.kt)("td",{parentName:"tr",align:null},"Pre, ongoing, and post access")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Attribute Mutability"),(0,a.kt)("td",{parentName:"tr",align:null},"Static"),(0,a.kt)("td",{parentName:"tr",align:null},"Dynamic (can change during usage)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Decision Factors"),(0,a.kt)("td",{parentName:"tr",align:null},"Authorizations only"),(0,a.kt)("td",{parentName:"tr",align:null},"Authorizations, obligations, and conditions")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Enforcement"),(0,a.kt)("td",{parentName:"tr",align:null},"One-time check"),(0,a.kt)("td",{parentName:"tr",align:null},"Continuous monitoring")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Revocation"),(0,a.kt)("td",{parentName:"tr",align:null},"Explicit"),(0,a.kt)("td",{parentName:"tr",align:null},"Can be automatic based on attribute changes")))),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("p",null,"For complete API documentation, detailed usage, and latest updates about casbin-ucon, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin-ucon"},"casbin-ucon")," ."))}d.isMDXComponent=!0}}]);