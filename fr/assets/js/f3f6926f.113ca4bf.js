"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[9503],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1100:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],l={id:"policy-subset-loading",title:"Chargement du sous-ensemble de la politique",description:"Loading filtered policy",keywords:["filtered policy","policy subset","performance optimization"]},c=void 0,s={unversionedId:"policy-subset-loading",id:"policy-subset-loading",title:"Chargement du sous-ensemble de la politique",description:"Loading filtered policy",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/PolicySubsetLoading.mdx",sourceDirName:".",slug:"/policy-subset-loading",permalink:"/fr/docs/policy-subset-loading",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/fr",tags:[],version:"current",frontMatter:{id:"policy-subset-loading",title:"Chargement du sous-ensemble de la politique",description:"Loading filtered policy",keywords:["filtered policy","policy subset","performance optimization"]},sidebar:"docs",previous:{title:"Stockage de la politique",permalink:"/fr/docs/policy-storage"},next:{title:"Enforcers",permalink:"/fr/docs/enforcers"}},p={},u=[],d={toc:u};function f(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Certains adaptateurs prennent en charge la gestion des politiques filtr\xe9es. Cela signifie que la politique charg\xe9e par Casbin est un sous-ensemble de la politique de stockage bas\xe9e sur un filtre donn\xe9. Cela permet une application efficace des politiques dans de grands environnements multilocataires lors de l'analyse de l'ensemble de la politique devient un goulot d'\xe9tranglement de performance."),(0,o.kt)("p",null,"Pour utiliser des r\xe8gles filtr\xe9es avec un adaptateur pris en charge, appelez simplement la m\xe9thode ",(0,o.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),". Le format valide pour le param\xe8tre de filtre d\xe9pend de l'adaptateur utilis\xe9. Pour \xe9viter la perte accidentelle de donn\xe9es, la m\xe9thode ",(0,o.kt)("inlineCode",{parentName:"p"},"SavePolicy")," est d\xe9sactiv\xe9e lorsqu'une politique filtr\xe9e est charg\xe9e."),(0,o.kt)("p",null,"Par exemple, le code snippet suivant utilise l'adaptateur de fichier filtr\xe9 int\xe9gr\xe9 et le mod\xe8le RBAC avec des domaines. Dans ce cas, le filtre limite la r\xe8gle \xe0 un seul domaine. Toutes les lignes de r\xe9gulation pour les domaines autres que ",(0,o.kt)("inlineCode",{parentName:"p"},'"domain1"')," sont omises de la politique charg\xe9e :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    fileadapter "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\nenforcer, _ := casbin.NewEnforcer()\n\nadapter := fileadapter.NewFilteredAdapter("examples/rbac_with_domains_policy.csv")\nenforcer.InitWithAdapter("examples/rbac_with_domains_model.conf", adapter)\n\nfilter := &fileadapter.Filter{\n    P: []string{"", "domain1"},\n    G: []string{"", "", "domain1"},\n}\nenforcer.LoadFilteredPolicy(filter)\n\n// The loaded policy now only contains the entries pertaining to "domain1".\n')),(0,o.kt)("p",null,"Il y a une autre fonctionnalit\xe9 de chargement de sous-ensemble de m\xe9thode : ",(0,o.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy")," est similaire \xe0 LoadFilteredPolicy, or il n'efface pas la politique pr\xe9c\xe9dente charg\xe9e, n'ajoutez que cela."))}f.isMDXComponent=!0}}]);