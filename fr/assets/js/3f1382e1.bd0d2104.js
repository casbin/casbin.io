"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[9594],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>m});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),u=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},p=function(e){var r=u(e.components);return t.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return n?t.createElement(f,l(l({ref:r},p),{},{components:n})):t.createElement(f,l({ref:r},p))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4427:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var t=n(7462),a=(n(7294),n(3905));const i={id:"api-overview",title:"API Overview",description:"Utilisation de l'API Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},l=void 0,o={unversionedId:"api-overview",id:"api-overview",title:"API Overview",description:"Utilisation de l'API Casbin",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/APIOverview.mdx",sourceDirName:".",slug:"/api-overview",permalink:"/fr/docs/api-overview",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/APIOverview.mdx",tags:[],version:"current",frontMatter:{id:"api-overview",title:"API Overview",description:"Utilisation de l'API Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"API",permalink:"/fr/docs/category/api"},next:{title:"Management API",permalink:"/fr/docs/management-api"}},s={},u=[{value:"API Enforce",id:"api-enforce",level:2},{value:"EnforceEx API",id:"enforceex-api",level:2},{value:"API de gestion",id:"api-de-gestion",level:2},{value:"API Get",id:"api-get",level:3},{value:"Ajouter, Supprimer, Mettre \xe0 jour l&#39;API",id:"ajouter-supprimer-mettre-\xe0-jour-lapi",level:3},{value:"API AddEx",id:"api-addex",level:3},{value:"RBAC API",id:"rbac-api",level:2}],p={toc:u};function c(e){let{components:r,...n}=e;return(0,a.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Cet aper\xe7u vous montre seulement comment utiliser les API Casbin et n'explique pas comment Casbin est install\xe9 ou comment il fonctionne. Vous pouvez trouver ces tutoriels ici : ",(0,a.kt)("a",{parentName:"p",href:"/docs/get-started"},"Installation de Casbin")," et ",(0,a.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"Comment fonctionne Casbin"),". Donc, lorsque vous commencez \xe0 lire ce tutoriel, nous supposons que vous avez enti\xe8rement install\xe9 et import\xe9 Casbin dans votre code."),(0,a.kt)("h2",{id:"api-enforce"},"API Enforce"),(0,a.kt)("p",null,"Commen\xe7ons par les API Enforce de Casbin. Nous chargerons un mod\xe8le RBAC \xe0 partir de ",(0,a.kt)("inlineCode",{parentName:"p"},"model.conf")," et chargerons les politiques \xe0 partir de ",(0,a.kt)("inlineCode",{parentName:"p"},"policy.csv"),". Vous pouvez en savoir plus sur la syntaxe du mod\xe8le ",(0,a.kt)("a",{parentName:"p",href:"/docs/syntax-for-models"},"ici"),", et nous n'en discuterons pas dans ce tutoriel. Nous supposons que vous pouvez comprendre les fichiers de configuration donn\xe9s ci-dessous :"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, admin, data1, write\np, admin, data2, read\np, admin, data2, write\np, alice, data1, read\np, bob, data2, write\ng, amber, admin\ng, abc, admin\n")),(0,a.kt)("p",null,"Apr\xe8s avoir lu les fichiers de configuration, veuillez lire le code suivant."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// Load information from files.\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    log.Fatalf("Error, detail: %s", err)\n}\nok, err := enforcer.Enforce("alice", "data1", "read")\n')),(0,a.kt)("p",null,"Ce code charge le mod\xe8le de contr\xf4le d'acc\xe8s et les politiques \xe0 partir de fichiers locaux. La fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"casbin.NewEnforcer()")," renverra un ex\xe9cuteur. Il reconna\xeetra ses deux param\xe8tres comme des chemins de fichiers et chargera les fichiers \xe0 partir de l\xe0. Les erreurs survenues dans le processus sont stock\xe9es dans la variable ",(0,a.kt)("inlineCode",{parentName:"p"},"err"),". Ce code utilise l'adaptateur par d\xe9faut pour charger le mod\xe8le et les politiques, et bien s\xfbr, vous pouvez obtenir le m\xeame r\xe9sultat en utilisant un adaptateur tiers."),(0,a.kt)("p",null,"Le code ",(0,a.kt)("inlineCode",{parentName:"p"},'ok, err := enforcer.Enforce("alice", "data1", "read")')," est utilis\xe9 pour confirmer les permissions d'acc\xe8s. Si Alice peut acc\xe9der \xe0 data1 avec l'op\xe9ration de lecture, la valeur renvoy\xe9e de ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," sera ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," ; sinon, elle sera ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),". Dans cet exemple, la valeur de ",(0,a.kt)("inlineCode",{parentName:"p"},"ok")," est ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h2",{id:"enforceex-api"},"EnforceEx API"),(0,a.kt)("p",null,"Parfois, vous pouvez vous demander quelle politique a permis la demande, donc nous avons pr\xe9par\xe9 la fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),". Vous pouvez l'utiliser comme ceci :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'ok, reason, err := enforcer.EnforceEx("amber", "data1", "read")\nfmt.Println(ok, reason) // true [admin data1 read]\n')),(0,a.kt)("p",null,"La fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"EnforceEx()")," renverra la cha\xeene de politique exacte dans la valeur de retour ",(0,a.kt)("inlineCode",{parentName:"p"},"reason"),". Dans cet exemple, ",(0,a.kt)("inlineCode",{parentName:"p"},"amber")," est un r\xf4le ",(0,a.kt)("inlineCode",{parentName:"p"},"admin"),", donc la politique ",(0,a.kt)("inlineCode",{parentName:"p"},"p, admin, data1, read")," a permis \xe0 cette demande d'\xeatre ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". La sortie de ce code est dans le commentaire."),(0,a.kt)("p",null,"Casbin a fourni de nombreuses API similaires \xe0 celle-ci. Ces API ajoutent quelques fonctions suppl\xe9mentaires \xe0 celles de base. Ils incluent :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"ok, err := enforcer.EnforceWithMatcher(matcher, request)")),(0,a.kt)("p",{parentName:"li"},"Cette fonction utilise un matcher.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"ok, reason, err := enforcer.EnforceExWithMatcher(matcher, request)")),(0,a.kt)("p",{parentName:"li"},"C'est une combinaison de ",(0,a.kt)("inlineCode",{parentName:"p"},"EnforceWithMatcher()")," et ",(0,a.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"boolArray, err := enforcer.BatchEnforce(requests)")),(0,a.kt)("p",{parentName:"li"},"Cette fonction permet une liste de t\xe2ches et renvoie un tableau."))),(0,a.kt)("p",null,"Ceci est un cas d'utilisation simple de Casbin. Vous pouvez utiliser Casbin pour d\xe9marrer un serveur d'autorisation en utilisant ces API. Nous vous montrerons d'autres types d'API dans les paragraphes suivants."),(0,a.kt)("h2",{id:"api-de-gestion"},"API de gestion"),(0,a.kt)("h3",{id:"api-get"},"API Get"),(0,a.kt)("p",null,"Ces API sont utilis\xe9es pour r\xe9cup\xe9rer des objets sp\xe9cifiques dans les politiques. Dans cet exemple, nous chargeons un ex\xe9cuteur et r\xe9cup\xe9rons quelque chose \xe0 partir de celui-ci."),(0,a.kt)("p",null,"Veuillez jeter un \u0153il au code suivant :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\nallSubjects := enforcer.GetAllSubjects()\nfmt.Println(allSubjects)\n')),(0,a.kt)("p",null,"Semblable \xe0 l'exemple pr\xe9c\xe9dent, les quatre premi\xe8res lignes sont utilis\xe9es pour charger les informations n\xe9cessaires \xe0 partir des fichiers locaux. Nous n'en discuterons pas plus ici."),(0,a.kt)("p",null,"Le code ",(0,a.kt)("inlineCode",{parentName:"p"},"allSubjects := enforcer.GetAllSubjects()")," r\xe9cup\xe8re tous les sujets dans le fichier de politique et les renvoie sous forme de tableau. Nous imprimons ensuite ce tableau."),(0,a.kt)("p",null,"En g\xe9n\xe9ral, la sortie du code devrait \xeatre :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"[admin alice bob]\n")),(0,a.kt)("p",null,"Vous pouvez \xe9galement changer la fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"GetAllSubjects()")," en ",(0,a.kt)("inlineCode",{parentName:"p"},"GetAllNamedSubjects()")," pour obtenir la liste des sujets qui apparaissent dans la politique nomm\xe9e actuelle."),(0,a.kt)("p",null,"De m\xeame, nous avons pr\xe9par\xe9 des fonctions ",(0,a.kt)("inlineCode",{parentName:"p"},"GetAll")," pour ",(0,a.kt)("inlineCode",{parentName:"p"},"Objects, Actions, Roles"),". Pour acc\xe9der \xe0 ces fonctions, vous devez simplement remplacer le mot ",(0,a.kt)("inlineCode",{parentName:"p"},"Subject")," dans le nom de la fonction par la cat\xe9gorie souhait\xe9e."),(0,a.kt)("p",null,"De plus, il y a plus de getters disponibles pour les politiques. La m\xe9thode d'appel et les valeurs de retour sont similaires \xe0 celles mentionn\xe9es ci-dessus."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"policy = e.GetPolicy()")," r\xe9cup\xe8re toutes les r\xe8gles d'autorisation dans la politique."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'filteredPolicy := e.GetFilteredPolicy(0, "alice")')," r\xe9cup\xe8re toutes les r\xe8gles d'autorisation dans la politique avec des filtres de champ sp\xe9cifi\xe9s."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'namedPolicy := e.GetNamedPolicy("p")')," r\xe9cup\xe8re toutes les r\xe8gles d'autorisation dans la politique nomm\xe9e."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'filteredNamedPolicy = e.GetFilteredNamedPolicy("p", 0, "bob")')," r\xe9cup\xe8re toutes les r\xe8gles d'autorisation dans la politique nomm\xe9e avec des filtres de champ sp\xe9cifi\xe9s."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"groupingPolicy := e.GetGroupingPolicy()")," r\xe9cup\xe8re toutes les r\xe8gles d'h\xe9ritage de r\xf4le dans la politique."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'filteredGroupingPolicy := e.GetFilteredGroupingPolicy(0, "alice")')," r\xe9cup\xe8re toutes les r\xe8gles d'h\xe9ritage de r\xf4le dans la politique avec des filtres de champ sp\xe9cifi\xe9s."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetNamedGroupingPolicy("g")')," r\xe9cup\xe8re toutes les r\xe8gles d'h\xe9ritage de r\xf4le dans la politique."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetFilteredNamedGroupingPolicy("g", 0, "alice")')," r\xe9cup\xe8re toutes les r\xe8gles d'h\xe9ritage de r\xf4le dans la politique avec des filtres de champ sp\xe9cifi\xe9s.")),(0,a.kt)("h3",{id:"ajouter-supprimer-mettre-\xe0-jour-lapi"},"Ajouter, Supprimer, Mettre \xe0 jour l'API"),(0,a.kt)("p",null,"Casbin propose une vari\xe9t\xe9 d'API pour ajouter, supprimer ou modifier dynamiquement les politiques en temps r\xe9el."),(0,a.kt)("p",null,"Le code suivant montre comment ajouter, supprimer et mettre \xe0 jour des politiques, ainsi que comment v\xe9rifier si une politique existe :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'// load information from files\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n\n// add a policy and use HasPolicy() to confirm\nenforcer.AddPolicy("added_user", "data1", "read")\nhasPolicy := enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // true, the policy was added successfully\n\n// remove a policy and use HasPolicy() to confirm\nenforcer.RemovePolicy("alice", "data1", "read")\nhasPolicy = enforcer.HasPolicy("alice", "data1", "read")\nfmt.Println(hasPolicy) // false, the policy was removed successfully\n\n// update a policy and use HasPolicy() to confirm\nenforcer.UpdatePolicy([]string{"added_user", "data1", "read"}, []string{"added_user", "data1", "write"})\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // false, the original policy has expired\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "write")\nfmt.Println(hasPolicy) // true, the new policy is in effect\n')),(0,a.kt)("p",null,"En utilisant ces API, vous pouvez modifier vos politiques de mani\xe8re dynamique. De m\xeame, nous avons fourni des API similaires pour ",(0,a.kt)("inlineCode",{parentName:"p"},"FilteredPolicy, NamedPolicy, FilteredNamedPolicy, GroupingPolicy, NamedGroupingPolicy, FilteredGroupingPolicy, FilteredNamedGroupingPolicy"),". Pour les utiliser, remplacez simplement le mot ",(0,a.kt)("inlineCode",{parentName:"p"},"Policy")," dans le nom de la fonction par la cat\xe9gorie appropri\xe9e."),(0,a.kt)("p",null,"De plus, en changeant les param\xe8tres en tableaux, vous pouvez effectuer l'\xe9dition en lot de vos politiques."),(0,a.kt)("p",null,"Par exemple, consid\xe9rez des fonctions comme celle-ci :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicy([]string{"eve", "data3", "read"}, []string{"eve", "data3", "write"})\n')),(0,a.kt)("p",null,"Si nous changeons ",(0,a.kt)("inlineCode",{parentName:"p"},"Policy")," en ",(0,a.kt)("inlineCode",{parentName:"p"},"Policies")," et modifions les param\xe8tres comme suit :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicies([][]string{{"eve", "data3", "read"}, {"jack", "data3", "read"}}, [][]string{{"eve", "data3", "write"}, {"jack", "data3", "write"}})\n')),(0,a.kt)("p",null,"alors nous pouvons effectuer l'\xe9dition en lot de ces politiques."),(0,a.kt)("p",null,"Les m\xeames op\xe9rations peuvent \xe9galement \xeatre appliqu\xe9es \xe0 ",(0,a.kt)("inlineCode",{parentName:"p"},"GroupingPolicy, NamedGroupingPolicy"),"."),(0,a.kt)("h3",{id:"api-addex"},"API AddEx"),(0,a.kt)("p",null,"Casbin fournit la s\xe9rie d'API AddEx pour aider les utilisateurs \xe0 ajouter des r\xe8gles par lots."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"AddPoliciesEx(rules [][]string) (bool, error)\nAddNamedPoliciesEx(ptype string, rules [][]string) (bool, error)\nAddGroupingPoliciesEx(rules [][]string) (bool, error)\nAddNamedGroupingPoliciesEx(ptype string, rules [][]string) (bool, error)\nSelfAddPoliciesEx(sec string, ptype string, rules [][]string) (bool, error) \n")),(0,a.kt)("p",null,"La diff\xe9rence entre ces m\xe9thodes et les m\xe9thodes sans le suffixe Ex est que si l'une des r\xe8gles existe d\xe9j\xe0, elles continueront \xe0 v\xe9rifier la r\xe8gle suivante au lieu de renvoyer false imm\xe9diatement."),(0,a.kt)("p",null,"Par exemple, comparons ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPolicies")," et ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPoliciesEx"),"."),(0,a.kt)("p",null,"Vous pouvez ex\xe9cuter et observer le code suivant en le copiant dans le test sous casbin."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func TestDemo(t *testing.T) {\n    e, err := NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n    if err != nil {\n        fmt.Printf("Error, details: %s\\n", err)\n    }\n    e.ClearPolicy()\n    e.AddPolicy("user1", "data1", "read")\n    fmt.Println(e.GetPolicy())\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // policy {"user1", "data1", "read"} now exists\n\n    // Use AddPolicies to add rules in batches\n    ok, _ := e.AddPolicies([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} failed to add because {"user1", "data1", "read"} already exists\n    // AddPolicies returns false and no other policies are checked, even though they may not exist in the existing ruleset\n    // ok == false\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // Use AddPoliciesEx to add rules in batches\n    ok, _ = e.AddPoliciesEx([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} is added successfully\n    // because AddPoliciesEx automatically filters the existing {"user1", "data1", "read"}\n    // ok == true\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n}\n')),(0,a.kt)("h2",{id:"rbac-api"},"RBAC API"),(0,a.kt)("p",null,"Casbin fournit quelques API pour vous permettre de modifier le mod\xe8le RBAC et les politiques. Si vous \xeates familier avec RBAC, vous pouvez facilement utiliser ces API."),(0,a.kt)("p",null,"Ici, nous vous montrons seulement comment utiliser les API RBAC de Casbin et nous ne parlerons pas de RBAC lui-m\xeame. Vous pouvez obtenir plus de d\xe9tails ",(0,a.kt)("a",{parentName:"p",href:"/docs/rbac"},"ici"),"."),(0,a.kt)("p",null,"Nous utilisons le code suivant pour charger le mod\xe8le et les politiques, comme avant."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n')),(0,a.kt)("p",null,"Ensuite, nous pouvons utiliser une instance de l'Enforcer ",(0,a.kt)("inlineCode",{parentName:"p"},"enforcer")," pour acc\xe9der \xe0 ces API."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'roles, err := enforcer.GetRolesForUser("amber")\nfmt.Println(roles) // [admin]\nusers, err := enforcer.GetUsersForRole("admin")\nfmt.Println(users) // [amber abc]\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," renvoie un tableau qui contient tous les r\xf4les qu'amber a. Dans cet exemple, amber n'a qu'un seul r\xf4le, qui est admin, donc le tableau ",(0,a.kt)("inlineCode",{parentName:"p"},"roles")," est ",(0,a.kt)("inlineCode",{parentName:"p"},"[admin]"),". De m\xeame, vous pouvez utiliser ",(0,a.kt)("inlineCode",{parentName:"p"},"GetUsersForRole()")," pour obtenir les utilisateurs qui appartiennent \xe0 un r\xf4le. La valeur de retour de cette fonction est \xe9galement un tableau."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.HasRoleForUser("amber", "admin") // true\n')),(0,a.kt)("p",null,"Vous pouvez utiliser ",(0,a.kt)("inlineCode",{parentName:"p"},"HasRoleForUser()")," pour confirmer si l'utilisateur appartient au r\xf4le. Dans cet exemple, amber est membre de admin, donc la valeur de retour de la fonction est ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("bob", "data2", "write")) // true\nenforcer.DeletePermission("data2", "write")\nfmt.Println(enforcer.Enforce("bob", "data2", "write")) // false\n')),(0,a.kt)("p",null,"Vous pouvez utiliser ",(0,a.kt)("inlineCode",{parentName:"p"},"DeletePermission()")," pour supprimer une permission."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("alice", "data1", "read")) // true\nenforcer.DeletePermissionForUser("alice", "data1", "read")\nfmt.Println(enforcer.Enforce("alice", "data1", "read")) // false\n')),(0,a.kt)("p",null,"Et utiliser ",(0,a.kt)("inlineCode",{parentName:"p"},"DeletePermissionForUser()")," pour supprimer une permission pour un utilisateur."),(0,a.kt)("p",null,"Casbin a de nombreuses API comme celle-ci. Leurs m\xe9thodes d'appel et leurs valeurs de retour ont le m\xeame style que les API ci-dessus. You can find these APIs in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/rbac-api"},"next documents"),"."))}c.isMDXComponent=!0}}]);