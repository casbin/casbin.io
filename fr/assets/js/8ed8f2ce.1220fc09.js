"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[386],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={id:"model-storage",title:"Stockage du mod\xe8le",description:"Model storage",keywords:["model storage"],authors:["hsluoyz"]},l=void 0,i={unversionedId:"model-storage",id:"model-storage",title:"Stockage du mod\xe8le",description:"Model storage",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/ModelStorage.mdx",sourceDirName:".",slug:"/model-storage",permalink:"/fr/docs/model-storage",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/fr",tags:[],version:"current",frontMatter:{id:"model-storage",title:"Stockage du mod\xe8le",description:"Model storage",keywords:["model storage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Storage",permalink:"/fr/docs/category/storage"},next:{title:"Stockage de la politique",permalink:"/fr/docs/policy-storage"}},c={},s=[{value:"Charger le mod\xe8le depuis un fichier .CONF",id:"charger-le-mod\xe8le-depuis-un-fichier-conf",level:2},{value:"Charger le mod\xe8le \xe0 partir du code",id:"charger-le-mod\xe8le-\xe0-partir-du-code",level:2},{value:"Charger le mod\xe8le depuis une cha\xeene de caract\xe8res",id:"charger-le-mod\xe8le-depuis-une-cha\xeene-de-caract\xe8res",level:2}],d={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Unlike the policy, the model can only be loaded, it cannot be saved. We believe that the model is not a dynamic component and should not be modified at runtime, so we have not implemented an API to save the model into storage."),(0,o.kt)("p",null,"However, there is good news. We provide three equivalent ways to load a model, either statically or dynamically:"),(0,o.kt)("h2",{id:"charger-le-mod\xe8le-depuis-un-fichier-conf"},"Charger le mod\xe8le depuis un fichier .CONF"),(0,o.kt)("p",null,"C'est la fa\xe7on la plus courante d'utiliser Casbin. It is easy to understand for beginners and convenient for sharing when you need help from the Casbin team."),(0,o.kt)("p",null,"The content of the ",(0,o.kt)("inlineCode",{parentName:"p"},".CONF")," file ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/examples/rbac_model.conf"},"examples/rbac_model.conf")," is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,o.kt)("p",null,"Then you can load the model file as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n')),(0,o.kt)("h2",{id:"charger-le-mod\xe8le-\xe0-partir-du-code"},"Charger le mod\xe8le \xe0 partir du code"),(0,o.kt)("p",null,"The model can be initialized dynamically from code instead of using a ",(0,o.kt)("inlineCode",{parentName:"p"},".CONF")," file. Voici un exemple pour le mod\xe8le RBAC :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n    "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\n// Initialise le mod\xe8le \xe0 partir du code Go.\nm := model.NewModel()\nm.AddDef("r", "r", "sub, obj, act")\nm.AddDef("p", "p", "sub, obj, act")\nm.AddDef("g", "g", "_, _")\nm.AddDef("e", "e", "e", "some(o\xf9 (p. ft == allow)")\nm.AddDef("m", "m", "g(r.sub, p.sub) && r.obj == p. bj && r.act == p.act")\n\n// Charge les r\xe8gles de r\xe9gulation depuis l\'adaptateur de fichier .CSV.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Cr\xe9er le responsable.\ne := casbin.NewEnforcer(m, a)\n')),(0,o.kt)("h2",{id:"charger-le-mod\xe8le-depuis-une-cha\xeene-de-caract\xe8res"},"Charger le mod\xe8le depuis une cha\xeene de caract\xe8res"),(0,o.kt)("p",null,"Alternatively, you can load the entire model text from a multi-line string. The advantage of this approach is that you do not need to maintain a model file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/casbin/v2/model"\n)\n\n// Initialise le mod\xe8le \xe0 partir d\'une cha\xeene de caract\xe8res.\ntext :=\n`\n[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = quelque part (o\xf9 (p. ft == allow))\n\n[matchers]\nm = g(r.sub, p. ub) && r.obj == p.obj && r.act == p. ct\n`\nm, _ := model.NewModelFromString(text)\n\n// Charge les r\xe8gles de r\xe9gulation depuis l\'adaptateur de fichier .CSV.\n// Replace it with your adapter to avoid using files.\na := fileadapter.NewAdapter("examples/rbac_policy.csv")\n\n// Cr\xe9er le responsable.\ne := casbin.NewEnforcer(m, a)\n')))}p.isMDXComponent=!0}}]);