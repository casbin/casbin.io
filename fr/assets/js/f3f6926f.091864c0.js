"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[9503],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1100:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={id:"policy-subset-loading",title:"Policy Subset Loading",description:"Chargement des politiques filtr\xe9es",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},o=void 0,l={unversionedId:"policy-subset-loading",id:"policy-subset-loading",title:"Policy Subset Loading",description:"Chargement des politiques filtr\xe9es",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/PolicySubsetLoading.mdx",sourceDirName:".",slug:"/policy-subset-loading",permalink:"/fr/docs/policy-subset-loading",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PolicySubsetLoading.mdx",tags:[],version:"current",frontMatter:{id:"policy-subset-loading",title:"Policy Subset Loading",description:"Chargement des politiques filtr\xe9es",keywords:["filtered policies","policy subset","performance optimization"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Policy Storage",permalink:"/fr/docs/policy-storage"},next:{title:"Scenarios",permalink:"/fr/docs/category/scenarios"}},s={},c=[],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Certains adaptateurs prennent en charge la gestion des politiques filtr\xe9es. Cela signifie que la politique charg\xe9e par Casbin est un sous-ensemble de la politique stock\xe9e dans la base de donn\xe9es en fonction d'un filtre donn\xe9. Cela permet une application efficace de la politique dans de grands environnements multi-locataires o\xf9 l'analyse de l'ensemble de la politique devient un goulot d'\xe9tranglement des performances."),(0,r.kt)("p",null,"Pour utiliser des politiques filtr\xe9es avec un adaptateur pris en charge, il suffit d'appeler la m\xe9thode ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),". Le format valide pour le param\xe8tre de filtre d\xe9pend de l'adaptateur utilis\xe9. Pour \xe9viter une perte de donn\xe9es accidentelle, la m\xe9thode ",(0,r.kt)("inlineCode",{parentName:"p"},"SavePolicy")," est d\xe9sactiv\xe9e lorsqu'une politique filtr\xe9e est charg\xe9e."),(0,r.kt)("p",null,"Par exemple, l'extrait de code suivant utilise l'adaptateur de fichier filtr\xe9 int\xe9gr\xe9 et le mod\xe8le RBAC avec des domaines. Dans ce cas, le filtre limite la politique \xe0 un seul domaine. Toutes les lignes de politique pour des domaines autres que \"domain1\" sont omises de la politique charg\xe9e :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    fileadapter "github.com/casbin/casbin/v2/persist/file-adapter"\n)\n\nenforcer, _ := casbin.NewEnforcer()\n\nadapter := fileadapter.NewFilteredAdapter("examples/rbac_with_domains_policy.csv")\nenforcer.InitWithAdapter("examples/rbac_with_domains_model.conf", adapter)\n\nfilter := &fileadapter.Filter{\n    P: []string{"", "domain1"},\n    G: []string{"", "", "domain1"},\n}\nenforcer.LoadFilteredPolicy(filter)\n\n// The loaded policy now only contains the entries pertaining to "domain1".\n')),(0,r.kt)("p",null,"Il existe une autre m\xe9thode qui prend en charge la fonctionnalit\xe9 de chargement de sous-ensemble : ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadIncrementalFilteredPolicy")," est similaire \xe0 ",(0,r.kt)("inlineCode",{parentName:"p"},"LoadFilteredPolicy"),", mais elle ne supprime pas la politique pr\xe9c\xe9demment charg\xe9e. Elle ajoute seulement la politique filtr\xe9e \xe0 la politique existante."))}d.isMDXComponent=!0}}]);