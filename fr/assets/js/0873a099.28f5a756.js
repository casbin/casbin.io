"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),g=s(n),c=a,m=g["".concat(p,".").concat(c)]||g[c]||d[c]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"log-error",title:"Log & gestion des erreurs",description:"Casbin log & error handling",keywords:["log","error","error handling"],authors:["hsluoyz"]},i=void 0,l={unversionedId:"log-error",id:"log-error",title:"Log & gestion des erreurs",description:"Casbin log & error handling",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/LogError.mdx",sourceDirName:".",slug:"/log-error",permalink:"/fr/docs/log-error",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/fr",tags:[],version:"current",frontMatter:{id:"log-error",title:"Log & gestion des erreurs",description:"Casbin log & error handling",keywords:["log","error","error handling"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Service Casbin",permalink:"/fr/docs/service"},next:{title:"Utilisation du frontend",permalink:"/fr/docs/frontend"}},p={},s=[{value:"Journalisation",id:"journalisation",level:2},{value:"Activer &amp; d\xe9sactiver",id:"activer--d\xe9sactiver",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=u("Tabs"),g=u("TabItem"),c={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"journalisation"},"Journalisation"),(0,a.kt)("p",null,"Casbin utilise le log ",(0,a.kt)("inlineCode",{parentName:"p"},"int\xe9gr\xe9")," pour afficher les logs dans la console par d\xe9faut comme :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"2017/07/15 19:43:56 [Demande: alice, data1, read ---\x3e true]\n")),(0,a.kt)("p",null,"La journalisation n'est pas activ\xe9e par d\xe9faut. Vous pouvez le basculer via ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableLog()")," ou le dernier param\xe8tre de ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Nous soutenons d\xe9j\xe0 l'enregistrement du mod\xe8le, l'application de la demande, le r\xf4le, la politique dans Golang. Vous pouvez d\xe9finir votre propre journal de connexion Casbin. Si vous utilisez Python, pycasbin utilise le m\xe9canisme de journalisation par d\xe9faut de Python. Le paquet pycasbin fait un appel \xe0 logging.getLogger() pour d\xe9finir le logger. Aucune configuration sp\xe9ciale de journalisation n'est n\xe9cessaire autre que l'initialisation du logger dans l'application parente. Si aucune trace n'est intitilis\xe9e dans l'application parente, vous ne verrez aucun message de log de pycasbin. At the same time, when you enable log in pycasbin, it will uses the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/pycasbin/blob/c33cabfa0ac65cd09cf812a65e71794d64cb5132/casbin/util/log.py#L6C1-L6C1"},"default log configuration"),". For other pycasbin extensions, you can refer to ",(0,a.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/4.2/topics/logging/"},"django logging docs")," if you are a Django user. For other Python users, you should refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/logging.config.html"},"python logging docs")," to configure logger. :::"),(0,a.kt)("h3",{parentName:"admonition",id:"utiliser-un-enregistreur-diff\xe9rent-pour-diff\xe9rents-agents-de-s\xe9curit\xe9"},"Utiliser un enregistreur diff\xe9rent pour diff\xe9rents agents de s\xe9curit\xe9"),(0,a.kt)("p",{parentName:"admonition"},"Chaque responsable pouvait avoir son propre enregistreur pour enregistrer des informations, et il pourrait \xeatre modifi\xe9 au moment de l'ex\xe9cution."),(0,a.kt)("p",{parentName:"admonition"},"And you could use a proper logger via the last paramter of ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),", if you using this way to initialize your enforcer, you needn't use the enabled parameter, cause the priority of the enabled field in logger is higher."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// D\xe9finit un enregistreur par d\xe9faut en tant que enregistreur d'e1.\n// Cette op\xe9ration pourrait \xe9galement \xeatre consid\xe9r\xe9e comme le changement du logger de e1 \xe0 l'ex\xe9cution.\ne1.SetLogger(&Log.DefaultLogger{})\n\n// D\xe9finit un autre enregistreur en tant que enregistreur de l'agent de s\xe9curit\xe9 e2.\ne2.SetLogger(&YouOwnLogger)\n\n// D\xe9finit votre logger lors de l'initialisation de enforcer e3.\ne3, _ := casbin.NewEnforcer(\"examples/rbac_model.conf\", a, logger)\n")),(0,a.kt)("h4",{parentName:"admonition",id:"enregistreurs-pris-en-charge"},"Enregistreurs pris en charge"),(0,a.kt)("p",{parentName:"admonition"},"Nous fournissons des loggeurs pour vous aider \xe0 enregistrer des informations."),(0,a.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,a.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,a.kt)("table",{parentName:"admonition"},(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Logger"),(0,a.kt)("th",{parentName:"tr",align:null},"Auteur"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/log/default_logger.go"},"D\xe9samor\xe7age (int\xe9gr\xe9)")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Le logger par d\xe9faut en utilisant le log golang.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/zap-logger"},"Zap logger")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"En utilisant ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/uber-go/zap"},"zap"),", fournissez des journaux encod\xe9s en json et vous pourriez personnaliser davantage avec votre propre enregistreur zap."))))),(0,a.kt)(g,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,a.kt)("table",{parentName:"admonition"},(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Logger"),(0,a.kt)("th",{parentName:"tr",align:null},"Auteur"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/php-casbin/psr3-bridge"},"logger psr3-bridge")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Fournit un pont de connexion ",(0,a.kt)("a",{parentName:"td",href:"https://www.php-fig.org/psr/psr-3/"},"PSR-3"),".")))))),(0,a.kt)("h4",{parentName:"admonition",id:"comment-\xe9crire-un-logger"},"Comment \xe9crire un logger"),(0,a.kt)("p",{parentName:"admonition"},"Votre logger devrait impl\xe9menter l'interface ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/log/logger.go#L20"},"Logger"),"."),(0,a.kt)("table",{parentName:"admonition"},(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"M\xe9thode"),(0,a.kt)("th",{parentName:"tr",align:null},"Type de texte"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"EnableLog()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Contr\xf4le si le message est affich\xe9.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"IsEnabled()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Afficher le statut actif du logger.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogModel()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Informations de log relatives au mod\xe8le.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogEnforce()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Informations de log relatives \xe0 la mise en application.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogRole()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Informations de log relatives au r\xf4le.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Politique() de logg()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Informations de log relatives \xe0 la politique.")))),(0,a.kt)("p",{parentName:"admonition"},"Vous pouvez passer votre log ",(0,a.kt)("inlineCode",{parentName:"p"},"personnalis\xe9")," \xe0 ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.SetLogger()"),"."),(0,a.kt)("p",{parentName:"admonition"},"Voici un exemple sur la fa\xe7on de personnaliser un logger pour Golang:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "fmt"\n    "log"\n    "strings"\n)\n\n// DefaultLogger est l\'impl\xe9mentation d\'un Logger en utilisant le log golang.\ntype DefaultLogger struct {\n    enabled bool\n}\n\nfunc (l *DefaultLogger) EnableLog(enable bool) {\n    l. nabled = enable\n}\n\nfunc (l *DefaultLogger) IsEnabled() bool {\n    return l.enabled\n}\n\nfunc (l *DefaultLogger) LogModel(model [][]string) {\n    if !l. nabled {\n        return\n    }\n    var str strings.Builder\n    str. riteString("Mod\xe8le: ")\n    pour _, v := range model {\n        str. riteString(fmt.Sprintf("%v\\n", v))\n    }\n\n    log.Println(str. tring())\n}\n\nfunc (l *DefaultLogger) LogEnforce(matcher string, request []interface{}, result bool, explains [][]string) {\n    if !l. {\n        return\n    }\n\n    var reqStr strings.Builder\n    reqStr. riteString("Requ\xeate: ")\n    pour i, rval := range request {\n        if i ! len(request)-1 {\n            reqStr. riteString(fmt. printf("%v, ", rval))\n        } else {\n            reqStr. riteString(fmt. printf("%v", rval))\n        }\n    }\n    reqStr. riteString(fmt.Sprintf(" ---\x3e %t\\n", r\xe9sultat))\n\n    reqStr. riteString("Politique de frappe: ")\n    pour i, pval := intervalle explique {\n        si i ! len(expliques)-1 {\n            reqStr. riteString(fmt. printf("%v, ", pval))\n        } else {\n            reqStr. riteString(fmt. printf("%v \\n", pval))\n        }\n    }\n\n    log. rintln(reqStr. tring())\n}\n\nfunc (l *DefaultLogger) LogPolicy(policy map[string][][]string) {\n    if !l. format@@0 nabled {\n        return\n    }\n\n    var str strings. uilder\n    str. riteString("Policy: ")\n    for k, v := range policy {\n        str.WriteString(fmt. printf("%s : %v\\n", k, v))\n    }\n\n    log.Println(str. tring())\n}\n\nfunc (l *DefaultLogger) LogRole(roles []string) {\n    if !l. {\n        return\n    }\n\n    log.Println("R\xf4les : ", r\xf4les)\n}\n\n')),(0,a.kt)("h2",{parentName:"admonition",id:"gestion-des-erreurs"},"Gestion des erreurs"),(0,a.kt)("p",{parentName:"admonition"},"Une erreur ou une panique peut se produire lorsque vous utilisez Casbin pour des raisons comme :"),(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Syntaxe invalide dans le fichier mod\xe8le (.conf)."),(0,a.kt)("li",{parentName:"ol"},"Syntaxe invalide dans le fichier de r\xe9gulation (.csv)."),(0,a.kt)("li",{parentName:"ol"},"Erreur personnalis\xe9e des adaptateurs de stockage, par exemple MySQL ne parvient pas \xe0 se connecter."),(0,a.kt)("li",{parentName:"ol"},"Casbin's bug.")),(0,a.kt)("p",{parentName:"admonition"},"Il y a cinq fonctions principales dont vous devrez peut-\xeatre vous soucier pour les erreurs ou la panique :"),(0,a.kt)("table",{parentName:"admonition"},(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Fonction"),(0,a.kt)("th",{parentName:"tr",align:null},"Comportement en cas d'erreur"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#NewEnforcer"},"NewEnforcer()")),(0,a.kt)("td",{parentName:"tr",align:null},"Erreur de retour")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.LoadModel"},"format@@0 LoadModel()")),(0,a.kt)("td",{parentName:"tr",align:null},"Erreur de retour")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.LoadPolicy"},"format@@0 LoadPolicy()")),(0,a.kt)("td",{parentName:"tr",align:null},"Erreur de retour")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.SavePolicy"},"EnregistrerPolicy()")),(0,a.kt)("td",{parentName:"tr",align:null},"Erreur de retour")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.Enforce"},"Forcer()")),(0,a.kt)("td",{parentName:"tr",align:null},"Return error"))))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()")," appelle ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadModel()")," et ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadPolicy()")," \xe0 l'int\xe9rieur. Donc, vous n'avez pas \xe0 appeler les deux derniers appels en utilisant la fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),"."),(0,a.kt)("p",null,":::"),(0,a.kt)("h2",{id:"activer--d\xe9sactiver"},"Activer & d\xe9sactiver"),(0,a.kt)("p",null,"Le responsable peut \xeatre d\xe9sactiv\xe9 via la fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableEnforce()"),". Quand elle est d\xe9sactiv\xe9e, ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.Enforce()")," retournera toujours ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". D'autres op\xe9rations telles que l'ajout ou la suppression de la politique ne sont pas affect\xe9es. Voici un exemple :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n\n// retournera false.\n// Par d\xe9faut, le responsable est activ\xe9.\ne.Enforce("non-authorized-user", "data1", "read")\n\n// D\xe9sactive le responsable \xe0 l\'ex\xe9cution.\ne.EnableEnforce(false)\n\n// Renvoie vrai pour toute requ\xeate.\ne.Enforce("non-authorized-user", "data1", "read")\n\n// Activez le responsable \xe0 nouveau.\ne.EnableEnforce(true)\n\n// retournera false.\ne.Enforce("non-autorised-user", "data1", "read")\n')))}m.isMDXComponent=!0}}]);