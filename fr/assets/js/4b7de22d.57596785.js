"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4705],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,m=u["".concat(s,".").concat(d)]||u[d]||f[d]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const o={id:"effector",title:"Effet",description:"Effector is the interface for Casbin effectors",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},a=void 0,l={unversionedId:"effector",id:"effector",title:"Effet",description:"Effector is the interface for Casbin effectors",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/Effector.mdx",sourceDirName:".",slug:"/effector",permalink:"/fr/docs/effector",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/fr",tags:[],version:"current",frontMatter:{id:"effector",title:"Effet",description:"Effector is the interface for Casbin effectors",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},sidebar:"docs",previous:{title:"Syntaxe pour les mod\xe8les",permalink:"/fr/docs/syntax-for-models"},next:{title:"Fonction",permalink:"/fr/docs/function"}},s={},p=[{value:"<code>MergeEffects()</code>",id:"mergeeffects",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},f=c("Tabs"),u=c("TabItem"),d={toc:p};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"L'effet est le r\xe9sultat d'une r\xe8gle politique. Et l' ",(0,i.kt)("inlineCode",{parentName:"p"},"Effet")," est l'interface pour les effets Casbin."),(0,i.kt)("h3",{id:"mergeeffects"},(0,i.kt)("inlineCode",{parentName:"h3"},"MergeEffects()")),(0,i.kt)("p",null,"FusionEffets fusionne tous les r\xe9sultats correspondants recueillis par le d\xe9tenteur en une seule d\xe9cision."),(0,i.kt)("p",null,"Par exemple :"),(0,i.kt)(f,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"Effect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,i.kt)("p",null,"Dans cet exemple :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"L'effet")," est la d\xe9cision finale en cours de fusion par cette fonction(Initialis\xe9e en tant que ",(0,i.kt)("inlineCode",{parentName:"li"},"ind\xe9termin\xe9e"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"explainIndex")," est l'index de ",(0,i.kt)("inlineCode",{parentName:"li"},"eft")," qui est ",(0,i.kt)("inlineCode",{parentName:"li"},"Autoriser")," ou ",(0,i.kt)("inlineCode",{parentName:"li"},"Refuser"),".(Initialis\xe9 comme ",(0,i.kt)("inlineCode",{parentName:"li"},"-1"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"err")," est utilis\xe9 pour v\xe9rifier si l'effet est pris en charge."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"expr")," est la politique d'effets stock\xe9e sous la forme d'une cha\xeene ``"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"effects")," is the array of the Effect which can be ",(0,i.kt)("inlineCode",{parentName:"li"},"Allow"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"Indeterminate")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"Deny")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"correspond \xe0")," la table montrant que si le r\xe9sultat correspond \xe0 la politique."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"policyIndex")," est l'indice de politique dans le mod\u010dle."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"policyLength")," est la longueur de la politique.")),(0,i.kt)("p",null,"Le code ci-dessus illustre comment passer les param\xe8tres \xe0 la fonction ",(0,i.kt)("inlineCode",{parentName:"p"},"MergeEffects")," et la fonction traitera les effets et correspondances bas\xe9s sur ",(0,i.kt)("inlineCode",{parentName:"p"},"expr")),(0,i.kt)("p",null,"Pour d\xe9ployer un Effet, nous pouvons faire ceci :"),(0,i.kt)(f,{groupId:"langs",mdxType:"Tabs"},(0,i.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"var e Effector\nEffect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,i.kt)("p",null,"L'id\xe9e de base des ",(0,i.kt)("inlineCode",{parentName:"p"},"MergeEffects")," indique que si l' ",(0,i.kt)("inlineCode",{parentName:"p"},"expr")," peut correspondre aux r\xe9sultats ce qui signifie que le ",(0,i.kt)("inlineCode",{parentName:"p"},"p_eft")," est ",(0,i.kt)("inlineCode",{parentName:"p"},"autoriser"),", alors nous pouvons fusionner tous les effets enfin. Et s'il n'y a pas de r\xe8gles de refus correspondantes, alors nous le permettons."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Si ",(0,i.kt)("inlineCode",{parentName:"p"},"expr")," ne peut pas correspondre \xe0 ",(0,i.kt)("inlineCode",{parentName:"p"},'"priority(p_eft) || nier"')," et aussi ",(0,i.kt)("inlineCode",{parentName:"p"},"l'index de police")," est plus court que ",(0,i.kt)("inlineCode",{parentName:"p"},"policyLength-1"),", il va ",(0,i.kt)("strong",{parentName:"p"},"court-circuit")," quelques effets au milieu.")))}m.isMDXComponent=!0}}]);