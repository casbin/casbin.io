"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5777],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),v=o,m=d["".concat(u,".").concat(v)]||d[v]||p[v]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={id:"envoy",title:"Authorization of Service Mesh through Envoy",description:"Autorisation de Service Mesh via Envoy",keywords:["Envoy","Envoy-authz","Istio"],authors:["ashish493"]},a=void 0,s={unversionedId:"envoy",id:"envoy",title:"Authorization of Service Mesh through Envoy",description:"Autorisation de Service Mesh via Envoy",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/EnvoyAuthz.mdx",sourceDirName:".",slug:"/envoy",permalink:"/fr/docs/envoy",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/EnvoyAuthz.mdx",tags:[],version:"current",frontMatter:{id:"envoy",title:"Authorization of Service Mesh through Envoy",description:"Autorisation de Service Mesh via Envoy",keywords:["Envoy","Envoy-authz","Istio"],authors:["ashish493"]},sidebar:"docs",previous:{title:"Admission Webhook for K8s",permalink:"/fr/docs/k8s-gatekeeper"},next:{title:"Management",permalink:"/fr/docs/category/management"}},u={},l=[{value:"Exigences",id:"exigences",level:2},{value:"Fonctionnement du Middleware",id:"fonctionnement-du-middleware",level:2},{value:"Utilisation",id:"utilisation",level:2},{value:"Int\xe9gration avec Istio",id:"int\xe9gration-avec-istio",level:2}],c={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/casbin/envoy-authz"},"Envoy-authz")," est un middleware pour Envoy qui effectue une autorisation RBAC & ABAC externe via casbin. Ce middleware utilise ",(0,o.kt)("a",{parentName:"p",href:"https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/security/ext_authz_filter.html"},"l'API d'autorisation externe d'Envoy")," via un serveur gRPC. Ce proxy peut \xeatre d\xe9ploy\xe9 sur n'importe quel type de service mesh bas\xe9 sur Envoy, comme Istio."),(0,o.kt)("h2",{id:"exigences"},"Exigences"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Envoy 1.17+"),(0,o.kt)("li",{parentName:"ul"},"Istio ou tout autre type de service mesh"),(0,o.kt)("li",{parentName:"ul"},"d\xe9pendances grpc")),(0,o.kt)("p",null,"Les d\xe9pendances sont g\xe9r\xe9es en utilisant ",(0,o.kt)("inlineCode",{parentName:"p"},"go.mod"),"."),(0,o.kt)("h2",{id:"fonctionnement-du-middleware"},"Fonctionnement du Middleware"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Un client fait une requ\xeate HTTP."),(0,o.kt)("li",{parentName:"ul"},"Le proxy Envoy envoie la requ\xeate au serveur gRPC."),(0,o.kt)("li",{parentName:"ul"},"Le serveur gRPC autorise la requ\xeate en fonction des politiques casbin."),(0,o.kt)("li",{parentName:"ul"},"Si elle est autoris\xe9e, la requ\xeate est transmise ; sinon, elle est refus\xe9e.")),(0,o.kt)("p",null,"Le serveur gRPC est bas\xe9 sur le tampon de protocole de ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/envoyproxy/envoy/blob/master/api/envoy/service/auth/v2alpha/external_auth.proto"},"external","_","auth.proto")," dans Envoy."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-protobuf"},"// A generic interface for performing authorization checks on incoming\n// requests to a networked service.\nservice Authorization {\n  // Performs an authorization check based on the attributes associated with the\n  // incoming request and returns a status of `OK` or not `OK`.\n  rpc Check(v2.CheckRequest) returns (v2.CheckResponse);\n}\n")),(0,o.kt)("p",null,"\xc0 partir du fichier proto ci-dessus, nous devons utiliser le service ",(0,o.kt)("inlineCode",{parentName:"p"},"Check()")," dans le serveur d'autorisation."),(0,o.kt)("h2",{id:"utilisation"},"Utilisation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"D\xe9finissez les politiques Casbin dans les fichiers de configuration en suivant ce ",(0,o.kt)("a",{parentName:"li",href:"/docs/how-it-works"},"guide"),".")),(0,o.kt)("p",null,"Vous pouvez v\xe9rifier/tester vos politiques en utilisant le ",(0,o.kt)("a",{parentName:"p",href:"/editor"},"casbin-editor")," en ligne."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"D\xe9marrez le serveur d'authentification en ex\xe9cutant :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go build .\n./authz\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Chargez la configuration d'Envoy :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"envoy -c authz.yaml -l info\n")),(0,o.kt)("p",null,"Une fois qu'Envoy d\xe9marre, il interceptera les demandes pour le processus d'autorisation."),(0,o.kt)("h2",{id:"int\xe9gration-avec-istio"},"Int\xe9gration avec Istio"),(0,o.kt)("p",null,"Pour faire fonctionner ce middleware, vous devez envoyer des en-t\xeates personnalis\xe9s contenant des noms d'utilisateur dans le jeton JWT ou les en-t\xeates. Vous pouvez vous r\xe9f\xe9rer \xe0 la ",(0,o.kt)("a",{parentName:"p",href:"https://istio.io/v1.4/docs/tasks/policy-enforcement/control-headers/"},"documentation officielle d'Istio")," pour plus d'informations sur la modification des ",(0,o.kt)("inlineCode",{parentName:"p"},"En-t\xeates de requ\xeate"),"."))}p.isMDXComponent=!0}}]);