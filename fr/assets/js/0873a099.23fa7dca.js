"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=s(n),c=a,m=g["".concat(u,".").concat(c)]||g[c]||d[c]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=g;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={id:"log-error",title:"Log & Error Handling",description:"Journalisation et gestion des erreurs dans Casbin",keywords:["log","error","error handling"],authors:["hsluoyz"]},l=void 0,i={unversionedId:"log-error",id:"log-error",title:"Log & Error Handling",description:"Journalisation et gestion des erreurs dans Casbin",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/LogError.mdx",sourceDirName:".",slug:"/log-error",permalink:"/fr/docs/log-error",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/LogError.mdx",tags:[],version:"current",frontMatter:{id:"log-error",title:"Log & Error Handling",description:"Journalisation et gestion des erreurs dans Casbin",keywords:["log","error","error handling"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Casbin Service",permalink:"/fr/docs/service"},next:{title:"Frontend Usage",permalink:"/fr/docs/frontend"}},u={},s=[{value:"Journalisation",id:"journalisation",level:2},{value:"Utilisez diff\xe9rents journaux pour diff\xe9rents ex\xe9cuteurs",id:"utilisez-diff\xe9rents-journaux-pour-diff\xe9rents-ex\xe9cuteurs",level:3},{value:"Journaux pris en charge",id:"journaux-pris-en-charge",level:4},{value:"Comment \xe9crire un logger",id:"comment-\xe9crire-un-logger",level:4},{value:"Gestion des erreurs",id:"gestion-des-erreurs",level:2},{value:"Activer et d\xe9sactiver",id:"activer-et-d\xe9sactiver",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=p("Tabs"),g=p("TabItem"),c={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"journalisation"},"Journalisation"),(0,a.kt)("p",null,"Casbin utilise le ",(0,a.kt)("inlineCode",{parentName:"p"},"log")," int\xe9gr\xe9 pour imprimer les journaux sur la console par d\xe9faut, comme :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"2017/07/15 19:43:56 [Request: alice, data1, read ---\x3e true]\n")),(0,a.kt)("p",null,"La journalisation n'est pas activ\xe9e par d\xe9faut. Vous pouvez l'activer via ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableLog()")," ou le dernier param\xe8tre de ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Nous prenons d\xe9j\xe0 en charge la journalisation du mod\xe8le, de la demande d'ex\xe9cution, du r\xf4le et de la politique en Golang. Vous pouvez d\xe9finir votre propre journal pour la journalisation de Casbin.\nSi vous utilisez Python, pycasbin utilise le m\xe9canisme de journalisation Python par d\xe9faut. Le package pycasbin fait un appel \xe0 ",(0,a.kt)("inlineCode",{parentName:"p"},"logging.getLogger()")," pour d\xe9finir le journal. Aucune configuration de journalisation sp\xe9ciale n'est n\xe9cessaire autre que l'initialisation du journal dans l'application parente. Si aucune journalisation n'est initialis\xe9e dans l'application parente, vous ne verrez aucun message de journal de pycasbin. En m\xeame temps, lorsque vous activez le journal dans pycasbin, il utilisera la ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/pycasbin/blob/c33cabfa0ac65cd09cf812a65e71794d64cb5132/casbin/util/log.py#L6C1-L6C1"},"configuration de journal par d\xe9faut"),". Pour les autres extensions pycasbin, vous pouvez vous r\xe9f\xe9rer \xe0 la ",(0,a.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/4.2/topics/logging/"},"documentation sur la journalisation Django")," si vous \xeates un utilisateur Django. Pour les autres utilisateurs Python, vous devriez vous r\xe9f\xe9rer \xe0 la ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/logging.config.html"},"documentation sur la journalisation Python")," pour configurer le journal.")),(0,a.kt)("h3",{id:"utilisez-diff\xe9rents-journaux-pour-diff\xe9rents-ex\xe9cuteurs"},"Utilisez diff\xe9rents journaux pour diff\xe9rents ex\xe9cuteurs"),(0,a.kt)("p",null,"Chaque ex\xe9cuteur peut avoir son propre journal pour enregistrer des informations, et il peut \xeatre modifi\xe9 \xe0 l'ex\xe9cution."),(0,a.kt)("p",null,"Et vous pouvez utiliser un journal appropri\xe9 via le dernier param\xe8tre de ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),". Si vous utilisez cette m\xe9thode pour initialiser votre ex\xe9cuteur, vous n'avez pas besoin d'utiliser le param\xe8tre activ\xe9 car la priorit\xe9 du champ activ\xe9 dans le journal est plus \xe9lev\xe9e."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// Set a default logger as enforcer e1's logger.\n// This operation can also be seen as changing the logger of e1 at runtime.\ne1.SetLogger(&Log.DefaultLogger{})\n\n// Set another logger as enforcer e2's logger.\ne2.SetLogger(&YouOwnLogger)\n\n// Set your logger when initializing enforcer e3.\ne3, _ := casbin.NewEnforcer(\"examples/rbac_model.conf\", a, logger)\n")),(0,a.kt)("h4",{id:"journaux-pris-en-charge"},"Journaux pris en charge"),(0,a.kt)("p",null,"Nous fournissons quelques journaux pour vous aider \xe0 enregistrer des informations."),(0,a.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,a.kt)(g,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Journal"),(0,a.kt)("th",{parentName:"tr",align:null},"Auteur"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/log/default_logger.go"},"Journal par d\xe9faut (int\xe9gr\xe9)")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Le journal par d\xe9faut utilisant le log de golang.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/zap-logger"},"Journal Zap")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Utilisation de ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/uber-go/zap"},"zap"),", fournit un journal encod\xe9 en json et vous pouvez personnaliser davantage avec votre propre zap-logger."))))),(0,a.kt)(g,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Logger"),(0,a.kt)("th",{parentName:"tr",align:null},"Auteur"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/php-casbin/psr3-bridge"},"psr3-bridge logger")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Fournit un pont conforme \xe0 ",(0,a.kt)("a",{parentName:"td",href:"https://www.php-fig.org/psr/psr-3/"},"PSR-3"),".")))))),(0,a.kt)("h4",{id:"comment-\xe9crire-un-logger"},"Comment \xe9crire un logger"),(0,a.kt)("p",null,"Votre logger devrait impl\xe9menter l'interface ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/log/logger.go#L20"},"Logger"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"M\xe9thode"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"EnableLog()"),(0,a.kt)("td",{parentName:"tr",align:null},"obligatoire"),(0,a.kt)("td",{parentName:"tr",align:null},"Contr\xf4lez si vous voulez imprimer le message.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"IsEnabled()"),(0,a.kt)("td",{parentName:"tr",align:null},"obligatoire"),(0,a.kt)("td",{parentName:"tr",align:null},"Affiche le statut activ\xe9 du logger actuel.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogModel()"),(0,a.kt)("td",{parentName:"tr",align:null},"obligatoire"),(0,a.kt)("td",{parentName:"tr",align:null},"Journalise les informations li\xe9es au mod\xe8le.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogEnforce()"),(0,a.kt)("td",{parentName:"tr",align:null},"obligatoire"),(0,a.kt)("td",{parentName:"tr",align:null},"Journalise les informations li\xe9es \xe0 l'application.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogRole()"),(0,a.kt)("td",{parentName:"tr",align:null},"obligatoire"),(0,a.kt)("td",{parentName:"tr",align:null},"Journalise les informations li\xe9es au r\xf4le.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogPolicy()"),(0,a.kt)("td",{parentName:"tr",align:null},"obligatoire"),(0,a.kt)("td",{parentName:"tr",align:null},"Journalise les informations li\xe9es \xe0 la politique.")))),(0,a.kt)("p",null,"Vous pouvez passer votre ",(0,a.kt)("inlineCode",{parentName:"p"},"logger")," personnalis\xe9 \xe0 ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.SetLogger()"),"."),(0,a.kt)("p",null,"Voici un exemple de comment personnaliser un logger pour Golang :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "fmt"\n    "log"\n    "strings"\n)\n\n// DefaultLogger is the implementation for a Logger using golang log.\ntype DefaultLogger struct {\n    enabled bool\n}\n\nfunc (l *DefaultLogger) EnableLog(enable bool) {\n    l.enabled = enable\n}\n\nfunc (l *DefaultLogger) IsEnabled() bool {\n    return l.enabled\n}\n\nfunc (l *DefaultLogger) LogModel(model [][]string) {\n    if !l.enabled {\n        return\n    }\n    var str strings.Builder\n    str.WriteString("Model: ")\n    for _, v := range model {\n        str.WriteString(fmt.Sprintf("%v\\n", v))\n    }\n\n    log.Println(str.String())\n}\n\nfunc (l *DefaultLogger) LogEnforce(matcher string, request []interface{}, result bool, explains [][]string) {\n    if !l.enabled {\n        return\n    }\n\n    var reqStr strings.Builder\n    reqStr.WriteString("Request: ")\n    for i, rval := range request {\n        if i != len(request)-1 {\n            reqStr.WriteString(fmt.Sprintf("%v, ", rval))\n        } else {\n            reqStr.WriteString(fmt.Sprintf("%v", rval))\n        }\n    }\n    reqStr.WriteString(fmt.Sprintf(" ---\x3e %t\\n", result))\n\n    reqStr.WriteString("Hit Policy: ")\n    for i, pval := range explains {\n        if i != len(explains)-1 {\n            reqStr.WriteString(fmt.Sprintf("%v, ", pval))\n        } else {\n            reqStr.WriteString(fmt.Sprintf("%v \\n", pval))\n        }\n    }\n\n    log.Println(reqStr.String())\n}\n\nfunc (l *DefaultLogger) LogPolicy(policy map[string][][]string) {\n    if !l.enabled {\n        return\n    }\n\n    var str strings.Builder\n    str.WriteString("Policy: ")\n    for k, v := range policy {\n        str.WriteString(fmt.Sprintf("%s : %v\\n", k, v))\n    }\n\n    log.Println(str.String())\n}\n\nfunc (l *DefaultLogger) LogRole(roles []string) {\n    if !l.enabled {\n        return\n    }\n\n    log.Println("Roles: ", roles)\n}\n')),(0,a.kt)("h2",{id:"gestion-des-erreurs"},"Gestion des erreurs"),(0,a.kt)("p",null,"Des erreurs ou des paniques peuvent survenir lorsque vous utilisez Casbin pour des raisons telles que :"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Syntaxe invalide dans le fichier de mod\xe8le (.conf)."),(0,a.kt)("li",{parentName:"ol"},"Syntaxe invalide dans le fichier de politique (.csv)."),(0,a.kt)("li",{parentName:"ol"},"Erreurs personnalis\xe9es provenant des adaptateurs de stockage, par exemple, MySQL \xe9choue \xe0 se connecter."),(0,a.kt)("li",{parentName:"ol"},"Bug de Casbin.")),(0,a.kt)("p",null,"Il y a cinq fonctions principales dont vous devez \xeatre conscient pour les erreurs ou les paniques :"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Fonction"),(0,a.kt)("th",{parentName:"tr",align:null},"Comportement en cas d'erreur"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#NewEnforcer"},"NewEnforcer()")),(0,a.kt)("td",{parentName:"tr",align:null},"Renvoie une erreur")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.LoadModel"},"LoadModel()")),(0,a.kt)("td",{parentName:"tr",align:null},"Renvoie une erreur")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.LoadPolicy"},"LoadPolicy()")),(0,a.kt)("td",{parentName:"tr",align:null},"Renvoie une erreur")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.SavePolicy"},"SavePolicy()")),(0,a.kt)("td",{parentName:"tr",align:null},"Renvoie une erreur")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.Enforce"},"Enforce()")),(0,a.kt)("td",{parentName:"tr",align:null},"Renvoie une erreur")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()")," appelle ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadModel()")," et ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadPolicy()")," en interne. Donc, vous n'avez pas \xe0 appeler ces deux derniers lors de l'utilisation de ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),".")),(0,a.kt)("h2",{id:"activer-et-d\xe9sactiver"},"Activer et d\xe9sactiver"),(0,a.kt)("p",null,"L'ex\xe9cuteur peut \xeatre d\xe9sactiv\xe9 via la fonction ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableEnforce()"),". Lorsqu'il est d\xe9sactiv\xe9, ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.Enforce()")," renverra toujours ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". D'autres op\xe9rations comme l'ajout ou la suppression de politiques ne sont pas affect\xe9es. Voici un exemple :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n\n// Will return false.\n// By default, the enforcer is enabled.\ne.Enforce("non-authorized-user", "data1", "read")\n\n// Disable the enforcer at runtime.\ne.EnableEnforce(false)\n\n// Will return true for any request.\ne.Enforce("non-authorized-user", "data1", "read")\n\n// Enable the enforcer again.\ne.EnableEnforce(true)\n\n// Will return false.\ne.Enforce("non-authorized-user", "data1", "read")\n')))}m.isMDXComponent=!0}}]);