"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4651],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=i,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(y,o(o({ref:t},s),{},{components:r})):n.createElement(y,o({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6543:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={id:"priority-model",title:"\u4f18\u5148\u7ea7\u6a21\u578b",description:"Casbin's Priority Model for managing policies with different priorities",keywords:["\u4f18\u5148\u7ea7\u6a21\u578b"],authors:["hsluoyz"]},o=void 0,l={unversionedId:"priority-model",id:"priority-model",title:"\u4f18\u5148\u7ea7\u6a21\u578b",description:"Casbin's Priority Model for managing policies with different priorities",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/PriorityModel.mdx",sourceDirName:".",slug:"/priority-model",permalink:"/zh/docs/priority-model",draft:!1,editUrl:"https://crowdin.com/project/casbin-website/zh-CN",tags:[],version:"current",frontMatter:{id:"priority-model",title:"\u4f18\u5148\u7ea7\u6a21\u578b",description:"Casbin's Priority Model for managing policies with different priorities",keywords:["\u4f18\u5148\u7ea7\u6a21\u578b"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"ABAC",permalink:"/zh/docs/abac"},next:{title:"\u8d85\u7ea7\u7ba1\u7406\u5458",permalink:"/zh/docs/superadmin"}},p={},c=[{value:"Load Policy with Implicit Priority",id:"load-policy-with-implicit-priority",level:2},{value:"Load Policy with Explicit Priority",id:"load-policy-with-explicit-priority",level:2},{value:"\u57fa\u4e8e\u89d2\u8272\u548c\u7528\u6237\u5c42\u6b21\u7ed3\u6784\u4ee5\u4f18\u5148\u7ea7\u52a0\u8f7d\u7b56\u7565",id:"\u57fa\u4e8e\u89d2\u8272\u548c\u7528\u6237\u5c42\u6b21\u7ed3\u6784\u4ee5\u4f18\u5148\u7ea7\u52a0\u8f7d\u7b56\u7565",level:2}],s={toc:c};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Casbin supports loading policies with priority."),(0,i.kt)("h2",{id:"load-policy-with-implicit-priority"},"Load Policy with Implicit Priority"),(0,i.kt)("p",null,"It's quite simple: the order determines the priority; policies that appear earlier have higher priority."),(0,i.kt)("p",null,"model.conf\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = priority(p.eft) || deny\n")),(0,i.kt)("h2",{id:"load-policy-with-explicit-priority"},"Load Policy with Explicit Priority"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u53e6\u89c1: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/550"},"casbin#550"))),(0,i.kt)("p",null,"A smaller priority value indicates a higher priority. If there's a non-numerical character in the priority, it will be placed last instead of throwing an error."),(0,i.kt)("admonition",{title:"Token\u540d\u79f0\u534f\u8bae",type:"info"},(0,i.kt)("p",{parentName:"admonition"},'The conventionally used priority token name in the policy definition is "priority". To use a custom one, you need to invoke ',(0,i.kt)("inlineCode",{parentName:"p"},"e.SetFieldIndex()")," and reload the policies (see the full example on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/pull/1044"},"TestCustomizedFieldIndex"),")."),(0,i.kt)("p",{parentName:"admonition"},"model.conf\uff1a"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_definition]\np = customized_priority, sub, obj, act, eft\n")),(0,i.kt)("p",{parentName:"admonition"},"Golang\u4ee3\u7801\u793a\u4f8b\uff1a"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-go"},'e, _ := NewEnforcer("./example/priority_model_explicit_customized.conf",\n                    "./example/priority_policy_explicit_customized.csv")\n// Due to the customized priority token, the enforcer fails to handle the priority.\nok, err := e.Enforce("bob", "data2", "read") // the result will be `true, nil`\n// Set PriorityIndex and reload\ne.SetFieldIndex("p", constant.PriorityIndex, 0)\nerr := e.LoadPolicy()\nif err != nil {\n    log.Fatalf("LoadPolicy: %v", err)\n}\nok, err := e.Enforce("bob", "data2", "read") // the result will be `false, nil`\n'))),(0,i.kt)("p",null,"Currently, explicit priority only supports ",(0,i.kt)("inlineCode",{parentName:"p"},"AddPolicy")," & ",(0,i.kt)("inlineCode",{parentName:"p"},"AddPolicies"),". If ",(0,i.kt)("inlineCode",{parentName:"p"},"UpdatePolicy")," has been called, you shouldn't change the priority attribute."),(0,i.kt)("p",null,"model.conf\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = priority, sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,i.kt)("p",null,"policy.csv"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, 10, data1_deny_group, data1, read, deny\np, 10, data1_deny_group, data1, write, deny\np, 10, data2_allow_group, data2, read, allow\np, 10, data2_allow_group, data2, write, allow\n\n\np, 1, alice, data1, write, allow\np, 1, alice, data1, read, allow\np, 1, bob, data2, read, deny\n\ng, bob, data2_allow_group\ng, alice, data1_deny_group\n")),(0,i.kt)("p",null,"\u8bf7\u6c42\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"alice, data1, write --\x3e true // because `p, 1, alice, data1, write, allow` has the highest priority\nbob, data2, read --\x3e false\nbob, data2, write --\x3e true // because bob has the role of `data2_allow_group` which has the right to write data2, and there's no deny policy with higher priority \n")),(0,i.kt)("h2",{id:"\u57fa\u4e8e\u89d2\u8272\u548c\u7528\u6237\u5c42\u6b21\u7ed3\u6784\u4ee5\u4f18\u5148\u7ea7\u52a0\u8f7d\u7b56\u7565"},"\u57fa\u4e8e\u89d2\u8272\u548c\u7528\u6237\u5c42\u6b21\u7ed3\u6784\u4ee5\u4f18\u5148\u7ea7\u52a0\u8f7d\u7b56\u7565"),(0,i.kt)("p",null,"\u89d2\u8272\u548c\u7528\u6237\u7684\u7ee7\u627f\u7ed3\u6784\u53ea\u80fd\u662f\u591a\u68f5\u6811\uff0c\u800c\u4e0d\u662f\u56fe\u3002 If a user has multiple roles, you have to make sure the user has the same level in different trees. If two roles have the same level, the policy (associated with the role) that appeared earlier has higher priority. For more details, also see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/pull/833"},"casbin#833")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/831"},"casbin#831"),"."),(0,i.kt)("p",null,"model.conf\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = subjectPriority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act \n")),(0,i.kt)("p",null,"policy.csv"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"p, root, data1, read, deny\np, admin, data1, read, deny\n\np, editor, data1, read, deny\np, subscriber, data1, read, deny\n\np, jane, data1, read, allow\np, alice, data1, read, allow\n\ng, admin, root\n\ng, editor, admin\ng, subscriber, admin\n\ng, jane, editor\ng, alice, subscriber \n")),(0,i.kt)("p",null,"\u8bf7\u6c42\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"jane, data1, read --\x3e true // because jane is at the bottom, her priority is higher than that of editor, admin, and root\nalice, data1, read --\x3e true\n")),(0,i.kt)("p",null," The role hierarchy looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u89d2\u8272\uff1a\u6839\n  \u2514\u2500 \u89d2\u8272\uff1a\u7ba1\u7406\u5458\n     \u251c\u2500 \u89d2\u8272\u7f16\u8f91\u5668\n     \u2502 \u2514\u2500 \u7528\u6237\uff1a\u7b80\n     \u2502\n     \u2514\u2500 \u89d2\u8272\uff1a\u8ba2\u9605\u8005\n        \u2514\u2500 \u7528\u6237\uff1a\u7231\u4e3d\u4e1d\n")),(0,i.kt)("p",null,"The priority automatically looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"role: root # \u81ea\u52a8\u4f18\u5148\u7ea7: 30\n --role: admin# \u81ea\u52a8\u4f18\u5148\u7ea7: 20\n     --role: editor # \u81ea\u52a8\u4f18\u5148\u7ea7: 10\n     --role: subscriber # \u81ea\u52a8\u4f18\u5148\u7ea7: 10\n")))}d.isMDXComponent=!0}}]);