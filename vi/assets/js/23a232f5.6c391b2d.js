"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[6186],{7860:(t,e,a)=>{a.d(e,{B:()=>r,Z:()=>p});var i=a(7462),o=a(7294),n=a(5576);const r=t=>t.startsWith("http://")||t.startsWith("https://"),s=t=>{let{children:e,href:a,...n}=t;return r(a)?o.createElement("a",(0,i.Z)({href:a,target:"_blank",rel:"noopener noreferrer"},n),e):o.createElement("a",(0,i.Z)({href:a},n),e)},p=t=>{let{children:e}=t;return o.createElement(n.ZP,{options:{overrides:{a:{component:s}}}},e)}},8132:(t,e,a)=>{a.d(e,{b:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[EF Adapter](https://github.com/casbin-net/EF-Adapter)",type:"ORM",author:"Casbin",autoSave:"\u274c",description:"MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Oracle, DB2, etc. are supported by [Entity Framework 6](https://docs.microsoft.com/en-us/ef/ef6/)",image:"/img/ecosystem/SQL.png"},{title:"[EFCore Adapter](https://github.com/casbin-net/EFCore-Adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Oracle, DB2, etc. are supported by [Entity Framework Core](https://docs.microsoft.com/en-us/ef/core/)",image:"/img/ecosystem/SQL.png"},{title:"[Linq2DB Adapter](https://github.com/Tirael/Linq2DB-Adapter)",type:"ORM",author:"[@Tirael](https://github.com/Tirael)",autoSave:"\u2705",description:"[MySQL, PostgreSQL, SQLite, Microsoft SQL Server, Oracle, Access, Firebird, Sybase, etc.](https://github.com/linq2db/linq2db/blob/master/Tests/Base/TestProvName.cs) are supported by [linq2db](https://github.com/linq2db/linq2db)",image:"/img/ecosystem/SQL.png"},{title:"[Azure Cosmos DB Adapter](https://github.com/sagarkhandelwal/Casbin-Using-Cosmos)",type:"Cloud",author:"[@sagarkhandelwal](https://github.com/sagarkhandelwal)",autoSave:"\u2705",description:"For [Microsoft Azure Cosmos DB](https://docs.microsoft.com/en-us/azure/cosmos-db/introduction)",image:"/img/ecosystem/cosmosDB.png"}].map((t=>({...t,tags:["dotNET","Adapter"]})))},2575:(t,e,a)=>{a.d(e,{I:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:null},{title:"[Filtered File Adapter (built-in)](/docs/policy-subset-loading)",type:"File",author:"[@faceless-saint](https://github.com/faceless-saint)",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files with policy subset loading support",image:null},{title:"[SQL Adapter](https://github.com/Blank-Xu/sql-adapter)",type:"SQL",author:"[@Blank-Xu](https://github.com/Blank-Xu)",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQL Server, SQLite3 are supported in `master` branch and Oracle is supported in `oracle` branch by `database/sql`",image:"/img/ecosystem/SQL.png"},{title:"[Xorm Adapter](https://github.com/casbin/xorm-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, TiDB, SQLite, SQL Server, Oracle are supported by [Xorm](https://github.com/go-xorm/xorm/)",image:"/img/ecosystem/SQL.png"},{title:"[GORM Adapter](https://github.com/casbin/gorm-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, Sqlite3, SQL Server are supported by [GORM](https://github.com/go-gorm/gorm)",image:"/img/ecosystem/SQL.png"},{title:"[GORM Adapter Ex](https://github.com/casbin/gorm-adapter-ex)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, Sqlite3, SQL Server are supported by [GORM](https://github.com/go-gorm/gorm)",image:"/img/ecosystem/SQL.png"},{title:"[Ent Adapter](https://github.com/casbin/ent-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, MariaDB, PostgreSQL, SQLite, Gremlin-based graph databases are supported by [ent ORM](https://entgo.io/)",image:"/img/ecosystem/SQL.png"},{title:"[Beego ORM Adapter](https://github.com/casbin/beego-orm-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, Sqlite3 are supported by [Beego ORM](https://beego.wiki/docs/mvc/model/overview/)",image:"/img/ecosystem/SQL.png"},{title:"[SQLX Adapter](https://github.com/memwey/casbin-sqlx-adapter)",type:"ORM",author:"[@memwey](https://github.com/memwey)",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Oracle are supported by [SQLX](https://github.com/jmoiron/sqlx)",image:"/img/ecosystem/SQL.png"},{title:"[Sqlx Adapter](https://github.com/Blank-Xu/sqlx-adapter)",type:"ORM",author:"[@Blank-Xu](https://github.com/Blank-Xu)",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQL Server, SQLite3 are supported in `master` branch and Oracle is supported in `oracle` branch by [sqlx](https://github.com/jmoiron/sqlx)",image:"/img/ecosystem/SQL.png"},{title:"[GF ORM Adapter](https://github.com/vance-liu/gdb-adapter)",type:"ORM",author:"[@vance-liu](https://github.com/vance-liu)",autoSave:"\u2705",description:"MySQL, SQLite, PostgreSQL, Oracle, SQL Server are supported by [GoFrame ORM](https://github.com/gogf/gf/tree/master/contrib/drivers)",image:"/img/ecosystem/SQL.png"},{title:"[GoFrame ORM Adapter](https://github.com/kotlin2018/adapter)",type:"ORM",author:"[@kotlin2018](https://github.com/kotlin2018)",autoSave:"\u2705",description:"MySQL, SQLite, PostgreSQL, Oracle, SQL Server are supported by [GoFrame ORM](https://github.com/gogf/gf/tree/master/contrib/drivers)",image:"/img/ecosystem/SQL.png"},{title:"[gf-adapter](https://github.com/zcyc/gf-adapter)",type:"ORM",author:"[@zcyc](https://github.com/zcyc)",autoSave:"\u2705",description:"MySQL, SQLite, PostgreSQL, Oracle, SQL Server are supported by [GoFrame ORM](https://github.com/gogf/gf/tree/master/contrib/drivers)",image:null},{title:"[Gdb Adapter](https://github.com/jxo-me/gdb-adapter)",type:"ORM",author:"[@jxo-me](https://github.com/jxo-me)",autoSave:"\u2705",description:"MySQL, SQLite, PostgreSQL, Oracle, SQL Server are supported by [GoFrame ORM](https://github.com/gogf/gf/tree/master/contrib/drivers)",image:"/img/ecosystem/SQL.png"},{title:"[GoFrame V2 Adapter](https://github.com/hailaz/gf-casbin-adapter)",type:"ORM",author:"[@hailaz](https://github.com/hailaz)",autoSave:"\u2705",description:"MySQL, SQLite, PostgreSQL, Oracle, SQL Server are supported by [GoFrame ORM](https://goframe.org/pages/viewpage.action?pageId=1114686)",image:"/img/ecosystem/SQL.png"},{title:"[Bun Adapter](https://github.com/JunNishimura/casbin-bun-adapter)",type:"ORM",author:"[@JunNishimura](https://github.com/JunNishimura)",autoSave:"\u2705",description:"MySQL, SQLite, PostgreSQL, SQL Server are supported by [Bun ORM](https://bun.uptrace.dev/guide/drivers.html)",image:null},{title:"[Filtered PostgreSQL Adapter](https://github.com/casbin/casbin-pg-adapter)",type:"SQL",author:"Casbin",autoSave:"\u2705",description:"For [PostgreSQL](https://www.postgresql.org/)",image:"/img/ecosystem/postgreSQL.png"},{title:"[Filtered pgx Adapter](https://github.com/pckhoi/casbin-pgx-adapter)",type:"SQL",author:"[@pckhoi](https://github.com/pckhoi)",autoSave:"\u2705",description:"PostgreSQL is supported by [pgx](https://github.com/jackc/pgx)",image:"/img/ecosystem/postgreSQL.png"},{title:"[Pgx Adapter](https://github.com/gtoxlili/pgx-adapter)",type:"SQL",author:"[@gtoxlili](https://github.com/gtoxlili)",autoSave:"\u2705",description:"PostgreSQL is supported by [pgx](https://github.com/jackc/pgx), supports customizable column count",image:"/img/ecosystem/postgreSQL.png"},{title:"[PostgreSQL Adapter](https://github.com/cychiuae/casbin-pg-adapter)",type:"SQL",author:"[@cychiuae](https://github.com/cychiuae)",autoSave:"\u2705",description:"For [PostgreSQL](https://www.postgresql.org/)",image:"/img/ecosystem/postgreSQL.png"},{title:"[RQLite Adapter](https://github.com/edomosystems/rqlite-adapter)",type:"SQL",author:"[EDOMO Systems](https://github.com/edomosystems)",autoSave:"\u2705",description:"For [RQLite](https://github.com/rqlite/rqlite/)",image:"/img/ecosystem/rqlite.png"},{title:"[MongoDB Adapter](https://github.com/casbin/mongodb-adapter)",type:"NoSQL",author:"Casbin",autoSave:"\u2705",description:"For [MongoDB](https://www.mongodb.com) based on [MongoDB Go Driver](https://github.com/mongodb/mongo-go-driver)",image:"/img/ecosystem/monogoDB.png"},{title:"[RethinkDB Adapter](https://github.com/adityapandey9/rethinkdb-adapter)",type:"NoSQL",author:"[@adityapandey9](https://github.com/adityapandey9)",autoSave:"\u2705",description:"For [RethinkDB](https://rethinkdb.com/)",image:"/img/ecosystem/rethinkDB.png"},{title:"[Cassandra Adapter](https://github.com/casbin/cassandra-adapter)",type:"NoSQL",author:"Casbin",autoSave:"\u274c",description:"For [Apache Cassandra DB](http://cassandra.apache.org)",image:"/img/ecosystem/cassandra.png"},{title:"[DynamoDB Adapter](https://github.com/HOOQTV/dynacasbin)",type:"NoSQL",author:"[HOOQ](https://github.com/HOOQTV)",autoSave:"\u274c",description:"For [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)",image:"/img/ecosystem/dynamoDB.png"},{title:"[Dynacasbin](https://github.com/NewbMiao/dynacasbin)",type:"NoSQL",author:"[NewbMiao](https://github.com/NewbMiao)",autoSave:"\u2705",description:"For [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)",image:"/img/ecosystem/dynamoDB.png"},{title:"[ArangoDB Adapter](https://github.com/adamwasila/arangodb-adapter)",type:"NoSQL",author:"[@adamwasila](https://github.com/adamwasila)",autoSave:"\u2705",description:"For [ArangoDB](https://www.arangodb.com/)",image:"/img/ecosystem/arangoDB.png"},{title:"[Amazon S3 Adapter](https://github.com/Soluto/casbin-minio-adapter)",type:"Cloud",author:"[Soluto](https://github.com/Soluto)",autoSave:"\u274c",description:"For [Minio](https://github.com/minio/minio) and [Amazon S3](https://aws.amazon.com/s3/)",image:"/img/ecosystem/amazonS3.png"},{title:"[Go CDK Adapter](https://github.com/bartventer/casbin-go-cloud-adapter)",type:"Cloud",author:"[@bartventer](https://github.com/bartventer)",autoSave:"\u2705",description:"Adapter based on [Go Cloud Dev Kit](https://gocloud.dev/) that supports: Amazon DynamoDB, Azure CosmosDB, GCP Firestore, MongoDB, In-Memory",image:"/img/ecosystem/DB.png"},{title:"[Azure Cosmos DB Adapter](https://github.com/spacycoder/cosmos-casbin-adapter)",type:"Cloud",author:"[@spacycoder](https://github.com/spacycoder)",autoSave:"\u2705",description:"For [Microsoft Azure Cosmos DB](https://docs.microsoft.com/en-us/azure/cosmos-db/introduction)",image:"/img/ecosystem/cosmosDB.png"},{title:"[GCP Firestore Adapter](https://github.com/reedom/casbin-firestore-adapter)",type:"Cloud",author:"[@reedom](https://github.com/reedom)",autoSave:"\u274c",description:"For [Google Cloud Platform Firestore](https://cloud.google.com/firestore/)",image:"/img/ecosystem/firestore.jpeg"},{title:"[GCP Cloud Storage Adapter](https://github.com/qurami/casbin-cloud-storage-adapter)",type:"Cloud",author:"[qurami](https://github.com/qurami)",autoSave:"\u274c",description:"For [Google Cloud Platform Cloud Storage](https://cloud.google.com/storage/)",image:"/img/ecosystem/googleCloudStorage.png"},{title:"[GCP Cloud Spanner Adapter](https://github.com/flowerinthenight/casbin-spanner-adapter)",type:"Cloud",author:"[@flowerinthenight](https://github.com/flowerinthenight)",autoSave:"\u2705",description:"For [Google Cloud Platform Cloud Spanner](https://cloud.google.com/spanner/)",image:"/img/ecosystem/spanner.png"},{title:"[Consul Adapter](https://github.com/ankitm123/consul-adapter)",type:"KV store",author:"[@ankitm123](https://github.com/ankitm123)",autoSave:"\u274c",description:"For [HashiCorp Consul](https://www.consul.io/)",image:"/img/ecosystem/firestore.jpeg"},{title:"[Redis Adapter (Redigo)](https://github.com/casbin/redis-adapter)",type:"KV store",author:"Casbin",autoSave:"\u2705",description:"For [Redis](https://redis.io/)",image:"/img/ecosystem/redis.png"},{title:"[Redis Adapter (go-redis)](https://github.com/mlsen/casbin-redis-adapter)",type:"KV store",author:"[@mlsen](https://github.com/mlsen)",autoSave:"\u2705",description:"For [Redis](https://redis.io/)",image:"/img/ecosystem/redis.png"},{title:"[Etcd Adapter](https://github.com/sebastianliu/etcd-adapter)",type:"KV store",author:"[@sebastianliu](https://github.com/sebastianliu)",autoSave:"\u274c",description:"For [etcd](https://github.com/coreos/etcd)",image:"/img/ecosystem/etcd.png"},{title:"[BoltDB Adapter](https://github.com/speza/casbin-bolt-adapter)",type:"KV store",author:"[@speza](https://github.com/speza)",autoSave:"\u2705",description:"For [Bolt](https://github.com/boltdb/bolt)",image:"/img/ecosystem/bolt.png"},{title:"[Bolt Adapter](https://github.com/wirepair/bolt-adapter)",type:"KV store",author:"[@wirepair](https://github.com/wirepair)",autoSave:"\u274c",description:"For [Bolt](https://github.com/boltdb/bolt)",image:"/img/ecosystem/bolt.png"},{title:"[BadgerDB Adapter](https://github.com/inits/casbin-badgerdb-adapter)",type:"KV store",author:"[@inits](https://github.com/inits)",autoSave:"\u2705",description:"For [BadgerDB](https://github.com/dgraph-io/badger)",image:"/img/ecosystem/badger.png"},{title:"[Protobuf Adapter](https://github.com/casbin/protobuf-adapter)",type:"Stream",author:"Casbin",autoSave:"\u274c",description:"For [Google Protocol Buffers](https://developers.google.com/protocol-buffers/)",image:"/img/ecosystem/protobuf.png"},{title:"[JSON Adapter](https://github.com/casbin/json-adapter)",type:"String",author:"Casbin",autoSave:"\u274c",description:"For [JSON](https://www.json.org/)",image:"/img/ecosystem/json.png"},{title:"[String Adapter](https://github.com/qiangmzsx/string-adapter)",type:"String",author:"[@qiangmzsx](https://github.com/qiangmzsx)",autoSave:"\u274c",description:"For String",image:"/img/ecosystem/string.png"},{title:"[HTTP File Adapter](https://github.com/h4ckedneko/casbin-httpfs)",type:"HTTP",author:"[@h4ckedneko](https://github.com/h4ckedneko)",autoSave:"\u274c",description:"For [http.FileSystem](https://golang.org/src/net/http/fs.go)",image:"/img/ecosystem/http.png"},{title:"[FileSystem Adapter](https://github.com/naucon/casbin-fs-adapter)",type:"File",author:"[@naucon](https://github.com/naucon)",autoSave:"\u274c",description:"For [fs.FS](https://pkg.go.dev/io/fs) and [embed.FS](https://pkg.go.dev/embed)",image:"/img/ecosystem/file.png"},{title:"[NATS JetStream Adapter](https://github.com/grepplabs/casbin-jetstream)",type:"KV store",author:"[grepplabs](https://github.com/grepplabs)",autoSave:"\u2705",description:"For [NATS JetStream](https://docs.nats.io/nats-concepts/jetstream)",image:"/img/ecosystem/nats.png"},{title:"[Kubernetes Adapter](https://github.com/grepplabs/casbin-kube)",type:"Cloud",author:"[grepplabs](https://github.com/grepplabs)",autoSave:"\u2705",description:"For [Kubernetes](https://kubernetes.io)",image:"/img/ecosystem/kubernetes.png"}].map((t=>({...t,tags:["Go","Adapter"]})))},9032:(t,e,a)=>{a.d(e,{$:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"img/ecosystem/file.png"},{title:"[JDBC Adapter](https://github.com/jcasbin/jdbc-adapter)",type:"JDBC",author:"Casbin",autoSave:"\u2705",description:"MySQL, Oracle, PostgreSQL, DB2, Sybase, SQL Server are supported by [JDBC](https://docs.oracle.com/cd/E19226-01/820-7688/gawms/index.html)",image:"img/ecosystem/JDBC.png"},{title:"[Hibernate Adapter](https://github.com/jcasbin/hibernate-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"Oracle, DB2, SQL Server, Sybase, MySQL, PostgreSQL are supported by [Hibernate](http://www.hibernate.org/)",image:"img/ecosystem/SQL.png"},{title:"[MyBatis Adapter](https://github.com/jcasbin/mybatis-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, Oracle, PostgreSQL, DB2, Sybase, SQL Server (the same as JDBC) are supported by [MyBatis 3](https://mybatis.org/mybatis-3/)",image:"img/ecosystem/mybatis.jpeg"},{title:"[Hutool Adapter](https://github.com/mapleafgo/jcasbin-extra)",type:"ORM",author:"[@mapleafgo](https://github.com/mapleafgo)",autoSave:"\u2705",description:"MySQL, Oracle, PostgreSQL, SQLite are supported by [Hutool](https://github.com/looly/hutool)",image:"img/ecosystem/SQL.png"},{title:"[MongoDB Adapter](https://github.com/jcasbin/jcasbin-mongo-adapter)",type:"NoSQL",author:"Casbin",autoSave:"\u2705",description:"MongoDB is supported by [mongodb-driver-sync](https://mongodb.github.io/mongo-java-driver/)",image:"img/ecosystem/monogoDB.png"},{title:"[DynamoDB Adapter](https://github.com/jcasbin/dynamodb-adapter)",type:"NoSQL",author:"Casbin",autoSave:"\u274c",description:"For [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)",image:"img/ecosystem/dynamoDB.png"},{title:"[Redis Adapter](https://github.com/jcasbin/redis-adapter)",type:"KV store",author:"Casbin",autoSave:"\u2705",description:"For [Redis](https://redis.io/)",image:"img/ecosystem/redis.png"}].map((t=>({...t,tags:["Java","Adapter"]})))},6344:(t,e,a)=>{a.d(e,{$:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Filtered File Adapter (built-in)](/docs/policy-subset-loading)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files with policy subset loading support",image:"/img/ecosystem/file.png"},{title:"[LuaSQL Adapter](https://github.com/casbin-lua/luasql-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite3 are supported by [LuaSQL](http://lunarmodules.github.io/luasql/)",image:"/img/ecosystem/SQL.png"},{title:"[4DaysORM Adapter](https://github.com/casbin-lua/4daysorm-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, SQLite3 are supported by [4DaysORM](https://github.com/itdxer/4DaysORM)",image:"/img/ecosystem/SQL.png"},{title:"[OpenResty Adapter](https://github.com/tom2nonames/lua-resty-casbin-adapter)",type:"ORM",author:"[@tom2nonames](https://github.com/tom2nonames)",autoSave:"\u2705",description:"MySQL, PostgreSQL are supported by it",image:"/img/ecosystem/SQL.png"}].map((t=>({...t,tags:["Lua","Adapter"]})))},2941:(t,e,a)=>{a.d(e,{y:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Filtered File Adapter (built-in)](/docs/policy-subset-loading)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files with policy subset loading support",image:"/img/ecosystem/file.png"},{title:"[String Adapter (built-in)](https://github.com/casbin/node-casbin/blob/master/src/persist/stringAdapter.ts)",type:"String",author:"[@calebfaruki](https://github.com/calebfaruki)",autoSave:"\u274c",description:"For String",image:"/img/ecosystem/string.png"},{title:"[Basic Adapter](https://github.com/node-casbin/basic-adapter)",type:"Native ORM",author:"Casbin",autoSave:"\u2705",description:"pg, mysql, mysql2, sqlite3, oracledb, mssql are supported by the adapter itself",image:"/img/ecosystem/SQL.png"},{title:"[Sequelize Adapter](https://github.com/node-casbin/sequelize-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Microsoft SQL Server are supported by [Sequelize](https://github.com/sequelize/sequelize)",image:"/img/ecosystem/SQL.png"},{title:"[TypeORM Adapter](https://github.com/node-casbin/typeorm-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, WebSQL, MongoDB are supported by [TypeORM](https://github.com/typeorm/typeorm)",image:"/img/ecosystem/SQL.png"},{title:"[Prisma Adapter](https://github.com/node-casbin/prisma-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, AWS Aurora, Azure SQL are supported by [Prisma](https://www.prisma.io/)",image:"/img/ecosystem/SQL.png"},{title:"[Knex Adapter](https://github.com/knex/casbin-knex-adapter)",type:"ORM",author:"[knex](https://github.com/knex)",autoSave:"\u2705",description:"MSSQL, MySQL, PostgreSQL, SQLite3, Oracle are supported by [Knex.js](https://knexjs.org/)",image:"/img/ecosystem/SQL.png"},{title:"[Objection.js Adapter](https://github.com/willsoto/casbin-objection-adapter)",type:"ORM",author:"[@willsoto](https://github.com/willsoto)",autoSave:"\u2705",description:"MSSQL, MySQL, PostgreSQL, SQLite3, Oracle are supported by [Objection.js](https://vincit.github.io/objection.js/)",image:"/img/ecosystem/SQL.png"},{title:"[MikroORM Adapter](https://github.com/baisheng/casbin-mikroorm-adapter)",type:"ORM",author:"[@baisheng](https://github.com/baisheng)",autoSave:"\u2705",description:"MongoDB, MySQL, MariaDB, PostgreSQL, SQLite are supported by [MikroORM](https://mikro-orm.io/)"},{title:"[Node PostgreSQL Native Adapter](https://github.com/touchifyapp/casbin-pg-adapter)",type:"SQL",author:"[@touchifyapp](https://github.com/touchifyapp)",autoSave:"\u2705",description:"PostgreSQL adapter with advanced policy subset loading support and improved performances built with [node-postgres](https://node-postgres.com/)."},{title:"[Mongoose Adapter](https://github.com/node-casbin/mongoose-adapter)",type:"NoSQL",author:"[elastic.io](https://github.com/elasticio) and Casbin",autoSave:"\u2705",description:"MongoDB is supported by [Mongoose](https://mongoosejs.com/)"},{title:"[Mongoose Adapter (No-Transaction)](https://github.com/minhducck/casbin-mongoose-adapter)",type:"NoSQL",author:"[minhducck](https://github.com/minhducck)",autoSave:"\u2705",description:"MongoDB is supported by [Mongoose](https://mongoosejs.com/)"},{title:"[Node MongoDB Native Adapter](https://github.com/NathanBhanji/mongodb-casbin-adapter)",type:"NoSQL",author:"[NathanBhanji](https://github.com/NathanBhanji)",autoSave:"\u2705",description:"For [Node MongoDB Native](https://mongodb.github.io/node-mongodb-native/)"},{title:"[Node MongoDB Native Adapter](https://github.com/juicycleff/casbin-mongodb-adapter)",type:"NoSQL",author:"[@juicycleff](https://github.com/juicycleff)",autoSave:"\u2705",description:"For [Node MongoDB Native](https://mongodb.github.io/node-mongodb-native/)"},{title:"[DynamoDB Adapter](https://github.com/fospitia/casbin-dynamodb-adapter)",type:"NoSQL",author:"[@fospitia](https://github.com/fospitia)",autoSave:"\u2705",description:"For [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)"},{title:"[Couchbase Adapter](https://github.com/MarkMYoung/casbin-couchbase-adapter)",type:"NoSQL",author:"[@MarkMYoung](https://github.com/MarkMYoung)",autoSave:"\u2705",description:"For [Couchbase](https://www.couchbase.com/)"},{title:"[Redis Adapter](https://github.com/node-casbin/redis-adapter)",type:"KV store",author:"Casbin",autoSave:"\u274c",description:"For [Redis](https://redis.io/)"},{title:"[Redis Adapter](https://github.com/NandaKishorJeripothula/node-casbin-redis-adapter)",type:"KV store",author:"[@NandaKishorJeripothula](https://github.com/NandaKishorJeripothula)",autoSave:"\u274c",description:"For [Redis](https://redis.io/)"}].map((t=>({...t,tags:["NodeJS","Adapter"]})))},783:(t,e,a)=>{a.d(e,{v:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Database Adapter](https://github.com/php-casbin/database-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Microsoft SQL Server are supported by [techone/database](https://github.com/techoner/database)",image:"/img/ecosystem/SQL.png"},{title:"[Zend Db Adapter](https://github.com/php-casbin/zend-db-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Oracle, IBM DB2, Microsoft SQL Server, Other PDO Driver are supported by [zend-db](https://docs.zendframework.com/zend-db/)",image:"/img/ecosystem/SQL.png"},{title:"[Doctrine DBAL Adapter (Recommend)](https://github.com/php-casbin/dbal-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"Powerful PHP database abstraction layer ([DBAL](https://github.com/doctrine/dbal)) with many features for database schema introspection and management.",image:"/img/ecosystem/DBAL.png"},{title:"[Medoo Adapter](https://github.com/php-casbin/medoo-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"[Medoo](https://github.com/catfan/Medoo) is a lightweight PHP Database Framework to Accelerate Development, supports all SQL databases, including `MySQL`, `MSSQL`, `SQLite`, `MariaDB`, `PostgreSQL`, `Sybase`, `Oracle` and more.",image:"/img/ecosystem/SQL.png"},{title:"[Laminas-db Adapter](https://github.com/php-casbin/laminas-db-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, Oracle, IBM DB2, Microsoft SQL Server, PDO, etc. are supported by [laminas-db](https://github.com/laminas/laminas-db)",image:"/img/ecosystem/SQL.png"},{title:"[Zend-db Adapter](https://github.com/php-casbin/zend-db-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, Oracle, IBM DB2, Microsoft SQL Server, PDO, etc. are supported by [zend-db](https://github.com/zendframework/zend-db)",image:"/img/ecosystem/SQL.png"},{title:"[ThinkORM Adapter (ThinkPHP)](https://github.com/getandpost/tp3-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Oracle, Microsoft SQL Server, MongoDB are supported by [ThinkORM](https://github.com/top-think/think-orm)",image:"/img/ecosystem/SQL.png"},{title:"[Redis Adapter](https://github.com/nsnake/CasbinAdapter-Redis-Adapter)",type:"KV store",author:"[@nsnake](https://github.com/nsnake)",autoSave:"\u274c",description:"For [Redis](https://redis.io/)",image:"/img/ecosystem/redis.png"}].map((t=>({...t,tags:["PHP","Adapter"]})))},7228:(t,e,a)=>{a.d(e,{n:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Django ORM Adapter](https://github.com/officialpycasbin/django-orm-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"PostgreSQL, MariaDB, MySQL, Oracle, SQLite, IBM DB2, Microsoft SQL Server, Firebird, ODBC are supported by [Django ORM](https://docs.djangoproject.com/en/3.0/ref/databases/)",image:"/img/ecosystem/SQL.png"},{title:"[SQLObject Adapter](https://github.com/officialpycasbin/sqlobject-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite, Microsoft SQL Server, Firebird, Sybase, MAX DB, pyfirebirdsql are supported by [SQLObject](http://www.sqlobject.org/index.html)",image:"/img/ecosystem/SQL.png"},{title:"[SQLAlchemy Adapter](https://github.com/officialpycasbin/sqlalchemy-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite, Oracle, Microsoft SQL Server, Firebird, Sybase are supported by [SQLAlchemy](https://www.sqlalchemy.org/)",image:"/img/ecosystem/SQL.png"},{title:"[Async SQLAlchemy Adapter](https://github.com/officialpycasbin/async-sqlalchemy-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite, Oracle, Microsoft SQL Server, Firebird, Sybase are supported by [SQLAlchemy](https://www.sqlalchemy.org/)",image:"/img/ecosystem/SQL.png"},{title:"[Async Databases Adapter](https://github.com/officialpycasbin/casbin-databases-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite, Oracle, Microsoft SQL Server, Firebird, Sybase are supported by [Databases](https://www.encode.io/databases/)",image:"/img/ecosystem/SQL.png"},{title:"[Peewee Adapter](https://github.com/shblhy/peewee-adapter)",type:"ORM",author:"[@shblhy](https://github.com/shblhy)",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite are supported by [Peewee](http://docs.peewee-orm.com/)",image:"/img/ecosystem/SQL.png"},{title:"[MongoEngine Adapter](https://github.com/zhangbailong945/mongoengine_adapter)",type:"ORM",author:"[@zhangbailong945](https://github.com/zhangbailong945)",autoSave:"\u274c",description:"MongoDB is supported by [MongoEngine](http://mongoengine.org/)",image:"/img/ecosystem/monogoEngine.png"},{title:"[Pony ORM Adapter](https://github.com/drorvinkler/pycasbin-pony-adapter)",type:"ORM",author:"[@drorvinkler](https://github.com/drorvinkler)",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, Oracle, CockroachDB are supported by [Pony ORM](https://ponyorm.org/)",image:"/img/ecosystem/SQL.png"},{title:"[Tortoise ORM Adapter](https://github.com/thearchitector/casbin-tortoise-adapter)",type:"ORM",author:"[@thearchitector](https://github.com/thearchitector)",autoSave:"\u2705",description:"PostgreSQL (>=9.4), MySQL, MariaDB, and SQLite are supported by [Tortoise ORM](https://tortoise.github.io/databases.html)",image:"/img/ecosystem/postgreSQL.png"},{title:"[Async Ormar Adapter](https://github.com/shepilov-vladislav/ormar-casbin-adapter)",type:"ORM",author:"[@shepilov-vladislav](https://github.com/shepilov-vladislav)",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite are supported by [Ormar](https://github.com/collerek/ormar/)",image:"/img/ecosystem/SQL.png"},{title:"[SQLModel Adapter](https://github.com/shepilov-vladislav/async-casbin-sqlmodel-adapter)",type:"ORM",author:"[@shepilov-vladislav](https://github.com/shepilov-vladislav)",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite are supported by [SQLModel](https://github.com/tiangolo/sqlmodel)",image:"/img/ecosystem/SQL.png"},{title:"[Couchbase Adapter](https://github.com/ScienceLogic/casbin-couchbase-adapter)",type:"NoSQL",author:"[ScienceLogic](https://github.com/ScienceLogic)",autoSave:"\u2705 (without `remove_filtered_policy()`)",description:"For [Couchbase](https://www.couchbase.com/)",image:"/img/ecosystem/couchBase.png"},{title:"[DynamoDB Adapter](https://github.com/abqadeer/python-dycasbin)",type:"NoSQL",author:"[@abqadeer](https://github.com/abqadeer/)",autoSave:"\u2705",description:"For [DynamoDB](https://aws.amazon.com/dynamodb/)",image:"/img/ecosystem/dynamoDB.png"},{title:"[Pymongo Adapter](https://github.com/officialpycasbin/pymongo-adapter)",type:"NoSQL",author:"Casbin",autoSave:"\u274c",description:"MongoDB is supported by [Pymongo](https://pypi.org/project/pymongo/)",image:"/img/ecosystem/monogoDB.png"},{title:"[Redis Adapter](https://github.com/officialpycasbin/redis-adapter)",type:"KV store",author:"Casbin",autoSave:"\u2705",description:"For [Redis](https://redis.io/)",image:"/img/ecosystem/redis.png"},{title:"[GCP Firebase Adapter](https://github.com/devrushi41/pycasbin-firebase-adapter)",type:"Cloud",author:"[@devrushi41](https://github.com/devrushi41)",autoSave:"\u2705",description:"For [Google Cloud Platform Firebase](https://firebase.google.com/)",image:"/img/ecosystem/firestore.jpeg"}].map((t=>({...t,tags:["Python","Adapter"]})))},2483:(t,e,a)=>{a.d(e,{z:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Sequel Adapter](https://github.com/CasbinRuby/casbin-ruby-sql-adapter)",type:"ORM",author:"[CasbinRuby](https://github.com/CasbinRuby)",autoSave:"\u2705",description:"[ADO, Amalgalite, IBM_DB, JDBC, MySQL, Mysql2, ODBC, Oracle, PostgreSQL, SQLAnywhere, SQLite3, and TinyTDS](http://sequel.jeremyevans.net/) are supported by [Sequel](http://sequel.jeremyevans.net/)",image:"/img/ecosystem/SQL.png"}].map((t=>({...t,tags:["Ruby","Adapter"]})))},3908:(t,e,a)=>{a.d(e,{X:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Diesel Adapter](https://github.com/casbin-rs/diesel-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"[SQLite, PostgreSQL, MySQL](https://github.com/diesel-rs/diesel/blob/master/guide_drafts/backend_installation.md) are supported by [Diesel](http://diesel.rs/)",image:"/img/ecosystem/SQL.png"},{title:"[Sqlx Adapter](https://github.com/casbin-rs/sqlx-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"PostgreSQL, MySQL are supported by [Sqlx](https://github.com/launchbadge/sqlx) with fully asynchronous operation",image:"/img/ecosystem/SQL.png"},{title:"[SeaORM Adapter](https://github.com/lingdu1234/sea_orm_casbin_adapter)",type:"ORM",author:"[@lingdu1234](https://github.com/lingdu1234)",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite are supported by [SeaORM](https://github.com/SeaQL/sea-orm) with fully asynchronous operation",image:"/img/ecosystem/SQL.png"},{title:"[SeaORM Adapter](https://github.com/ZihanType/sea-orm-adapter)",type:"ORM",author:"[@ZihanType](https://github.com/ZihanType)",autoSave:"\u2705",description:"PostgreSQL, MySQL, SQLite are supported by [SeaORM](https://github.com/SeaQL/sea-orm) with fully asynchronous operation",image:"/img/ecosystem/SQL.png"},{title:"[Rbatis Adapter](https://github.com/jiashiwen/casbin-rbatis-adapter)",type:"ORM",author:"[rbatis](https://github.com/rbatis)",autoSave:"\u2705",description:"MySQL, PostgreSQL, SQLite, SQL Server, MariaDB, TiDB, CockroachDB, Oracle are supported by [Rbatis](https://github.com/rbatis/rbatis)",image:"/img/ecosystem/SQL.png"},{title:"[DynamodDB Adapter](https://github.com/fospitia/dynamodb-adapter)",type:"NoSQL",author:"[@fospitia](https://github.com/fospitia)",autoSave:"\u2705",description:"For [Amazon DynamoDB](https://aws.amazon.com/dynamodb/)",image:"/img/ecosystem/dynamoDB.png"},{title:"[MongoDB Adapter](https://github.com/wangjun861205/nb-mongo-adapter)",type:"MongoDB",author:"[@wangjun861205](https://github.com/wangjun861205)",autoSave:"\u2705",description:"For [MongoDB](https://www.mongodb.com)",image:"/img/ecosystem/monogoDB.png"},{title:"[JSON Adapter](http://github.com/casbin-rs/json-adapter)",type:"String",author:"Casbin",autoSave:"\u2705",description:"For [JSON](https://json.org/)",image:"/img/ecosystem/json.png"},{title:"[YAML Adapter](https://github.com/casbin-rs/yaml-adapter)",type:"String",author:"Casbin",autoSave:"\u2705",description:"For [YAML](https://yaml.org/)",image:"/img/ecosystem/yaml.png"},{title:"[String Adapter](https://github.com/casbin-rs/string-adapter)",type:"String",author:"Casbin",autoSave:"\u274c",description:"For [String](https://doc.rust-lang.org/std/string/struct.String.html)",image:"/img/ecosystem/string.png"}].map((t=>({...t,tags:["Rust","Adapter"]})))},4720:(t,e,a)=>{a.d(e,{s:()=>i});const i=[{title:"[File Adapter (built-in)](/docs/adapters#file-adapter-built-in)",type:"File",author:"Casbin",autoSave:"\u274c",description:"For [.CSV (Comma-Separated Values)](https://en.wikipedia.org/wiki/Comma-separated_values) files",image:"/img/ecosystem/file.png"},{title:"[Memory Adapter (built-in)](https://github.com/casbin/SwiftCasbin/blob/master/Sources/Casbin/Adapter/MemoryAdapter.swift)",type:"Memory",author:"Casbin",autoSave:"\u274c",description:"For memory",image:"/img/ecosystem/memory.png"},{title:"[Fluent Adapter](https://github.com/SwiftCasbin/fluent-adapter)",type:"ORM",author:"Casbin",autoSave:"\u2705",description:"[PostgreSQL, SQLite, MySQL, MongoDB](https://docs.vapor.codes/4.0/fluent/overview/#drivers) are supported by [Fluent](https://github.com/vapor/fluent)",image:"/img/ecosystem/SQL.png"}].map((t=>({...t,tags:["Swift","Adapter"]})))},2966:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>L,contentTitle:()=>v,default:()=>N,frontMatter:()=>S,metadata:()=>k,toc:()=>f});var i=a(7462),o=a(7294),n=a(3905),r=a(8132),s=a(2575),p=a(9032),c=a(6344),d=a(7860);function l(t){let{data:e}=t,a="| Adapter | Type | Author | AutoSave | Description |\n|---------|------|--------|----------|-------------|\n";return e.forEach((t=>{a+=`| ${t.title} | ${t.type} | ${t.author} | ${t.autoSave} | ${t.description} |\n`})),o.createElement(d.Z,null,a)}var m=a(2941),h=a(783),u=a(7228),g=a(2483),b=a(3908),y=a(4720);const S={id:"adapters",title:"Adapters",description:"C\xe1c adapter \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 v\xe0 c\xe1ch s\u1eed d\u1ee5ng",keywords:["adapters","MySQL adapter","storage adapter"],authors:["hsluoyz"]},v=void 0,k={unversionedId:"adapters",id:"adapters",title:"Adapters",description:"C\xe1c adapter \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 v\xe0 c\xe1ch s\u1eed d\u1ee5ng",source:"@site/i18n/vi/docusaurus-plugin-content-docs/current/Adapters.mdx",sourceDirName:".",slug:"/adapters",permalink:"/vi/docs/adapters",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/Adapters.mdx",tags:[],version:"current",frontMatter:{id:"adapters",title:"Adapters",description:"C\xe1c adapter \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 v\xe0 c\xe1ch s\u1eed d\u1ee5ng",keywords:["adapters","MySQL adapter","storage adapter"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Enforcers",permalink:"/vi/docs/enforcers"},next:{title:"Watchers",permalink:"/vi/docs/watchers"}},L={},f=[{value:"C\xe1c adapter \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3",id:"c\xe1c-adapter-\u0111\u01b0\u1ee3c-h\u1ed7-tr\u1ee3",level:2},{value:"V\xed d\u1ee5",id:"v\xed-d\u1ee5",level:2},{value:"B\u1ed9 \u0111i\u1ec1u h\u1ee3p t\u1ec7p (t\xedch h\u1ee3p s\u1eb5n)",id:"b\u1ed9-\u0111i\u1ec1u-h\u1ee3p-t\u1ec7p-t\xedch-h\u1ee3p-s\u1eb5n",level:3},{value:"MySQL adapter",id:"mysql-adapter",level:3},{value:"S\u1eed d\u1ee5ng adapter l\u01b0u tr\u1eef c\u1ee7a ri\xeang b\u1ea1n",id:"s\u1eed-d\u1ee5ng-adapter-l\u01b0u-tr\u1eef-c\u1ee7a-ri\xeang-b\u1ea1n",level:2},{value:"Di chuy\u1ec3n/Chuy\u1ec3n \u0111\u1ed5i gi\u1eefa c\xe1c adapter kh\xe1c nhau",id:"di-chuy\u1ec3nchuy\u1ec3n-\u0111\u1ed5i-gi\u1eefa-c\xe1c-adapter-kh\xe1c-nhau",level:2},{value:"T\u1ea3i/L\u01b0u trong qu\xe1 tr\xecnh ch\u1ea1y",id:"t\u1ea3il\u01b0u-trong-qu\xe1-tr\xecnh-ch\u1ea1y",level:2},{value:"T\u1ef1 \u0111\u1ed9ng L\u01b0u",id:"t\u1ef1-\u0111\u1ed9ng-l\u01b0u",level:2},{value:"C\xe1ch vi\u1ebft m\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p",id:"c\xe1ch-vi\u1ebft-m\u1ed9t-b\u1ed9-\u0111i\u1ec1u-h\u1ee3p",level:3},{value:"Ai l\xe0 ng\u01b0\u1eddi ch\u1ecbu tr\xe1ch nhi\u1ec7m t\u1ea1o c\u01a1 s\u1edf d\u1eef li\u1ec7u?",id:"ai-l\xe0-ng\u01b0\u1eddi-ch\u1ecbu-tr\xe1ch-nhi\u1ec7m-t\u1ea1o-c\u01a1-s\u1edf-d\u1eef-li\u1ec7u",level:3},{value:"Update Adapter",id:"update-adapter",level:2},{value:"V\xed d\u1ee5",id:"v\xed-d\u1ee5-1",level:3},{value:"How to write an update adapter",id:"how-to-write-an-update-adapter",level:3},{value:"B\u1ed9 \u0111i\u1ec1u h\u1ee3p Context",id:"b\u1ed9-\u0111i\u1ec1u-h\u1ee3p-context",level:2},{value:"Example",id:"example",level:3},{value:"C\xe1ch vi\u1ebft m\u1ed9t adapter ng\u1eef c\u1ea3nh",id:"c\xe1ch-vi\u1ebft-m\u1ed9t-adapter-ng\u1eef-c\u1ea3nh",level:3},{value:"Transaction",id:"transaction",level:2}],Q=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)},A=Q("Tabs"),C=Q("TabItem"),M={toc:f};function N(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,i.Z)({},M,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Trong Casbin, vi\u1ec7c l\u01b0u tr\u1eef ch\xednh s\xe1ch \u0111\u01b0\u1ee3c tri\u1ec3n khai nh\u01b0 m\u1ed9t adapter (hay middleware cho Casbin). Ng\u01b0\u1eddi d\xf9ng Casbin c\xf3 th\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t adapter \u0111\u1ec3 t\u1ea3i c\xe1c quy t\u1eafc ch\xednh s\xe1ch t\u1eeb b\u1ed9 l\u01b0u tr\u1eef (aka ",(0,n.kt)("inlineCode",{parentName:"p"},"LoadPolicy()"),"), ho\u1eb7c l\u01b0u c\xe1c quy t\u1eafc ch\xednh s\xe1ch v\xe0o \u0111\xf3 (aka ",(0,n.kt)("inlineCode",{parentName:"p"},"SavePolicy()"),"). \u0110\u1ec3 gi\u1eef cho th\u01b0 vi\u1ec7n ch\xednh nh\u1eb9 nh\xe0ng, ch\xfang t\xf4i kh\xf4ng \u0111\u01b0a m\xe3 adapter v\xe0o th\u01b0 vi\u1ec7n ch\xednh."),(0,n.kt)("h2",{id:"c\xe1c-adapter-\u0111\u01b0\u1ee3c-h\u1ed7-tr\u1ee3"},"C\xe1c adapter \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3"),(0,n.kt)("p",null,"Danh s\xe1ch \u0111\u1ea7y \u0111\u1ee7 c\xe1c b\u1ed9 \u0111i\u1ec1u h\u1ee3p Casbin \u0111\u01b0\u1ee3c cung c\u1ea5p nh\u01b0 sau. B\u1ea5t k\u1ef3 \u0111\xf3ng g\xf3p c\u1ee7a b\xean th\u1ee9 ba v\u1ec1 m\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p m\u1edbi \u0111\u1ec1u \u0111\u01b0\u1ee3c hoan ngh\xeanh, vui l\xf2ng th\xf4ng b\xe1o cho ch\xfang t\xf4i v\xe0 ch\xfang t\xf4i s\u1ebd \u0111\u01b0a n\xf3 v\xe0o danh s\xe1ch n\xe0y:"),(0,n.kt)(A,{groupId:"langs",mdxType:"Tabs"},(0,n.kt)(C,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,n.kt)(l,{data:s.I,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Java",label:"Java",mdxType:"TabItem"},(0,n.kt)(l,{data:p.$,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,n.kt)(l,{data:m.y,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,n.kt)(l,{data:h.v,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Python",label:"Python",mdxType:"TabItem"},(0,n.kt)(l,{data:u.n,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:".NET",label:".NET",mdxType:"TabItem"},(0,n.kt)(l,{data:r.b,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,n.kt)(l,{data:b.X,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Ruby",label:"Ruby",mdxType:"TabItem"},(0,n.kt)(l,{data:g.z,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Swift",label:"Swift",mdxType:"TabItem"},(0,n.kt)(l,{data:y.s,mdxType:"AdapterMDTable"})),(0,n.kt)(C,{value:"Lua",label:"Lua",mdxType:"TabItem"},(0,n.kt)(l,{data:c.$,mdxType:"AdapterMDTable"}))),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("ol",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ol"},"N\u1ebfu ",(0,n.kt)("inlineCode",{parentName:"li"},"casbin.NewEnforcer()")," \u0111\u01b0\u1ee3c g\u1ecdi v\u1edbi m\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p r\xf5 r\xe0ng ho\u1eb7c ng\u1ea7m \u0111\u1ecbnh, ch\xednh s\xe1ch s\u1ebd \u0111\u01b0\u1ee3c t\u1ea3i t\u1ef1 \u0111\u1ed9ng."),(0,n.kt)("li",{parentName:"ol"},"B\u1ea1n c\xf3 th\u1ec3 g\u1ecdi ",(0,n.kt)("inlineCode",{parentName:"li"},"e.LoadPolicy()")," \u0111\u1ec3 t\u1ea3i l\u1ea1i c\xe1c quy t\u1eafc ch\xednh s\xe1ch t\u1eeb b\u1ed9 nh\u1edb."),(0,n.kt)("li",{parentName:"ol"},"N\u1ebfu b\u1ed9 \u0111i\u1ec1u h\u1ee3p kh\xf4ng h\u1ed7 tr\u1ee3 t\xednh n\u0103ng ",(0,n.kt)("inlineCode",{parentName:"li"},"T\u1ef1 \u0111\u1ed9ng L\u01b0u"),", c\xe1c quy t\u1eafc ch\xednh s\xe1ch kh\xf4ng th\u1ec3 \u0111\u01b0\u1ee3c l\u01b0u t\u1ef1 \u0111\u1ed9ng tr\u1edf l\u1ea1i b\u1ed9 nh\u1edb khi b\u1ea1n th\xeam ho\u1eb7c x\xf3a ch\xednh s\xe1ch. B\u1ea1n ph\u1ea3i g\u1ecdi ",(0,n.kt)("inlineCode",{parentName:"li"},"SavePolicy()")," th\u1ee7 c\xf4ng \u0111\u1ec3 l\u01b0u t\u1ea5t c\u1ea3 c\xe1c quy t\u1eafc ch\xednh s\xe1ch."))),(0,n.kt)("h2",{id:"v\xed-d\u1ee5"},"V\xed d\u1ee5"),(0,n.kt)("p",null,"D\u01b0\u1edbi \u0111\xe2y ch\xfang t\xf4i cung c\u1ea5p m\u1ed9t s\u1ed1 v\xed d\u1ee5:"),(0,n.kt)("h3",{id:"b\u1ed9-\u0111i\u1ec1u-h\u1ee3p-t\u1ec7p-t\xedch-h\u1ee3p-s\u1eb5n"},"B\u1ed9 \u0111i\u1ec1u h\u1ee3p t\u1ec7p (t\xedch h\u1ee3p s\u1eb5n)"),(0,n.kt)("p",null,"D\u01b0\u1edbi \u0111\xe2y ch\u1ec9 ra c\xe1ch kh\u1edfi t\u1ea1o m\u1ed9t enforcer t\u1eeb b\u1ed9 \u0111i\u1ec1u h\u1ee3p t\u1ec7p t\xedch h\u1ee3p s\u1eb5n:"),(0,n.kt)(A,{groupId:"langs",mdxType:"Tabs"},(0,n.kt)(C,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/casbin/casbin"\n\ne := casbin.NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n'))),(0,n.kt)(C,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"use Casbin\\Enforcer;\n\n$e = new Enforcer('examples/basic_model.conf', 'examples/basic_policy.csv');\n"))),(0,n.kt)(C,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'use casbin::prelude::*;\n\nlet mut e = Enforcer::new("examples/basic_model.conf", "examples/basic_policy.csv").await?;\n')))),(0,n.kt)("p",null,"\u0110i\u1ec1u n\xe0y gi\u1ed1ng v\u1edbi:"),(0,n.kt)(A,{groupId:"langs",mdxType:"Tabs"},(0,n.kt)(C,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin"\n    "github.com/casbin/casbin/file-adapter"\n)\n\na := fileadapter.NewAdapter("examples/basic_policy.csv")\ne := casbin.NewEnforcer("examples/basic_model.conf", a)\n'))),(0,n.kt)(C,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"use Casbin\\Enforcer;\nuse Casbin\\Persist\\Adapters\\FileAdapter;\n\n$a = new FileAdapter('examples/basic_policy.csv');\n$e = new Enforcer('examples/basic_model.conf', $a);\n"))),(0,n.kt)(C,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'use casbin::prelude::*;\n\nlet a = FileAdapter::new("examples/basic_policy.csv");\nlet e = Enforcer::new("examples/basic_model.conf", a).await?;\n')))),(0,n.kt)("h3",{id:"mysql-adapter"},(0,n.kt)("a",{parentName:"h3",href:"https://github.com/casbin/mysql-adapter"},"MySQL adapter")),(0,n.kt)("p",null,"D\u01b0\u1edbi \u0111\xe2y ch\u1ec9 ra c\xe1ch kh\u1edfi t\u1ea1o m\u1ed9t enforcer t\u1eeb c\u01a1 s\u1edf d\u1eef li\u1ec7u MySQL. N\xf3 k\u1ebft n\u1ed1i \u0111\u1ebfn m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u MySQL tr\xean 127.0.0.1:3306 v\u1edbi t\xean ng\u01b0\u1eddi d\xf9ng root v\xe0 m\u1eadt kh\u1ea9u tr\u1ed1ng."),(0,n.kt)(A,{groupId:"langs",mdxType:"Tabs"},(0,n.kt)(C,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin"\n    "github.com/casbin/mysql-adapter"\n)\n\na := mysqladapter.NewAdapter("mysql", "root:@tcp(127.0.0.1:3306)/")\ne := casbin.NewEnforcer("examples/basic_model.conf", a)\n'))),(0,n.kt)(C,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},'// https://github.com/casbin-rs/diesel-adapter\n// make sure you activate feature `mysql`\n\nuse casbin::prelude::*;\nuse diesel_adapter::{ConnOptions, DieselAdapter};\n\nlet mut conn_opts = ConnOptions::default();\nconn_opts\n    .set_hostname("127.0.0.1")\n    .set_port(3306)\n    .set_host("127.0.0.1:3306") // overwrite hostname, port config\n    .set_database("casbin")\n    .set_auth("casbin_rs", "casbin_rs");\n\nlet a = DieselAdapter::new(conn_opts)?;\nlet mut e = Enforcer::new("examples/basic_model.conf", a).await?;\n'))),(0,n.kt)(C,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// https://github.com/php-casbin/dbal-adapter\n\nuse Casbin\\Enforcer;\nuse CasbinAdapter\\DBAL\\Adapter as DatabaseAdapter;\n\n$config = [\n    // Either 'driver' with one of the following values:\n    // pdo_mysql,pdo_sqlite,pdo_pgsql,pdo_oci (unstable),pdo_sqlsrv,pdo_sqlsrv,\n    // mysqli,sqlanywhere,sqlsrv,ibm_db2 (unstable),drizzle_pdo_mysql\n    'driver'     => 'pdo_mysql',\n    'host' => '127.0.0.1',\n    'dbname' => 'test',\n    'user' => 'root',\n    'password' => '',\n    'port' => '3306',\n];\n\n$a = DatabaseAdapter::newAdapter($config);\n$e = new Enforcer('examples/basic_model.conf', $a);\n")))),(0,n.kt)("h2",{id:"s\u1eed-d\u1ee5ng-adapter-l\u01b0u-tr\u1eef-c\u1ee7a-ri\xeang-b\u1ea1n"},"S\u1eed d\u1ee5ng adapter l\u01b0u tr\u1eef c\u1ee7a ri\xeang b\u1ea1n"),(0,n.kt)("p",null,"B\u1ea1n c\xf3 th\u1ec3 s\u1eed d\u1ee5ng adapter c\u1ee7a ri\xeang b\u1ea1n nh\u01b0 d\u01b0\u1edbi \u0111\xe2y:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin"\n    "github.com/your-username/your-repo"\n)\n\na := yourpackage.NewAdapter(params)\ne := casbin.NewEnforcer("examples/basic_model.conf", a)\n')),(0,n.kt)("h2",{id:"di-chuy\u1ec3nchuy\u1ec3n-\u0111\u1ed5i-gi\u1eefa-c\xe1c-adapter-kh\xe1c-nhau"},"Di chuy\u1ec3n/Chuy\u1ec3n \u0111\u1ed5i gi\u1eefa c\xe1c adapter kh\xe1c nhau"),(0,n.kt)("p",null,"N\u1ebfu b\u1ea1n mu\u1ed1n chuy\u1ec3n \u0111\u1ed5i adapter t\u1eeb ",(0,n.kt)("inlineCode",{parentName:"p"},"A")," sang ",(0,n.kt)("inlineCode",{parentName:"p"},"B"),", b\u1ea1n c\xf3 th\u1ec3 l\xe0m nh\u01b0 th\u1ebf n\xe0y:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"T\u1ea3i ch\xednh s\xe1ch t\u1eeb A v\xe0o b\u1ed9 nh\u1edb")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"e, _ := NewEnforcer(m, A)\n")),(0,n.kt)("p",null,"ho\u1eb7c"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"e.SetAdapter(A)\ne.LoadPolicy()\n")),(0,n.kt)("p",null,"Chuy\u1ec3n \u0111\u1ed5i b\u1ed9 chuy\u1ec3n \u0111\u1ed5i c\u1ee7a b\u1ea1n t\u1eeb A sang B"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"e.SetAdapter(B)\n")),(0,n.kt)("p",null,"L\u01b0u ch\xednh s\xe1ch t\u1eeb b\u1ed9 nh\u1edb v\xe0o B"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"e.SavePolicy()\n")),(0,n.kt)("h2",{id:"t\u1ea3il\u01b0u-trong-qu\xe1-tr\xecnh-ch\u1ea1y"},"T\u1ea3i/L\u01b0u trong qu\xe1 tr\xecnh ch\u1ea1y"),(0,n.kt)("p",null,"B\u1ea1n c\u0169ng c\xf3 th\u1ec3 mu\u1ed1n t\u1ea3i l\u1ea1i m\xf4 h\xecnh, t\u1ea3i l\u1ea1i ch\xednh s\xe1ch ho\u1eb7c l\u01b0u ch\xednh s\xe1ch sau khi kh\u1edfi t\u1ea1o:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// Reload the model from the model CONF file.\ne.LoadModel()\n\n// Reload the policy from file/database.\ne.LoadPolicy()\n\n// Save the current policy (usually after changed with Casbin API) back to file/database.\ne.SavePolicy()\n")),(0,n.kt)("h2",{id:"t\u1ef1-\u0111\u1ed9ng-l\u01b0u"},"T\u1ef1 \u0111\u1ed9ng L\u01b0u"),(0,n.kt)("p",null,"C\xf3 m\u1ed9t t\xednh n\u0103ng g\u1ecdi l\xe0 ",(0,n.kt)("inlineCode",{parentName:"p"},"T\u1ef1 \u0111\u1ed9ng L\u01b0u")," cho c\xe1c b\u1ed9 chuy\u1ec3n \u0111\u1ed5i. Khi m\u1ed9t b\u1ed9 chuy\u1ec3n \u0111\u1ed5i h\u1ed7 tr\u1ee3 ",(0,n.kt)("inlineCode",{parentName:"p"},"T\u1ef1 \u0111\u1ed9ng L\u01b0u"),", \u0111i\u1ec1u \u0111\xf3 c\xf3 ngh\u0129a l\xe0 n\xf3 c\xf3 th\u1ec3 h\u1ed7 tr\u1ee3 th\xeam m\u1ed9t quy t\u1eafc ch\xednh s\xe1ch v\xe0o b\u1ed9 nh\u1edb, ho\u1eb7c x\xf3a m\u1ed9t quy t\u1eafc ch\xednh s\xe1ch kh\u1ecfi b\u1ed9 nh\u1edb. \u0110i\u1ec1u n\xe0y kh\xe1c v\u1edbi ",(0,n.kt)("inlineCode",{parentName:"p"},"L\u01b0uCh\xednhS\xe1ch()"),", b\u1edfi v\xec h\xe0m sau s\u1ebd x\xf3a t\u1ea5t c\u1ea3 c\xe1c quy t\u1eafc ch\xednh s\xe1ch trong b\u1ed9 nh\u1edb v\xe0 l\u01b0u t\u1ea5t c\u1ea3 c\xe1c quy t\u1eafc ch\xednh s\xe1ch t\u1eeb tr\xecnh th\u1ef1c thi Casbin v\xe0o b\u1ed9 nh\u1edb. V\xec v\u1eady, n\xf3 c\xf3 th\u1ec3 g\u1eb7p v\u1ea5n \u0111\u1ec1 v\u1ec1 hi\u1ec7u su\u1ea5t khi s\u1ed1 l\u01b0\u1ee3ng quy t\u1eafc ch\xednh s\xe1ch l\u1edbn."),(0,n.kt)("p",null,"Khi b\u1ed9 chuy\u1ec3n \u0111\u1ed5i h\u1ed7 tr\u1ee3 ",(0,n.kt)("inlineCode",{parentName:"p"},"T\u1ef1 \u0111\u1ed9ng L\u01b0u"),", b\u1ea1n c\xf3 th\u1ec3 chuy\u1ec3n \u0111\u1ed5i t\xf9y ch\u1ecdn n\xe0y th\xf4ng qua h\xe0m ",(0,n.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableAutoSave()"),". T\xf9y ch\u1ecdn n\xe0y \u0111\u01b0\u1ee3c b\u1eadt theo m\u1eb7c \u0111\u1ecbnh (n\u1ebfu b\u1ed9 \u0111i\u1ec1u h\u1ee3p h\u1ed7 tr\u1ee3 n\xf3)."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("ol",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ol"},"T\xednh n\u0103ng ",(0,n.kt)("inlineCode",{parentName:"li"},"Auto-Save")," l\xe0 t\xf9y ch\u1ecdn. M\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p c\xf3 th\u1ec3 ch\u1ecdn tri\u1ec3n khai n\xf3 ho\u1eb7c kh\xf4ng."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"Auto-Save")," ch\u1ec9 ho\u1ea1t \u0111\u1ed9ng cho m\u1ed9t enforcer Casbin khi b\u1ed9 \u0111i\u1ec1u h\u1ee3p m\xe0 enforcer s\u1eed d\u1ee5ng h\u1ed7 tr\u1ee3 n\xf3."),(0,n.kt)("li",{parentName:"ol"},"Xem c\u1ed9t ",(0,n.kt)("inlineCode",{parentName:"li"},"AutoSave")," trong danh s\xe1ch b\u1ed9 \u0111i\u1ec1u h\u1ee3p \u1edf tr\xean \u0111\u1ec3 xem ",(0,n.kt)("inlineCode",{parentName:"li"},"Auto-Save")," c\xf3 \u0111\u01b0\u1ee3c h\u1ed7 tr\u1ee3 b\u1edfi m\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p hay kh\xf4ng."))),(0,n.kt)("p",null,"\u0110\xe2y l\xe0 m\u1ed9t v\xed d\u1ee5 v\u1ec1 c\xe1ch s\u1eed d\u1ee5ng ",(0,n.kt)("inlineCode",{parentName:"p"},"Auto-Save"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin"\n    "github.com/casbin/xorm-adapter"\n    _ "github.com/go-sql-driver/mysql"\n)\n\n// By default, the AutoSave option is enabled for an enforcer.\na := xormadapter.NewAdapter("mysql", "mysql_username:mysql_password@tcp(127.0.0.1:3306)/")\ne := casbin.NewEnforcer("examples/basic_model.conf", a)\n\n// Disable the AutoSave option.\ne.EnableAutoSave(false)\n\n// Because AutoSave is disabled, the policy change only affects the policy in Casbin enforcer,\n// it doesn\'t affect the policy in the storage.\ne.AddPolicy(...)\ne.RemovePolicy(...)\n\n// Enable the AutoSave option.\ne.EnableAutoSave(true)\n\n// Because AutoSave is enabled, the policy change not only affects the policy in Casbin enforcer,\n// but also affects the policy in the storage.\ne.AddPolicy(...)\ne.RemovePolicy(...)\n')),(0,n.kt)("p",null,"\u0110\u1ec3 bi\u1ebft th\xeam v\xed d\u1ee5, vui l\xf2ng xem: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/xorm-adapter/blob/master/adapter_test.go"},"https://github.com/casbin/xorm-adapter/blob/master/adapter","_","test.go")),(0,n.kt)("h3",{id:"c\xe1ch-vi\u1ebft-m\u1ed9t-b\u1ed9-\u0111i\u1ec1u-h\u1ee3p"},"C\xe1ch vi\u1ebft m\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p"),(0,n.kt)("p",null,"T\u1ea5t c\u1ea3 c\xe1c b\u1ed9 \u0111i\u1ec1u h\u1ee3p n\xean tri\u1ec3n khai giao di\u1ec7n ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/persist/adapter.go"},"Adapter")," b\u1eb1ng c\xe1ch cung c\u1ea5p \xedt nh\u1ea5t hai ph\u01b0\u01a1ng th\u1ee9c b\u1eaft bu\u1ed9c: ",(0,n.kt)("inlineCode",{parentName:"p"},"LoadPolicy(model model.Model) error")," v\xe0 ",(0,n.kt)("inlineCode",{parentName:"p"},"SavePolicy(model model.Model) error"),"."),(0,n.kt)("p",null,"Ba ch\u1ee9c n\u0103ng kh\xe1c l\xe0 t\xf9y ch\u1ecdn. Ch\xfang n\xean \u0111\u01b0\u1ee3c tri\u1ec3n khai n\u1ebfu adapter h\u1ed7 tr\u1ee3 t\xednh n\u0103ng ",(0,n.kt)("inlineCode",{parentName:"p"},"Auto-Save"),"."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Ph\u01b0\u01a1ng th\u1ee9c"),(0,n.kt)("th",{parentName:"tr",align:null},"Ki\u1ec3u"),(0,n.kt)("th",{parentName:"tr",align:null},"M\xf4 t\u1ea3"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"LoadPolicy()"),(0,n.kt)("td",{parentName:"tr",align:null},"b\u1eaft bu\u1ed9c"),(0,n.kt)("td",{parentName:"tr",align:null},"T\u1ea3i t\u1ea5t c\u1ea3 c\xe1c quy t\u1eafc ch\xednh s\xe1ch t\u1eeb b\u1ed9 nh\u1edb")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"SavePolicy()"),(0,n.kt)("td",{parentName:"tr",align:null},"b\u1eaft bu\u1ed9c"),(0,n.kt)("td",{parentName:"tr",align:null},"L\u01b0u t\u1ea5t c\u1ea3 c\xe1c quy t\u1eafc ch\xednh s\xe1ch v\xe0o b\u1ed9 nh\u1edb")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"AddPolicy()"),(0,n.kt)("td",{parentName:"tr",align:null},"t\xf9y ch\u1ecdn"),(0,n.kt)("td",{parentName:"tr",align:null},"Th\xeam m\u1ed9t quy t\u1eafc ch\xednh s\xe1ch v\xe0o kho l\u01b0u tr\u1eef")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"RemovePolicy()"),(0,n.kt)("td",{parentName:"tr",align:null},"t\xf9y ch\u1ecdn"),(0,n.kt)("td",{parentName:"tr",align:null},"X\xf3a m\u1ed9t quy t\u1eafc ch\xednh s\xe1ch kh\u1ecfi kho l\u01b0u tr\u1eef")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"RemoveFilteredPolicy()"),(0,n.kt)("td",{parentName:"tr",align:null},"t\xf9y ch\u1ecdn"),(0,n.kt)("td",{parentName:"tr",align:null},"X\xf3a c\xe1c quy t\u1eafc ch\xednh s\xe1ch kh\u1edbp v\u1edbi b\u1ed9 l\u1ecdc kh\u1ecfi kho l\u01b0u tr\u1eef")))),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"N\u1ebfu m\u1ed9t b\u1ed9 \u0111i\u1ec1u h\u1ee3p kh\xf4ng h\u1ed7 tr\u1ee3 ",(0,n.kt)("inlineCode",{parentName:"p"},"T\u1ef1 \u0111\u1ed9ng L\u01b0u"),", n\xf3 n\xean cung c\u1ea5p m\u1ed9t tri\u1ec3n khai tr\u1ed1ng cho ba ch\u1ee9c n\u0103ng t\xf9y ch\u1ecdn. \u0110\xe2y l\xe0 m\u1ed9t v\xed d\u1ee5 cho Golang:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'// AddPolicy adds a policy rule to the storage.\nfunc (a *Adapter) AddPolicy(sec string, ptype string, rule []string) error {\n    return errors.New("not implemented")\n}\n\n// RemovePolicy removes a policy rule from the storage.\nfunc (a *Adapter) RemovePolicy(sec string, ptype string, rule []string) error {\n    return errors.New("not implemented")\n}\n\n// RemoveFilteredPolicy removes policy rules that match the filter from the storage.\nfunc (a *Adapter) RemoveFilteredPolicy(sec string, ptype string, fieldIndex int, fieldValues ...string) error {\n    return errors.New("not implemented")\n}\n')),(0,n.kt)("p",null,"B\u1ed9 th\u1ef1c thi Casbin s\u1ebd b\u1ecf qua l\u1ed7i ",(0,n.kt)("inlineCode",{parentName:"p"},"not implemented")," khi g\u1ecdi ba h\xe0m t\xf9y ch\u1ecdn n\xe0y."),(0,n.kt)("p",null,"C\xf3 chi ti\u1ebft v\u1ec1 c\xe1ch vi\u1ebft m\u1ed9t adapter."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"C\u1ea5u tr\xfac d\u1eef li\u1ec7u. Adapter n\xean h\u1ed7 tr\u1ee3 \u0111\u1ecdc \xedt nh\u1ea5t s\xe1u c\u1ed9t."),(0,n.kt)("li",{parentName:"ul"},"T\xean c\u01a1 s\u1edf d\u1eef li\u1ec7u. T\xean c\u01a1 s\u1edf d\u1eef li\u1ec7u m\u1eb7c \u0111\u1ecbnh n\xean l\xe0 ",(0,n.kt)("inlineCode",{parentName:"li"},"casbin"),"."),(0,n.kt)("li",{parentName:"ul"},"T\xean b\u1ea3ng. T\xean b\u1ea3ng m\u1eb7c \u0111\u1ecbnh n\xean l\xe0 ",(0,n.kt)("inlineCode",{parentName:"li"},"casbin_rule"),"."),(0,n.kt)("li",{parentName:"ul"},"C\u1ed9t Ptype. T\xean c\u1ee7a c\u1ed9t n\xe0y n\xean l\xe0 ",(0,n.kt)("inlineCode",{parentName:"li"},"ptype")," thay v\xec ",(0,n.kt)("inlineCode",{parentName:"li"},"p_type")," ho\u1eb7c ",(0,n.kt)("inlineCode",{parentName:"li"},"Ptype"),"."),(0,n.kt)("li",{parentName:"ul"},"\u0110\u1ecbnh ngh\u0129a b\u1ea3ng n\xean l\xe0 ",(0,n.kt)("inlineCode",{parentName:"li"},"(id int primary key, ptype varchar, v0 varchar, v1 varchar, v2 varchar, v3 varchar, v4 varchar, v5 varchar)"),"."),(0,n.kt)("li",{parentName:"ul"},"Ch\u1ec9 m\u1ee5c kh\xf3a duy nh\u1ea5t n\xean \u0111\u01b0\u1ee3c x\xe2y d\u1ef1ng tr\xean c\xe1c c\u1ed9t ",(0,n.kt)("inlineCode",{parentName:"li"},"ptype,v0,v1,v2,v3,v4,v5"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"LoadFilteredPolicy")," y\xeau c\u1ea7u m\u1ed9t ",(0,n.kt)("inlineCode",{parentName:"li"},"filter")," l\xe0m tham s\u1ed1. B\u1ed9 l\u1ecdc n\xean l\xe0 m\u1ed9t c\xe1i g\xec \u0111\xf3 nh\u01b0 th\u1ebf n\xe0y.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "p": ["", "domain1"],\n    "g": ["", "", "domain1"]\n}\n')),(0,n.kt)("h3",{id:"ai-l\xe0-ng\u01b0\u1eddi-ch\u1ecbu-tr\xe1ch-nhi\u1ec7m-t\u1ea1o-c\u01a1-s\u1edf-d\u1eef-li\u1ec7u"},"Ai l\xe0 ng\u01b0\u1eddi ch\u1ecbu tr\xe1ch nhi\u1ec7m t\u1ea1o c\u01a1 s\u1edf d\u1eef li\u1ec7u?"),(0,n.kt)("p",null,"Theo quy \u01b0\u1edbc, b\u1ed9 \u0111i\u1ec1u h\u1ee3p n\xean c\xf3 kh\u1ea3 n\u0103ng t\u1ef1 \u0111\u1ed9ng t\u1ea1o m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u c\xf3 t\xean l\xe0 ",(0,n.kt)("inlineCode",{parentName:"p"},"casbin")," n\u1ebfu n\xf3 ch\u01b0a t\u1ed3n t\u1ea1i v\xe0 s\u1eed d\u1ee5ng n\xf3 \u0111\u1ec3 l\u01b0u tr\u1eef ch\xednh s\xe1ch. Vui l\xf2ng s\u1eed d\u1ee5ng b\u1ed9 \u0111i\u1ec1u h\u1ee3p Xorm l\xe0m tri\u1ec3n khai tham chi\u1ebfu: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/xorm-adapter"},"https://github.com/casbin/xorm-adapter")),(0,n.kt)("h2",{id:"update-adapter"},"Update Adapter"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateAdapter")," interface extends the basic ",(0,n.kt)("inlineCode",{parentName:"p"},"Adapter")," interface to support updating policies directly in the storage. This is more efficient than removing and re-adding policies when you need to modify existing rules."),(0,n.kt)("p",null,"An adapter that implements the ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateAdapter")," interface should provide the following methods:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UpdatePolicy()"),(0,n.kt)("td",{parentName:"tr",align:null},"optional"),(0,n.kt)("td",{parentName:"tr",align:null},"Update a single policy rule in the storage")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UpdatePolicies()"),(0,n.kt)("td",{parentName:"tr",align:null},"optional"),(0,n.kt)("td",{parentName:"tr",align:null},"Update multiple policy rules in the storage")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"UpdateFilteredPolicies()"),(0,n.kt)("td",{parentName:"tr",align:null},"optional"),(0,n.kt)("td",{parentName:"tr",align:null},"Update policy rules that match the filter in the storage")))),(0,n.kt)("h3",{id:"v\xed-d\u1ee5-1"},"V\xed d\u1ee5"),(0,n.kt)("p",null,"Here's an example of using the update adapter methods:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "github.com/casbin/casbin/v2"\n    "github.com/casbin/gorm-adapter/v3"\n)\n\na, _ := gormadapter.NewAdapter("mysql", "root:@tcp(127.0.0.1:3306)/")\ne, _ := casbin.NewEnforcer("examples/rbac_model.conf", a)\n\n// Update a single policy\n// Change: p, alice, data1, read -> p, alice, data1, write\ne.UpdatePolicy(\n    []string{"alice", "data1", "read"},\n    []string{"alice", "data1", "write"},\n)\n\n// Update multiple policies at once\ne.UpdatePolicies(\n    [][]string{{"alice", "data1", "write"}, {"bob", "data2", "read"}},\n    [][]string{{"alice", "data1", "read"}, {"bob", "data2", "write"}},\n)\n\n// Update all policies matching a filter\ne.UpdateFilteredPolicies(\n    [][]string{{"alice", "data1", "write"}},\n    0,\n    "alice", "data1", "read",\n)\n')),(0,n.kt)("h3",{id:"how-to-write-an-update-adapter"},"How to write an update adapter"),(0,n.kt)("p",null,"To implement the ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateAdapter")," interface, your adapter needs to implement the update methods in addition to the basic ",(0,n.kt)("inlineCode",{parentName:"p"},"Adapter")," interface:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// UpdatePolicy updates a policy rule from storage.\n// This is part of the UpdateAdapter interface.\nfunc (a *Adapter) UpdatePolicy(sec string, ptype string, oldRule, newRule []string) error {\n    // Implementation to update the policy in storage\n    // For example, in SQL: UPDATE casbin_rule SET v0=?, v1=?, v2=? WHERE ptype=? AND v0=? AND v1=? AND v2=?\n    return nil\n}\n\n// UpdatePolicies updates multiple policy rules in the storage.\n// This is part of the UpdateAdapter interface.\nfunc (a *Adapter) UpdatePolicies(sec string, ptype string, oldRules, newRules [][]string) error {\n    // Implementation to update multiple policies in storage\n    // This should be done in a transaction for consistency\n    return nil\n}\n\n// UpdateFilteredPolicies updates policy rules that match the filter from the storage.\n// This is part of the UpdateAdapter interface.\nfunc (a *Adapter) UpdateFilteredPolicies(sec string, ptype string, newRules [][]string, fieldIndex int, fieldValues ...string) error {\n    // Implementation to update filtered policies in storage\n    // First find policies matching the filter, then update them\n    return nil\n}\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"If an adapter doesn't support the ",(0,n.kt)("inlineCode",{parentName:"p"},"UpdateAdapter")," interface, Casbin will automatically fall back to using the combination of ",(0,n.kt)("inlineCode",{parentName:"p"},"RemovePolicy()")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"AddPolicy()")," operations.")),(0,n.kt)("h2",{id:"b\u1ed9-\u0111i\u1ec1u-h\u1ee3p-context"},"B\u1ed9 \u0111i\u1ec1u h\u1ee3p Context"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/persist/adapter_context.go"},"ContextAdapter")," cung c\u1ea5p m\u1ed9t giao di\u1ec7n nh\u1eadn bi\u1ebft ng\u1eef c\u1ea3nh cho c\xe1c b\u1ed9 \u0111i\u1ec1u h\u1ee3p Casbin."),(0,n.kt)("p",null,"Th\xf4ng qua ng\u1eef c\u1ea3nh, b\u1ea1n c\xf3 th\u1ec3 tri\u1ec3n khai c\xe1c t\xednh n\u0103ng nh\u01b0 ki\u1ec3m so\xe1t th\u1eddi gian ch\u1edd cho API c\u1ee7a Adapter"),(0,n.kt)("h3",{id:"example"},"Example"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/gorm-adapter"},"gormadapter")," h\u1ed7 tr\u1ee3 adapter v\u1edbi ng\u1eef c\u1ea3nh, \u0111o\u1ea1n m\xe3 sau l\xe0 m\u1ed9t ki\u1ec3m so\xe1t th\u1eddi gian ch\u1edd \u0111\u01b0\u1ee3c tri\u1ec3n khai b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng ng\u1eef c\u1ea3nh"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'ca, _ := NewContextAdapter("mysql", "root:@tcp(127.0.0.1:3306)/", "casbin")\n// Limited time 300s\nctx, cancel := context.WithTimeout(context.Background(), 300*time.Microsecond)\ndefer cancel()\n\nerr := ca.AddPolicyCtx(ctx, "p", "p", []string{"alice", "data1", "read"})\nif err != nil {\n    panic(err)\n}\n')),(0,n.kt)("h3",{id:"c\xe1ch-vi\u1ebft-m\u1ed9t-adapter-ng\u1eef-c\u1ea3nh"},"C\xe1ch vi\u1ebft m\u1ed9t adapter ng\u1eef c\u1ea3nh"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ContextAdapter")," API ch\u1ec9 c\xf3 m\u1ed9t l\u1edbp x\u1eed l\xfd ng\u1eef c\u1ea3nh b\u1ed5 sung so v\u1edbi API ",(0,n.kt)("inlineCode",{parentName:"p"},"Adapter")," th\xf4ng th\u01b0\u1eddng,"),(0,n.kt)("p",null,"M\u1ed9t t\xe0i li\u1ec7u tham kh\u1ea3o \u0111\u01a1n gi\u1ea3n v\u1ec1 ",(0,n.kt)("inlineCode",{parentName:"p"},"gormadapter"),": ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/gorm-adapter/blob/master/adapter.go"},"adapter.go")),(0,n.kt)("h2",{id:"transaction"},"Transaction"),(0,n.kt)("p",null,"Casbin now supports Transactions. Here's an example about how to use ",(0,n.kt)("inlineCode",{parentName:"p"},"Transaction")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"gormadapter"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},'db, _ := gorm.Open(...)\nadapter, _ := gormadapter.NewTransactionalAdapterByDB(db)\ne, _ := casbin.NewTransactionalEnforcer("examples/rbac_model.conf", adapter)\n\nctx := context.Background()\n\n// WithTransaction executes a function within a transaction.\n// If the function returns an error, the transaction is rolled back.\n// Otherwise, it\'s committed automatically.\nerr := e.WithTransaction(ctx, func(tx *casbin.Transaction) error {\n    tx.AddPolicy("alice", "data1", "read")\n    tx.AddPolicy("alice", "data1", "write")\n    return nil\n})\n\n// If you wish to manually handle the transaction\ntx, _ := e.BeginTransaction(ctx)\ntx.AddPolicy("alice", "data1", "write")\nif err := tx.Commit(); err != nil {\n    // handle if transaction failed\n}\n')),(0,n.kt)("p",null,"To add this capability to your adapter, you need to implement ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionalAdapter")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionContext")," in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/persist/transaction.go"},"persist/transaction.go"),"."),(0,n.kt)("p",null,"Code reference to the ",(0,n.kt)("inlineCode",{parentName:"p"},"gormadapter"),": ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/casbin/gorm-adapter/blob/master/adapter.go"},"adapter.go")))}N.isMDXComponent=!0}}]);