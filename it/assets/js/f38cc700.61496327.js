"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2368],{3905:(e,i,t)=>{t.d(i,{Zo:()=>p,kt:()=>m});var n=t(7294);function r(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}function o(e,i){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);i&&(n=n.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?o(Object(t),!0).forEach((function(i){r(e,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))}))}return e}function l(e,i){if(null==e)return{};var t,n,r=function(e,i){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],i.indexOf(t)>=0||(r[t]=e[t]);return r}(e,i);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var i=n.useContext(s),t=i;return e&&(t="function"==typeof e?e(i):a(a({},i),e)),t},p=function(e){var i=c(e.components);return n.createElement(s.Provider,{value:i},e.children)},u={inlineCode:"code",wrapper:function(e){var i=e.children;return n.createElement(n.Fragment,{},i)}},d=n.forwardRef((function(e,i){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?n.createElement(f,a(a({ref:i},p),{},{components:t})):n.createElement(f,a({ref:i},p))}));function m(e,i){var t=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=d;var l={};for(var s in i)hasOwnProperty.call(i,s)&&(l[s]=i[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7265:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(7462),r=(t(7294),t(3905));const o={id:"performance",title:"Performance Optimization",description:"Ottimizzazione delle prestazioni di Casbin",keywords:["optimization"],authors:["hsluoyz"]},a=void 0,l={unversionedId:"performance",id:"performance",title:"Performance Optimization",description:"Ottimizzazione delle prestazioni di Casbin",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/Performance.mdx",sourceDirName:".",slug:"/performance",permalink:"/it/docs/performance",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/Performance.mdx",tags:[],version:"current",frontMatter:{id:"performance",title:"Performance Optimization",description:"Ottimizzazione delle prestazioni di Casbin",keywords:["optimization"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Benchmarks",permalink:"/it/docs/benchmark"},next:{title:"Authorization of Kubernetes",permalink:"/it/docs/k8s"}},s={},c=[{value:"Alto Volume di Traffico",id:"alto-volume-di-traffico",level:4},{value:"Alto Numero di Regole di Politica",id:"alto-numero-di-regole-di-politica",level:4}],p={toc:c};function u(e){let{components:i,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,t,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Quando applicato in un ambiente di produzione con milioni di utenti o permessi, potresti riscontrare un degrado delle prestazioni nell'applicazione di Casbin. Di solito ci sono due cause:"),(0,r.kt)("h4",{id:"alto-volume-di-traffico"},"Alto Volume di Traffico"),(0,r.kt)("p",null,"Il numero di richieste in ingresso al secondo \xe8 troppo elevato, ad esempio, 10.000 richieste/s per una singola istanza di Casbin. In casi come questi, una singola istanza di Casbin di solito non \xe8 sufficiente per gestire tutte le richieste. Ci sono due soluzioni possibili:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Utilizzare il multithreading per abilitare pi\xf9 istanze di Casbin, cos\xec da poter sfruttare appieno tutti i core della macchina. Per maggiori dettagli, vedi: ",(0,r.kt)("a",{parentName:"p",href:"/docs/multi-threading"},"Multithreading"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Distribuire istanze di Casbin in un cluster (pi\xf9 macchine) e utilizzare Watcher per garantire che tutte le istanze di Casbin siano coerenti. Per maggiori dettagli, vedi: ",(0,r.kt)("a",{parentName:"p",href:"/docs/watchers"},"Watchers"),"."))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Puoi utilizzare entrambi i metodi sopra menzionati contemporaneamente, ad esempio, distribuire Casbin in un cluster di 10 macchine dove ogni macchina ha 5 thread che servono simultaneamente le richieste di applicazione dei criteri di Casbin.")),(0,r.kt)("h4",{id:"alto-numero-di-regole-di-politica"},"Alto Numero di Regole di Politica"),(0,r.kt)("p",null,"In un ambiente cloud o multi-tenant, potrebbero essere necessarie milioni di regole di politica. Ogni chiamata di applicazione dei criteri o anche il caricamento delle regole di politica all'inizio pu\xf2 essere molto lento. Tali casi possono solitamente essere mitigati in diversi modi:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Verifica se il tuo modello o policy di Casbin \xe8 ben progettato. Un modello e una policy ben scritti astraggono la logica duplicata per ogni utente/tenant e riducono il numero di regole a un livello molto basso (\\< 100). Ad esempio, puoi condividere alcune regole predefinite tra tutti i tenant e consentire agli utenti di personalizzare le loro regole successivamente. Le regole personalizzate possono sovrascrivere le regole predefinite. Se hai ulteriori domande, per favore apri un issue su GitHub nel repository di Casbin.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Esegui sharding per far caricare a un enforcer di Casbin solo un piccolo insieme di regole di policy. Ad esempio, enforcer","_","0 pu\xf2 servire tenant","_","0 a tenant","_","99, mentre enforcer","_","1 pu\xf2 servire tenant","_","100 a tenant","_","199. Per caricare solo un sottoinsieme di tutte le regole di policy, vedi: ",(0,r.kt)("a",{parentName:"p",href:"/docs/policy-subset-loading"},"Caricamento Subset di Policy"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Concedi permessi ai ruoli RBAC invece che direttamente agli utenti. L'RBAC di Casbin \xe8 implementato da un albero di ereditariet\xe0 dei ruoli (come cache). Quindi, dato un utente come Alice, Casbin richiede solo tempo O(1) per interrogare l'albero RBAC per la relazione ruolo-utente e per eseguire l'applicazione. Se le tue regole g non cambiano spesso, allora l'albero RBAC non avr\xe0 bisogno di essere aggiornato costantemente. Vedi i dettagli di questa discussione qui: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/681#issuecomment-763801583"},"https://github.com/casbin/casbin/issues/681#issuecomment-763801583")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Puoi provare tutti i metodi sopra menzionati contemporaneamente.")))}u.isMDXComponent=!0}}]);