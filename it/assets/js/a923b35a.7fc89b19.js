"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[5128],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>c});var l=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,l,r=function(e,a){if(null==e)return{};var t,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)t=n[l],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)t=n[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=l.createContext({}),p=function(e){var a=l.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return l.createElement(i.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},u=l.forwardRef((function(e,a){var t=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(t),c=r,k=u["".concat(i,".").concat(c)]||u[c]||m[c]||n;return t?l.createElement(k,o(o({ref:a},d),{},{components:t})):l.createElement(k,o({ref:a},d))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var n=t.length,o=new Array(n);o[0]=u;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<n;p++)o[p]=t[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}u.displayName="MDXCreateElement"},81:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>k,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var l=t(7462),r=(t(7294),t(3905));const n={id:"rbac-api",title:"RBAC API",description:"Un'API pi\xf9 amichevole per RBAC. Questa API \xe8 un sottoinsieme dell'API di Gestione. Gli utenti RBAC potrebbero utilizzare questa API per semplificare il codice.",keywords:["RBAC","API"],authors:["nodece"]},o=void 0,s={unversionedId:"rbac-api",id:"rbac-api",title:"RBAC API",description:"Un'API pi\xf9 amichevole per RBAC. Questa API \xe8 un sottoinsieme dell'API di Gestione. Gli utenti RBAC potrebbero utilizzare questa API per semplificare il codice.",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/RBACAPI.mdx",sourceDirName:".",slug:"/rbac-api",permalink:"/it/docs/rbac-api",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RBACAPI.mdx",tags:[],version:"current",frontMatter:{id:"rbac-api",title:"RBAC API",description:"Un'API pi\xf9 amichevole per RBAC. Questa API \xe8 un sottoinsieme dell'API di Gestione. Gli utenti RBAC potrebbero utilizzare questa API per semplificare il codice.",keywords:["RBAC","API"],authors:["nodece"]},sidebar:"docs",previous:{title:"Management API",permalink:"/it/docs/management-api"},next:{title:"RBAC with Domains API",permalink:"/it/docs/rbac-with-domains-api"}},i={},p=[{value:"Riferimento",id:"riferimento",level:2},{value:"<code>GetRolesForUser()</code>",id:"getrolesforuser",level:3},{value:"<code>GetUsersForRole()</code>",id:"getusersforrole",level:3},{value:"<code>HasRoleForUser()</code>",id:"hasroleforuser",level:3},{value:"<code>AddRoleForUser()</code>",id:"addroleforuser",level:3},{value:"<code>AddRolesForUser()</code>",id:"addrolesforuser",level:3},{value:"<code>DeleteRoleForUser()</code>",id:"deleteroleforuser",level:3},{value:"<code>DeleteRolesForUser()</code>",id:"deleterolesforuser",level:3},{value:"<code>DeleteUser()</code>",id:"deleteuser",level:3},{value:"<code>DeleteRole()</code>",id:"deleterole",level:3},{value:"<code>DeletePermission()</code>",id:"deletepermission",level:3},{value:"<code>AddPermissionForUser()</code>",id:"addpermissionforuser",level:3},{value:"<code>AddPermissionsForUser()</code>",id:"addpermissionsforuser",level:3},{value:"<code>DeletePermissionForUser()</code>",id:"deletepermissionforuser",level:3},{value:"<code>DeletePermissionsForUser()</code>",id:"deletepermissionsforuser",level:3},{value:"<code>GetPermissionsForUser()</code>",id:"getpermissionsforuser",level:3},{value:"<code>HasPermissionForUser()</code>",id:"haspermissionforuser",level:3},{value:"<code>GetImplicitRolesForUser()</code>",id:"getimplicitrolesforuser",level:3},{value:"<code>GetImplicitUsersForRole()</code>",id:"getimplicitusersforrole",level:3},{value:"<code>GetImplicitPermissionsForUser()</code>",id:"getimplicitpermissionsforuser",level:3},{value:"<code>GetNamedImplicitPermissionsForUser()</code>",id:"getnamedimplicitpermissionsforuser",level:3},{value:"<code>GetDomainsForUser()</code>",id:"getdomainsforuser",level:3},{value:"<code>GetImplicitResourcesForUser()</code>",id:"getimplicitresourcesforuser",level:3},{value:"<code>GetImplicitUsersForPermission()</code>",id:"getimplicitusersforpermission",level:3},{value:"<code>GetAllowedObjectConditions()</code>",id:"getallowedobjectconditions",level:3},{value:"<code>GetImplicitUsersForResource()</code>",id:"getimplicitusersforresource",level:3}],d=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",a)},m=d("Tabs"),u=d("TabItem"),c={toc:p};function k(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,l.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Un'API pi\xf9 amichevole per RBAC. Questa API \xe8 un sottoinsieme dell'API di Gestione. Gli utenti RBAC potrebbero utilizzare questa API per semplificare il codice."),(0,r.kt)("h2",{id:"riferimento"},"Riferimento"),(0,r.kt)("p",null,"La variabile globale ",(0,r.kt)("inlineCode",{parentName:"p"},"e")," \xe8 un'istanza di Enforcer."),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e, err := NewEnforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const e = await newEnforcer('examples/rbac_model.conf', 'examples/rbac_policy.csv')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$e = new Enforcer('examples/rbac_model.conf', 'examples/rbac_policy.csv');\n"))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e = casbin.Enforcer("examples/rbac_model.conf", "examples/rbac_policy.csv")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var e = new Enforcer("path/to/model.conf", "path/to/policy.csv");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let mut e = Enforcer::new("examples/rbac_model.conf", "examples/rbac_policy.csv").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Enforcer e = new Enforcer("examples/rbac_model.conf", "examples/rbac_policy.csv");\n')))),(0,r.kt)("h3",{id:"getrolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetRolesForUser()")),(0,r.kt)("p",null,"GetRolesForUser ottiene i ruoli che un utente ha."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'res := e.GetRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const res = await e.getRolesForUser('alice')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$res = $e->getRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'roles = e.get_roles_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var res = e.GetRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let roles = e.get_roles_for_user("alice", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> res = e.getRolesForUser("alice");\n')))),(0,r.kt)("h3",{id:"getusersforrole"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetUsersForRole()")),(0,r.kt)("p",null,"GetUsersForRole ottiene gli utenti che hanno un ruolo."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'res := e.GetUsersForRole("data1_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const res = await e.getUsersForRole('data1_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$res = $e->getUsersForRole("data1_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'users = e.get_users_for_role("data1_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var res = e.GetUsersForRole("data1_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let users = e.get_users_for_role("data1_admin", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> res = e.getUsersForRole("data1_admin");\n')))),(0,r.kt)("h3",{id:"hasroleforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"HasRoleForUser()")),(0,r.kt)("p",null,"HasRoleForUser determina se un utente ha un ruolo."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'res := e.HasRoleForUser("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const res = await e.hasRoleForUser('alice', 'data1_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$res = $e->hasRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'has = e.has_role_for_user("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var res = e.HasRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let has = e.has_role_for_user("alice", "data1_admin", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean res = e.hasRoleForUser("alice", "data1_admin");\n')))),(0,r.kt)("h3",{id:"addroleforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddRoleForUser()")),(0,r.kt)("p",null,"AddRoleForUser aggiunge un ruolo per un utente.\nRestituisce false se l'utente ha gi\xe0 il ruolo (aka non modificato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.AddRoleForUser("alice", "data2_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.addRoleForUser('alice', 'data2_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-PHP"},'$e->addRoleForUser("alice", "data2_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.add_role_for_user("alice", "data2_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var added = e.AddRoleForUser("alice", "data2_admin");\nor\nvar added = await e.AddRoleForUserAsync("alice", "data2_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let added = e.add_role_for_user("alice", "data2_admin", None).await?; // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean added = e.addRoleForUser("alice", "data2_admin");\n')))),(0,r.kt)("h3",{id:"addrolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddRolesForUser()")),(0,r.kt)("p",null,"AddRolesForUser aggiunge pi\xf9 ruoli per un utente.\nRestituisce falso se l'utente ha gi\xe0 uno di questi ruoli (ovvero non \xe8 influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'var roles = []string{"data2_admin", "data1_admin"}\ne.AddRolesForUser("alice", roles)\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const roles = ["data1_admin", "data2_admin"];\nroles.map((role) => e.addRoleForUser("alice", role));\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let roles = vec!["data1_admin".to_owned(), "data2_admin".to_owned()];\nlet all_added = e.add_roles_for_user("alice", roles, None).await?; // No domain\n')))),(0,r.kt)("h3",{id:"deleteroleforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteRoleForUser()")),(0,r.kt)("p",null,"DeleteRoleForUser elimina un ruolo per un utente.\nRestituisce falso se l'utente non ha il ruolo (ovvero non \xe8 influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteRoleForUser("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deleteRoleForUser('alice', 'data1_admin')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_role_for_user("alice", "data1_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeleteRoleForUser("alice", "data1_admin");\nor\nvar deleted = await e.DeleteRoleForUser("alice", "data1_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_role_for_user("alice", "data1_admin", None).await?; // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deleteRoleForUser("alice", "data1_admin");\n')))),(0,r.kt)("h3",{id:"deleterolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteRolesForUser()")),(0,r.kt)("p",null,"DeleteRolesForUser elimina tutti i ruoli per un utente.\nRestituisce falso se l'utente non ha alcun ruolo (ovvero non \xe8 influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deleteRolesForUser('alice')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_roles_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deletedAtLeastOne = e.DeleteRolesForUser("alice");\nor\nvar deletedAtLeastOne = await e.DeleteRolesForUserAsync("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted_at_least_one = e.delete_roles_for_user("alice", None).await?; // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deletedAtLeastOne = e.deleteRolesForUser("alice");\n')))),(0,r.kt)("h3",{id:"deleteuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteUser()")),(0,r.kt)("p",null,"EliminaUtente elimina un utente.\nRestituisce falso se l'utente non esiste (ovvero non \xe8 stato influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deleteUser('alice')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeleteUser("alice");\nor\nvar deleted = await e.DeleteUserAsync("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_user("alice").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deleteUser("alice");\n')))),(0,r.kt)("h3",{id:"deleterole"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeleteRole()")),(0,r.kt)("p",null,"EliminaRuolo elimina un ruolo."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeleteRole("data2_admin")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await e.deleteRole("data2_admin")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deleteRole("data2_admin");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_role("data2_admin")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeleteRole("data2_admin");\nor\nvar deleted = await e.DeleteRoleAsync("data2_admin");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_role("data2_admin").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'e.deleteRole("data2_admin");\n')))),(0,r.kt)("h3",{id:"deletepermission"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeletePermission()")),(0,r.kt)("p",null,"EliminaPermesso elimina un permesso.\nRestituisce falso se il permesso non esiste (ovvero non \xe8 stato influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeletePermission("read")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deletePermission('read')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deletePermission("read");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_permission("read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeletePermission("read");\nor\nvar deleted = await e.DeletePermissionAsync("read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_permission(vec!["read".to_owned()]).await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deletePermission("read");\n')))),(0,r.kt)("h3",{id:"addpermissionforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddPermissionForUser()")),(0,r.kt)("p",null,"AddPermissionForUser aggiunge un permesso per un utente o un ruolo.\nRestituisce false se l'utente o il ruolo ha gi\xe0 il permesso (ovvero non \xe8 stato influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.AddPermissionForUser("bob", "read")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.addPermissionForUser('bob', 'read')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->addPermissionForUser("bob", "read");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.add_permission_for_user("bob", "read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var added = e.AddPermissionForUser("bob", "read");\nor\nvar added = await e.AddPermissionForUserAsync("bob", "read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let added = e.add_permission_for_user("bob", vec!["read".to_owned()]).await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean added = e.addPermissionForUser("bob", "read");\n')))),(0,r.kt)("h3",{id:"addpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"AddPermissionsForUser()")),(0,r.kt)("p",null,"AddPermissionsForUser aggiunge pi\xf9 permessi per un utente o un ruolo.\nRestituisce false se l'utente o il ruolo ha gi\xe0 uno dei permessi (ovvero non \xe8 stato influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'var permissions = [][]string{{"data1", "read"},{"data2","write"}}\nfor i := 0; i < len(permissions); i++ {\n    e.AddPermissionsForUser("alice", permissions[i])\n}\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const permissions = [\n    ["data1", "read"],\n    ["data2", "write"],\n];\n\npermissions.map((permission) => e.addPermissionForUser("bob", ...permission));\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let permissions = vec![\n    vec!["data1".to_owned(), "read".to_owned()],\n    vec!["data2".to_owned(), "write".to_owned()],\n];\n\nlet all_added = e.add_permissions_for_user("bob", permissions).await?;\n')))),(0,r.kt)("h3",{id:"deletepermissionforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeletePermissionForUser()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DeletePermissionForUser")," elimina un permesso per un utente o un ruolo.\nRestituisce ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," se l'utente o il ruolo non ha il permesso (ovvero non \xe8 stato influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeletePermissionForUser("bob", "read")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await e.deletePermissionForUser("bob", "read")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deletePermissionForUser("bob", "read");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_permission_for_user("bob", "read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deleted = e.DeletePermissionForUser("bob", "read");\nor\nvar deleted = await e.DeletePermissionForUserAsync("bob", "read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted = e.delete_permission_for_user("bob", vec!["read".to_owned()]).await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deleted = e.deletePermissionForUser("bob", "read");\n')))),(0,r.kt)("h3",{id:"deletepermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"DeletePermissionsForUser()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DeletePermissionsForUser")," elimina i permessi per un utente o un ruolo.\nRestituisce ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," se l'utente o il ruolo non ha alcun permesso (ovvero non \xe8 stato influenzato)."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.DeletePermissionsForUser("bob")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.deletePermissionsForUser('bob')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->deletePermissionsForUser("bob");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.delete_permissions_for_user("bob")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var deletedAtLeastOne = e.DeletePermissionsForUser("bob");\nor\nvar deletedAtLeastOne = await e.DeletePermissionsForUserAsync("bob");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let deleted_at_least_one = e.delete_permissions_for_user("bob").await?;\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean deletedAtLeastOne = e.deletePermissionForUser("bob");\n')))),(0,r.kt)("h3",{id:"getpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetPermissionsForUser()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GetPermissionsForUser")," ottiene i permessi per un utente o un ruolo."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetPermissionsForUser("bob")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.getPermissionsForUser('bob')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->getPermissionsForUser("bob");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_permissions_for_user("bob")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var permissions = e.GetPermissionsForUser("bob");\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<List<String>> permissions = e.getPermissionsForUser("bob");\n')))),(0,r.kt)("h3",{id:"haspermissionforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"HasPermissionForUser()")),(0,r.kt)("p",null,"HasPermissionForUser determina se un utente ha un permesso."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.HasPermissionForUser("alice", []string{"read"})\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await e.hasPermissionForUser('alice', 'read')\n"))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->hasPermissionForUser("alice", []string{"read"});\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'has = e.has_permission_for_user("alice", "read")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var has = e.HasPermissionForUser("bob", "read");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let has = e.has_permission_for_user("alice", vec!["data1".to_owned(), "read".to_owned()]);\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'boolean has = e.hasPermissionForUser("alice", "read");\n')))),(0,r.kt)("h3",{id:"getimplicitrolesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitRolesForUser()")),(0,r.kt)("p",null,"OttieniRuoliImplicitiPerUtente ottiene i ruoli impliciti che un utente ha.\nRispetto a OttieniRuoliPerUtente(), questa funzione recupera ruoli indiretti oltre a quelli diretti."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"g, alice, role:admin  \ng, role:admin, role:user  \n")),(0,r.kt)("p",null,'OttieniRuoliPerUtente("alice") pu\xf2 ottenere solo: ','["role:admin"]','.\\\nMa OttieniRuoliImplicitiPerUtente("alice") otterr\xe0: ','["role:admin", "role:user"]',"."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetImplicitRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'await e.getImplicitRolesForUser("alice")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->getImplicitRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_implicit_roles_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var implicitRoles = e.GetImplicitRolesForUser("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'e.get_implicit_roles_for_user("alice", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> implicitRoles = e.getImplicitRolesForUser("alice");\n')))),(0,r.kt)("h3",{id:"getimplicitusersforrole"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitUsersForRole()")),(0,r.kt)("p",null,"GetImplicitUsersForRole ottiene tutti gli utenti che ereditano il ruolo.\nRispetto a GetUsersForRole(), questa funzione recupera gli utenti indiretti."),(0,r.kt)("p",null,"Per esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"g, alice, role:admin  \ng, role:admin, role:user  \n")),(0,r.kt)("p",null,'GetUsersForRole("role:user") pu\xf2 ottenere solo: ','["role:admin"]','.\\\nMa GetImplicitUsersForRole("role:user") otterr\xe0: ','["role:admin", "alice"]',"."),(0,r.kt)("p",null,"Per esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'users := e.GetImplicitUsersForRole("role:user")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const users = e.getImplicitUsersForRole("role:user");\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> users = e.getImplicitUsersForRole("role:user");\n')))),(0,r.kt)("h3",{id:"getimplicitpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitPermissionsForUser()")),(0,r.kt)("p",null,"GetImplicitPermissionsForUser ottiene le autorizzazioni implicite per un utente o un ruolo.\\\nRispetto a GetPermissionsForUser(), questa funzione recupera le autorizzazioni per i ruoli ereditati."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read  \np, alice, data2, read  \ng, alice, admin \n")),(0,r.kt)("p",null,'GetPermissionsForUser("alice") pu\xf2 ottenere solo: [','["alice", "data2", "read"]','].\\\nMa GetImplicitPermissionsForUser("alice") otterr\xe0: [','["admin", "data1", "read"]',", ",'["alice", "data2", "read"]',"]."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetImplicitPermissionsForUser("alice")\n'))),(0,r.kt)(u,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'await e.getImplicitPermissionsForUser("alice")\n'))),(0,r.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$e->getImplicitPermissionsForUser("alice");\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_implicit_permissions_for_user("alice")\n'))),(0,r.kt)(u,{value:".NET",label:".NET",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var implicitPermissions = e.GetImplicitPermissionsForUser("alice");\n'))),(0,r.kt)(u,{value:"Rust",label:"Rust",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'e.get_implicit_permissions_for_user("alice", None); // No domain\n'))),(0,r.kt)(u,{value:"Java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<List<String>> implicitPermissions = e.getImplicitPermissionsForUser("alice");\n')))),(0,r.kt)("h3",{id:"getnamedimplicitpermissionsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetNamedImplicitPermissionsForUser()")),(0,r.kt)("p",null,"GetNamedImplicitPermissionsForUser ottiene le autorizzazioni implicite per un utente o un ruolo tramite una politica nominata. Rispetto a GetImplicitPermissionsForUser(), questa funzione ti permette di specificare il nome della politica."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np2, admin, create\ng, alice, admin\n")),(0,r.kt)("p",null,'GetImplicitPermissionsForUser("alice") ottiene solo: [','["admin", "data1", "read"]','], la cui politica \xe8 predefinita come "p"'),(0,r.kt)("p",null,'Ma puoi specificare la politica come "p2" per ottenere: [','["admin", "create"]','] tramite GetNamedImplicitPermissionsForUser("p2","alice")'),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'e.GetNamedImplicitPermissionsForUser("p2","alice")\n'))),(0,r.kt)(u,{value:"Python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'e.get_named_implicit_permissions_for_user("p2", "alice")\n')))),(0,r.kt)("h3",{id:"getdomainsforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetDomainsForUser()")),(0,r.kt)("p",null,"GetDomainsForUser ottiene tutti i domini che un utente possiede."),(0,r.kt)("p",null,"Per esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, domain1, data1, read\np, admin, domain2, data2, read\np, admin, domain2, data2, write\ng, alice, admin, domain1\ng, alice, admin, domain2\n")),(0,r.kt)("p",null,'GetDomainsForUser("alice") potrebbe ottenere ','["domain1", "domain2"]'),(0,r.kt)("p",null,"Per esempio:"),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'result, err := e.GetDomainsForUser("alice")\n')))),(0,r.kt)("h3",{id:"getimplicitresourcesforuser"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitResourcesForUser()")),(0,r.kt)("p",null,"GetImplicitResourcesForUser restituisce tutti i criteri che dovrebbero essere veri per l'utente."),(0,r.kt)("p",null,"Per esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\n\ng, alice, data2_admin\n")),(0,r.kt)("p",null,'GetImplicitResourcesForUser("alice") restituir\xe0'),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'resources, err := e.GetImplicitResourcesForUser("alice")\n')))),(0,r.kt)("h3",{id:"getimplicitusersforpermission"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitUsersForPermission()")),(0,r.kt)("p",null,"GetImplicitUsersForPermission ottiene gli utenti impliciti per un permesso."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, bob, data1, read\ng, alice, admin\n")),(0,r.kt)("p",null,'GetImplicitUsersForPermission("data1", "read") restituir\xe0: ',(0,r.kt)("inlineCode",{parentName:"p"},'["alice", "bob"]'),"."),(0,r.kt)("p",null,'Nota: verranno restituiti solo gli utenti, i ruoli (2\xb0 argomento in "g") saranno esclusi.'),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'users, err := e.GetImplicitUsersForPermission("data1", "read")\n')))),(0,r.kt)("h3",{id:"getallowedobjectconditions"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetAllowedObjectConditions()")),(0,r.kt)("p",null,"GetAllowedObjectConditions restituisce un array di stringhe delle condizioni degli oggetti a cui l'utente pu\xf2 accedere."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, r.obj.price < 25, read\np, admin, r.obj.category_id = 2, read\np, bob, r.obj.author = bob, write\n\ng, alice, admin\n")),(0,r.kt)("p",null,'e.GetAllowedObjectConditions("alice", "read", "r.obj.") restituir\xe0 ',(0,r.kt)("inlineCode",{parentName:"p"},'["price < 25", "category_id = 2"], nil')),(0,r.kt)("p",null,"Nota:"),(0,r.kt)("ol",{start:0},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"prefisso: Puoi personalizzare il prefisso delle condizioni dell'oggetto, e \"r.obj.\" \xe8 comunemente utilizzato come prefisso.\nDopo aver rimosso il prefisso, la parte rimanente \xe8 la condizione dell'oggetto.\nSe esiste una politica obj che non soddisfa il requisito del prefisso, verr\xe0 restituito un ",(0,r.kt)("inlineCode",{parentName:"p"},"errors.ERR_OBJ_CONDITION"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Se l'array 'objectConditions' \xe8 vuoto, restituisci ",(0,r.kt)("inlineCode",{parentName:"p"},"errors.ERR_EMPTY_CONDITION"),"."))),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'conditions, err := e.GetAllowedObjectConditions("alice", "read", "r.obj.")\n')))),(0,r.kt)("h3",{id:"getimplicitusersforresource"},(0,r.kt)("inlineCode",{parentName:"h3"},"GetImplicitUsersForResource()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GetImplicitUsersForResource()")),(0,r.kt)("p",null,"GetImplicitUsersForResource restituisce utenti impliciti basati sul risorsa."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\ng, alice, data2_admin\n")),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)("p",null,'GetImplicitUsersForResource("data2") restituir\xe0 ',(0,r.kt)("inlineCode",{parentName:"p"},'[["bob", "data2", "write"], ["alice", "data2", "read"] ["alice", "data2", "write"]], nil'),"."),(0,r.kt)(m,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'ImplicitUsers, err := e.GetImplicitUsersForResource("data2")\n')))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},'GetImplicitUsersForResource("data1") restituir\xe0 ',(0,r.kt)("inlineCode",{parentName:"p"},'[["alice", "data1", "read"]], nil'),".")))}k.isMDXComponent=!0}}]);