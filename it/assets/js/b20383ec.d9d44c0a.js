"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[4269],{3905:(e,t,i)=>{i.d(t,{Zo:()=>d,kt:()=>m});var r=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,r,a=function(e,t){if(null==e)return{};var i,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)i=n[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var i=e.components,a=e.mdxType,n=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(i),m=a,b=u["".concat(c,".").concat(m)]||u[m]||s[m]||n;return i?r.createElement(b,o(o({ref:t},d),{},{components:i})):r.createElement(b,o({ref:t},d))}));function m(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=i.length,o=new Array(n);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<n;p++)o[p]=i[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,i)}u.displayName="MDXCreateElement"},6798:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var r=i(7462),a=(i(7294),i(3905));const n={id:"priority-model",title:"Priority Model",description:"Modello di Priorit\xe0 di Casbin per la gestione delle politiche con diverse priorit\xe0",keywords:["priority model"],authors:["hsluoyz"]},o=void 0,l={unversionedId:"priority-model",id:"priority-model",title:"Priority Model",description:"Modello di Priorit\xe0 di Casbin per la gestione delle politiche con diverse priorit\xe0",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/PriorityModel.mdx",sourceDirName:".",slug:"/priority-model",permalink:"/it/docs/priority-model",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/PriorityModel.mdx",tags:[],version:"current",frontMatter:{id:"priority-model",title:"Priority Model",description:"Modello di Priorit\xe0 di Casbin per la gestione delle politiche con diverse priorit\xe0",keywords:["priority model"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"LBAC",permalink:"/it/docs/lbac"},next:{title:"Super Admin",permalink:"/it/docs/superadmin"}},c={},p=[{value:"Carica Politica con Priorit\xe0 Implicita",id:"carica-politica-con-priorit\xe0-implicita",level:2},{value:"Carica Politica con Priorit\xe0 Esplicita",id:"carica-politica-con-priorit\xe0-esplicita",level:2},{value:"Carica Politica con Priorit\xe0 Basata su Ruolo e Gerarchia Utente",id:"carica-politica-con-priorit\xe0-basata-su-ruolo-e-gerarchia-utente",level:2}],d={toc:p};function s(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Casbin supporta il caricamento delle politiche con priorit\xe0."),(0,a.kt)("h2",{id:"carica-politica-con-priorit\xe0-implicita"},"Carica Politica con Priorit\xe0 Implicita"),(0,a.kt)("p",null,"\xc8 piuttosto semplice: l'ordine determina la priorit\xe0; le politiche che compaiono prima hanno una priorit\xe0 pi\xf9 alta."),(0,a.kt)("p",null,"model.conf:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_effect]\ne = priority(p.eft) || deny\n")),(0,a.kt)("h2",{id:"carica-politica-con-priorit\xe0-esplicita"},"Carica Politica con Priorit\xe0 Esplicita"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Vedi anche: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/550"},"casbin#550"))),(0,a.kt)("p",null,"Un valore di priorit\xe0 pi\xf9 piccolo indica una priorit\xe0 pi\xf9 alta. Se c'\xe8 un carattere non numerico nella priorit\xe0, verr\xe0 posizionato per ultimo invece di generare un errore."),(0,a.kt)("admonition",{title:"Convenzione del nome del token",type:"info"},(0,a.kt)("p",{parentName:"admonition"},'Il nome del token di priorit\xe0 comunemente utilizzato nella definizione della politica \xe8 "priority". Per utilizzare un nome personalizzato, \xe8 necessario invocare ',(0,a.kt)("inlineCode",{parentName:"p"},"e.SetFieldIndex()")," e ricaricare le politiche (vedi l'esempio completo su ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/pull/1044"},"TestCustomizedFieldIndex"),")."),(0,a.kt)("p",{parentName:"admonition"},"model.conf:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[policy_definition]\np = customized_priority, sub, obj, act, eft\n")),(0,a.kt)("p",{parentName:"admonition"},"Esempio di codice Golang:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e, _ := NewEnforcer("./example/priority_model_explicit_customized.conf",\n                    "./example/priority_policy_explicit_customized.csv")\n// Due to the customized priority token, the enforcer fails to handle the priority.\nok, err := e.Enforce("bob", "data2", "read") // the result will be `true, nil`\n// Set PriorityIndex and reload\ne.SetFieldIndex("p", constant.PriorityIndex, 0)\nerr := e.LoadPolicy()\nif err != nil {\n    log.Fatalf("LoadPolicy: %v", err)\n}\nok, err := e.Enforce("bob", "data2", "read") // the result will be `false, nil`\n'))),(0,a.kt)("p",null,"Attualmente, la priorit\xe0 esplicita supporta solo ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPolicy")," e ",(0,a.kt)("inlineCode",{parentName:"p"},"AddPolicies"),". Se ",(0,a.kt)("inlineCode",{parentName:"p"},"UpdatePolicy")," \xe8 stato chiamato, non dovresti cambiare l'attributo di priorit\xe0."),(0,a.kt)("p",null,"model.conf:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = priority, sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,a.kt)("p",null,"policy.csv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"p, 10, data1_deny_group, data1, read, deny\np, 10, data1_deny_group, data1, write, deny\np, 10, data2_allow_group, data2, read, allow\np, 10, data2_allow_group, data2, write, allow\n\n\np, 1, alice, data1, write, allow\np, 1, alice, data1, read, allow\np, 1, bob, data2, read, deny\n\ng, bob, data2_allow_group\ng, alice, data1_deny_group\n")),(0,a.kt)("p",null,"richiesta:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"alice, data1, write --\x3e true // because `p, 1, alice, data1, write, allow` has the highest priority\nbob, data2, read --\x3e false\nbob, data2, write --\x3e true // because bob has the role of `data2_allow_group` which has the right to write data2, and there's no deny policy with higher priority \n")),(0,a.kt)("h2",{id:"carica-politica-con-priorit\xe0-basata-su-ruolo-e-gerarchia-utente"},"Carica Politica con Priorit\xe0 Basata su Ruolo e Gerarchia Utente"),(0,a.kt)("p",null,"La struttura ereditata di ruoli e utenti pu\xf2 essere solo un insieme di alberi multipli, non grafi. Se un utente ha pi\xf9 ruoli, devi assicurarti che l'utente abbia lo stesso livello in diversi alberi. Se due ruoli hanno lo stesso livello, la politica (associata al ruolo) che appare prima ha una priorit\xe0 maggiore. Per maggiori dettagli, consulta anche ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/pull/833"},"casbin#833")," e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/issues/831"},"casbin#831"),"."),(0,a.kt)("p",null,"model.conf:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = subjectPriority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act \n")),(0,a.kt)("p",null,"policy.csv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"p, root, data1, read, deny\np, admin, data1, read, deny\n\np, editor, data1, read, deny\np, subscriber, data1, read, deny\n\np, jane, data1, read, allow\np, alice, data1, read, allow\n\ng, admin, root\n\ng, editor, admin\ng, subscriber, admin\n\ng, jane, editor\ng, alice, subscriber \n")),(0,a.kt)("p",null,"Richiesta:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csv"},"jane, data1, read --\x3e true // because jane is at the bottom, her priority is higher than that of editor, admin, and root\nalice, data1, read --\x3e true\n")),(0,a.kt)("p",null,"La gerarchia dei ruoli \xe8 simile a questa:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"role: root\n \u2514\u2500 role: admin\n    \u251c\u2500 role editor\n    \u2502  \u2514\u2500 user: jane\n    \u2502\n    \u2514\u2500 role: subscriber\n       \u2514\u2500 user: alice\n")),(0,a.kt)("p",null,"La priorit\xe0 si presenta automaticamente in questo modo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"role: root                 # auto priority: 30\n \u2514\u2500 role: admin            # auto priority: 20\n     \u251c\u2500 role: editor       # auto priority: 10\n     \u2514\u2500 role: subscriber   # auto priority: 10\n")))}s.isMDXComponent=!0}}]);