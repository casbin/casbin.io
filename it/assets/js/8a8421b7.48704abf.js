"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[7860],{3905:(e,i,a)=>{a.d(i,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,i,a){return i in e?Object.defineProperty(e,i,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[i]=a,e}function t(e,i){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);i&&(n=n.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var i=1;i<arguments.length;i++){var a=null!=arguments[i]?arguments[i]:{};i%2?t(Object(a),!0).forEach((function(i){r(e,i,a[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(a,i))}))}return e}function l(e,i){if(null==e)return{};var a,n,r=function(e,i){if(null==e)return{};var a,n,r={},t=Object.keys(e);for(n=0;n<t.length;n++)a=t[n],i.indexOf(a)>=0||(r[a]=e[a]);return r}(e,i);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)a=t[n],i.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var i=n.useContext(c),a=i;return e&&(a="function"==typeof e?e(i):o(o({},i),e)),a},p=function(e){var i=s(e.components);return n.createElement(c.Provider,{value:i},e.children)},d={inlineCode:"code",wrapper:function(e){var i=e.children;return n.createElement(n.Fragment,{},i)}},u=n.forwardRef((function(e,i){var a=e.components,r=e.mdxType,t=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(a),m=r,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||t;return a?n.createElement(f,o(o({ref:i},p),{},{components:a})):n.createElement(f,o({ref:i},p))}));function m(e,i){var a=arguments,r=i&&i.mdxType;if("string"==typeof e||r){var t=a.length,o=new Array(t);o[0]=u;var l={};for(var c in i)hasOwnProperty.call(i,c)&&(l[c]=i[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<t;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5646:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const t={id:"api-overview",title:"API Overview",description:"Utilizzo dell'API Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},o=void 0,l={unversionedId:"api-overview",id:"api-overview",title:"API Overview",description:"Utilizzo dell'API Casbin",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/APIOverview.mdx",sourceDirName:".",slug:"/api-overview",permalink:"/it/docs/api-overview",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/APIOverview.mdx",tags:[],version:"current",frontMatter:{id:"api-overview",title:"API Overview",description:"Utilizzo dell'API Casbin",keywords:["API overview","API","API usage"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"API",permalink:"/it/docs/category/api"},next:{title:"Management API",permalink:"/it/docs/management-api"}},c={},s=[{value:"Applicazione delle API",id:"applicazione-delle-api",level:2},{value:"EnforceEx API",id:"enforceex-api",level:2},{value:"API di Gestione",id:"api-di-gestione",level:2},{value:"API di Recupero",id:"api-di-recupero",level:3},{value:"Aggiungi, Elimina, Aggiorna API",id:"aggiungi-elimina-aggiorna-api",level:3},{value:"API AddEx",id:"api-addex",level:3},{value:"RBAC API",id:"rbac-api",level:2}],p={toc:s};function d(e){let{components:i,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:i,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Questa panoramica mostra solo come utilizzare le API di Casbin e non spiega come Casbin viene installato o come funziona. Puoi trovare quei tutorial qui: ",(0,r.kt)("a",{parentName:"p",href:"/docs/get-started"},"Installazione di Casbin")," e ",(0,r.kt)("a",{parentName:"p",href:"/docs/how-it-works"},"Come Funziona Casbin"),". Quindi, quando inizi a leggere questo tutorial, supponiamo che tu abbia installato e importato completamente Casbin nel tuo codice."),(0,r.kt)("h2",{id:"applicazione-delle-api"},"Applicazione delle API"),(0,r.kt)("p",null,"Iniziamo con le API di Enforce di Casbin. Caricheremo un modello RBAC dal file ",(0,r.kt)("inlineCode",{parentName:"p"},"model.conf")," e caricheremo le politiche dal file ",(0,r.kt)("inlineCode",{parentName:"p"},"policy.csv"),". Puoi imparare la sintassi del Modello ",(0,r.kt)("a",{parentName:"p",href:"/docs/syntax-for-models"},"qui"),", e non ne parleremo in questo tutorial. Supponiamo che tu possa capire i file di configurazione forniti di seguito:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"model.conf")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"policy.csv")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csv"},"p, admin, data1, read\np, admin, data1, write\np, admin, data2, read\np, admin, data2, write\np, alice, data1, read\np, bob, data2, write\ng, amber, admin\ng, abc, admin\n")),(0,r.kt)("p",null,"Dopo aver letto i file di configurazione, leggi il seguente codice."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// Load information from files.\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    log.Fatalf("Error, detail: %s", err)\n}\nok, err := enforcer.Enforce("alice", "data1", "read")\n')),(0,r.kt)("p",null,"Questo codice carica il modello di controllo degli accessi e le politiche dai file locali. La funzione ",(0,r.kt)("inlineCode",{parentName:"p"},"casbin.NewEnforcer()")," restituir\xe0 un enforcer. Riconoscer\xe0 i suoi due parametri come percorsi di file e caricher\xe0 i file da l\xec. Gli errori che si verificano nel processo sono memorizzati nella variabile ",(0,r.kt)("inlineCode",{parentName:"p"},"err"),". Questo codice utilizza l'adattatore predefinito per caricare il modello e le politiche, e ovviamente, puoi ottenere lo stesso risultato utilizzando un adattatore di terze parti."),(0,r.kt)("p",null,"Il codice ",(0,r.kt)("inlineCode",{parentName:"p"},'ok, err := enforcer.Enforce("alice", "data1", "read")')," viene utilizzato per confermare le autorizzazioni di accesso. Se Alice pu\xf2 accedere a data1 con l'operazione di lettura, il valore restituito di ",(0,r.kt)("inlineCode",{parentName:"p"},"ok")," sar\xe0 ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"; in caso contrario, sar\xe0 ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),". In questo esempio, il valore di ",(0,r.kt)("inlineCode",{parentName:"p"},"ok")," \xe8 ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("h2",{id:"enforceex-api"},"EnforceEx API"),(0,r.kt)("p",null,"A volte potresti chiederti quale politica abbia permesso la richiesta, quindi abbiamo preparato la funzione ",(0,r.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),". Puoi utilizzarla in questo modo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'ok, reason, err := enforcer.EnforceEx("amber", "data1", "read")\nfmt.Println(ok, reason) // true [admin data1 read]\n')),(0,r.kt)("p",null,"La funzione ",(0,r.kt)("inlineCode",{parentName:"p"},"EnforceEx()")," restituir\xe0 la stringa esatta della politica nel valore di ritorno ",(0,r.kt)("inlineCode",{parentName:"p"},"reason"),". In questo esempio, ",(0,r.kt)("inlineCode",{parentName:"p"},"amber")," ha il ruolo di ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),", quindi la policy ",(0,r.kt)("inlineCode",{parentName:"p"},"p, admin, data1, read")," ha permesso che questa richiesta fosse ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". L'output di questo codice \xe8 nel commento."),(0,r.kt)("p",null,"Casbin ha fornito molte API simili a questa. Queste API aggiungono alcune funzioni extra rispetto a quelle di base. Esse includono:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ok, err := enforcer.EnforceWithMatcher(matcher, request)")),(0,r.kt)("p",{parentName:"li"},"Questa funzione utilizza un matcher.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"ok, reason, err := enforcer.EnforceExWithMatcher(matcher, request)")),(0,r.kt)("p",{parentName:"li"},"Questa \xe8 una combinazione di ",(0,r.kt)("inlineCode",{parentName:"p"},"EnforceWithMatcher()")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"EnforceEx()"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"boolArray, err := enforcer.BatchEnforce(requests)")),(0,r.kt)("p",{parentName:"li"},"Questa funzione permette di avere una lista di lavori e restituisce un array."))),(0,r.kt)("p",null,"Questo \xe8 un caso d'uso semplice di Casbin. Puoi utilizzare Casbin per avviare un server di autorizzazione utilizzando queste API. Ti mostreremo alcuni altri tipi di API nei paragrafi seguenti."),(0,r.kt)("h2",{id:"api-di-gestione"},"API di Gestione"),(0,r.kt)("h3",{id:"api-di-recupero"},"API di Recupero"),(0,r.kt)("p",null,"Queste API vengono utilizzate per recuperare oggetti specifici nelle politiche. In questo esempio, stiamo caricando un enforcer e recuperando qualcosa da esso."),(0,r.kt)("p",null,"Dai un'occhiata al seguente codice:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\nallSubjects := enforcer.GetAllSubjects()\nfmt.Println(allSubjects)\n')),(0,r.kt)("p",null,"Simile all'esempio precedente, le prime quattro righe vengono utilizzate per caricare le informazioni necessarie dai file locali. Non discuteremo ulteriormente quello qui."),(0,r.kt)("p",null,"Il codice ",(0,r.kt)("inlineCode",{parentName:"p"},"allSubjects := enforcer.GetAllSubjects()")," recupera tutti i soggetti nel file di policy e li restituisce come un array. Quindi stampiamo quell'array."),(0,r.kt)("p",null,"Tipicamente, l'output del codice dovrebbe essere:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"[admin alice bob]\n")),(0,r.kt)("p",null,"Puoi anche cambiare la funzione ",(0,r.kt)("inlineCode",{parentName:"p"},"GetAllSubjects()")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"GetAllNamedSubjects()")," per ottenere la lista dei soggetti che compaiono nella policy nominata corrente."),(0,r.kt)("p",null,"Allo stesso modo, abbiamo preparato funzioni ",(0,r.kt)("inlineCode",{parentName:"p"},"GetAll")," per ",(0,r.kt)("inlineCode",{parentName:"p"},"Objects, Actions, Roles"),". Per accedere a queste funzioni, devi semplicemente sostituire la parola ",(0,r.kt)("inlineCode",{parentName:"p"},"Subject")," nel nome della funzione con la categoria desiderata."),(0,r.kt)("p",null,"Inoltre, ci sono pi\xf9 getter disponibili per le policy. Il metodo di chiamata e i valori di ritorno sono simili a quelli menzionati sopra."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"policy = e.GetPolicy()")," recupera tutte le regole di autorizzazione nella policy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'filteredPolicy := e.GetFilteredPolicy(0, "alice")')," recupera tutte le regole di autorizzazione nella policy con filtri di campo specificati."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'namedPolicy := e.GetNamedPolicy("p")')," recupera tutte le regole di autorizzazione nella policy nominata."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'filteredNamedPolicy = e.GetFilteredNamedPolicy("p", 0, "bob")')," recupera tutte le regole di autorizzazione nella policy nominata con filtri di campo specificati."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"groupingPolicy := e.GetGroupingPolicy()")," recupera tutte le regole di ereditariet\xe0 del ruolo nella policy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'filteredGroupingPolicy := e.GetFilteredGroupingPolicy(0, "alice")')," recupera tutte le regole di ereditariet\xe0 del ruolo nella policy con filtri di campo specificati."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetNamedGroupingPolicy("g")')," recupera tutte le regole di ereditariet\xe0 del ruolo nella policy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'namedGroupingPolicy := e.GetFilteredNamedGroupingPolicy("g", 0, "alice")')," recupera tutte le regole di ereditariet\xe0 del ruolo nella policy con filtri di campo specificati.")),(0,r.kt)("h3",{id:"aggiungi-elimina-aggiorna-api"},"Aggiungi, Elimina, Aggiorna API"),(0,r.kt)("p",null,"Casbin fornisce una variet\xe0 di API per aggiungere, eliminare o modificare dinamicamente le policy in fase di runtime."),(0,r.kt)("p",null,"Il seguente codice dimostra come aggiungere, rimuovere e aggiornare le policy, nonch\xe9 come verificare se una policy esiste:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// load information from files\nenforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n\n// add a policy and use HasPolicy() to confirm\nenforcer.AddPolicy("added_user", "data1", "read")\nhasPolicy := enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // true, the policy was added successfully\n\n// remove a policy and use HasPolicy() to confirm\nenforcer.RemovePolicy("alice", "data1", "read")\nhasPolicy = enforcer.HasPolicy("alice", "data1", "read")\nfmt.Println(hasPolicy) // false, the policy was removed successfully\n\n// update a policy and use HasPolicy() to confirm\nenforcer.UpdatePolicy([]string{"added_user", "data1", "read"}, []string{"added_user", "data1", "write"})\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "read")\nfmt.Println(hasPolicy) // false, the original policy has expired\nhasPolicy = enforcer.HasPolicy("added_user", "data1", "write")\nfmt.Println(hasPolicy) // true, the new policy is in effect\n')),(0,r.kt)("p",null,"Utilizzando queste API, puoi modificare dinamicamente le tue politiche. Allo stesso modo, abbiamo fornito API simili per ",(0,r.kt)("inlineCode",{parentName:"p"},"FilteredPolicy, NamedPolicy, FilteredNamedPolicy, GroupingPolicy, NamedGroupingPolicy, FilteredGroupingPolicy, FilteredNamedGroupingPolicy"),". Per utilizzarle, sostituisci semplicemente la parola ",(0,r.kt)("inlineCode",{parentName:"p"},"Policy")," nel nome della funzione con la categoria appropriata."),(0,r.kt)("p",null,"Inoltre, modificando i parametri in array, puoi eseguire la modifica batch delle tue politiche."),(0,r.kt)("p",null,"Ad esempio, considera funzioni come questa:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicy([]string{"eve", "data3", "read"}, []string{"eve", "data3", "write"})\n')),(0,r.kt)("p",null,"Se cambiamo ",(0,r.kt)("inlineCode",{parentName:"p"},"Policy")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"Policies")," e modifichiamo i parametri come segue:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.UpdatePolicies([][]string{{"eve", "data3", "read"}, {"jack", "data3", "read"}}, [][]string{{"eve", "data3", "write"}, {"jack", "data3", "write"}})\n')),(0,r.kt)("p",null,"allora possiamo eseguire la modifica batch di queste politiche."),(0,r.kt)("p",null,"Le stesse operazioni possono essere applicate anche a ",(0,r.kt)("inlineCode",{parentName:"p"},"GroupingPolicy, NamedGroupingPolicy"),"."),(0,r.kt)("h3",{id:"api-addex"},"API AddEx"),(0,r.kt)("p",null,"Casbin fornisce la serie di API AddEx per aiutare gli utenti ad aggiungere regole in batch."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"AddPoliciesEx(rules [][]string) (bool, error)\nAddNamedPoliciesEx(ptype string, rules [][]string) (bool, error)\nAddGroupingPoliciesEx(rules [][]string) (bool, error)\nAddNamedGroupingPoliciesEx(ptype string, rules [][]string) (bool, error)\nSelfAddPoliciesEx(sec string, ptype string, rules [][]string) (bool, error) \n")),(0,r.kt)("p",null,"La differenza tra questi metodi e i metodi senza il suffisso Ex \xe8 che se una delle regole esiste gi\xe0, continueranno a verificare la regola successiva invece di restituire false immediatamente."),(0,r.kt)("p",null,"Ad esempio, confrontiamo ",(0,r.kt)("inlineCode",{parentName:"p"},"AddPolicies")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"AddPoliciesEx"),"."),(0,r.kt)("p",null,"Puoi eseguire e osservare il seguente codice copiandolo nel test sotto casbin."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func TestDemo(t *testing.T) {\n    e, err := NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n    if err != nil {\n        fmt.Printf("Error, details: %s\\n", err)\n    }\n    e.ClearPolicy()\n    e.AddPolicy("user1", "data1", "read")\n    fmt.Println(e.GetPolicy())\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // policy {"user1", "data1", "read"} now exists\n\n    // Use AddPolicies to add rules in batches\n    ok, _ := e.AddPolicies([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} failed to add because {"user1", "data1", "read"} already exists\n    // AddPolicies returns false and no other policies are checked, even though they may not exist in the existing ruleset\n    // ok == false\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}})\n\n    // Use AddPoliciesEx to add rules in batches\n    ok, _ = e.AddPoliciesEx([][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n    fmt.Println(e.GetPolicy())\n    // {"user2", "data2", "read"} is added successfully\n    // because AddPoliciesEx automatically filters the existing {"user1", "data1", "read"}\n    // ok == true\n    fmt.Println(ok)\n    testGetPolicy(t, e, [][]string{{"user1", "data1", "read"}, {"user2", "data2", "read"}})\n}\n')),(0,r.kt)("h2",{id:"rbac-api"},"RBAC API"),(0,r.kt)("p",null,"Casbin fornisce alcune API per consentirti di modificare il modello e le politiche RBAC. Se sei familiare con RBAC, puoi facilmente utilizzare queste API."),(0,r.kt)("p",null,"Qui, ti mostriamo solo come utilizzare le API RBAC di Casbin e non parleremo di RBAC stesso. Puoi ottenere maggiori dettagli ",(0,r.kt)("a",{parentName:"p",href:"/docs/rbac"},"qui"),"."),(0,r.kt)("p",null,"Utilizziamo il seguente codice per caricare il modello e le politiche, proprio come prima."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'enforcer, err := casbin.NewEnforcer("./example/model.conf", "./example/policy.csv")\nif err != nil {\n    fmt.Printf("Error, details: %s\\n", err)\n}\n')),(0,r.kt)("p",null,"Quindi, possiamo utilizzare un'istanza dell'Enforcer ",(0,r.kt)("inlineCode",{parentName:"p"},"enforcer")," per accedere a queste API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'roles, err := enforcer.GetRolesForUser("amber")\nfmt.Println(roles) // [admin]\nusers, err := enforcer.GetUsersForRole("admin")\nfmt.Println(users) // [amber abc]\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GetRolesForUser()")," restituisce un array che contiene tutti i ruoli che amber ha. In questo esempio, amber ha solo un ruolo, che \xe8 admin, quindi l'array ",(0,r.kt)("inlineCode",{parentName:"p"},"roles")," \xe8 ",(0,r.kt)("inlineCode",{parentName:"p"},"[admin]"),". Allo stesso modo, puoi utilizzare ",(0,r.kt)("inlineCode",{parentName:"p"},"GetUsersForRole()")," per ottenere gli utenti che appartengono a un ruolo. Il valore di ritorno di questa funzione \xe8 anche un array."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'enforcer.HasRoleForUser("amber", "admin") // true\n')),(0,r.kt)("p",null,"Puoi utilizzare ",(0,r.kt)("inlineCode",{parentName:"p"},"HasRoleForUser()")," per confermare se l'utente appartiene al ruolo. In questo esempio, amber \xe8 un membro di admin, quindi il valore di ritorno della funzione \xe8 ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("bob", "data2", "write")) // true\nenforcer.DeletePermission("data2", "write")\nfmt.Println(enforcer.Enforce("bob", "data2", "write")) // false\n')),(0,r.kt)("p",null,"Puoi utilizzare ",(0,r.kt)("inlineCode",{parentName:"p"},"DeletePermission()")," per eliminare un permesso."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'fmt.Println(enforcer.Enforce("alice", "data1", "read")) // true\nenforcer.DeletePermissionForUser("alice", "data1", "read")\nfmt.Println(enforcer.Enforce("alice", "data1", "read")) // false\n')),(0,r.kt)("p",null,"E utilizzare ",(0,r.kt)("inlineCode",{parentName:"p"},"DeletePermissionForUser()")," per eliminare un permesso per un utente."),(0,r.kt)("p",null,"Casbin ha molte API come queste. I loro metodi di chiamata e i valori di ritorno hanno lo stesso stile delle API sopra menzionate. Puoi trovare queste API nei ",(0,r.kt)("a",{parentName:"p",href:"/docs/rbac-api"},"prossimi documenti"),"."))}d.isMDXComponent=!0}}]);