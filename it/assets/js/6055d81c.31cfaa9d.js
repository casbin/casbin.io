"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[8557],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>u});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},f=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,m=d["".concat(p,".").concat(u)]||d[u]||s[u]||a;return n?i.createElement(m,o(o({ref:t},f),{},{components:n})):i.createElement(m,o({ref:t},f))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6590:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={id:"effector",title:"Effector",description:"L'interfaccia Effector in Casbin",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},o=void 0,l={unversionedId:"effector",id:"effector",title:"Effector",description:"L'interfaccia Effector in Casbin",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/Effector.mdx",sourceDirName:".",slug:"/effector",permalink:"/it/docs/effector",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/Effector.mdx",tags:[],version:"current",frontMatter:{id:"effector",title:"Effector",description:"L'interfaccia Effector in Casbin",keywords:["effector","Effect","MergeEffects"],authors:["ErikQQY"]},sidebar:"docs",previous:{title:"Syntax for Models",permalink:"/it/docs/syntax-for-models"},next:{title:"Functions",permalink:"/it/docs/function"}},p={},c=[{value:"<code>MergeEffects()</code>",id:"mergeeffects",level:2}],f=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},s=f("Tabs"),d=f("TabItem"),u={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"L'",(0,r.kt)("inlineCode",{parentName:"p"},"Effetto")," rappresenta il risultato di una regola di politica, e l'",(0,r.kt)("inlineCode",{parentName:"p"},"Effettuatore")," \xe8 l'interfaccia per gestire gli effetti in Casbin."),(0,r.kt)("h2",{id:"mergeeffects"},(0,r.kt)("inlineCode",{parentName:"h2"},"MergeEffects()")),(0,r.kt)("p",null,"La funzione ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeEffects()")," viene utilizzata per unire tutti i risultati di corrispondenza raccolti dall'enforcer in una singola decisione."),(0,r.kt)("p",null,"Ad esempio:"),(0,r.kt)(s,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(d,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"Effect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,r.kt)("p",null,"In questo esempio:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Effetto")," \xe8 la decisione finale che viene unita da questa funzione (inizializzata come ",(0,r.kt)("inlineCode",{parentName:"li"},"Indeterminato"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"explainIndex")," \xe8 l'indice di ",(0,r.kt)("inlineCode",{parentName:"li"},"eft")," (",(0,r.kt)("inlineCode",{parentName:"li"},"Consenti")," o ",(0,r.kt)("inlineCode",{parentName:"li"},"Nega"),"), e viene inizializzato come ",(0,r.kt)("inlineCode",{parentName:"li"},"-1"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"err")," viene utilizzato per verificare se l'effetto \xe8 supportato."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expr")," \xe8 la rappresentazione in stringa degli effetti della politica."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"effects")," \xe8 un array di effetti, che pu\xf2 essere ",(0,r.kt)("inlineCode",{parentName:"li"},"Consenti"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Indeterminato"),", o ",(0,r.kt)("inlineCode",{parentName:"li"},"Nega"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"matches")," \xe8 un array che indica se il risultato corrisponde alla policy."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"policyIndex")," \xe8 l'indice della policy nel modello."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"policyLength")," \xe8 la lunghezza della policy.")),(0,r.kt)("p",null,"Il codice sopra illustra come passare i parametri alla funzione ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeEffects()"),", e la funzione processer\xe0 gli effetti e le corrispondenze in base all'",(0,r.kt)("inlineCode",{parentName:"p"},"expr"),"."),(0,r.kt)("p",null,"Per utilizzare l'",(0,r.kt)("inlineCode",{parentName:"p"},"Effector"),", segui questi passaggi:"),(0,r.kt)(s,{groupId:"langs",mdxType:"Tabs"},(0,r.kt)(d,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"var e Effector\nEffect, explainIndex, err = e.MergeEffects(expr, effects, matches, policyIndex, policyLength)\n")))),(0,r.kt)("p",null,"L'idea di base di ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeEffects()")," \xe8 che se l'",(0,r.kt)("inlineCode",{parentName:"p"},"expr")," pu\xf2 corrispondere ai risultati, indicando che il ",(0,r.kt)("inlineCode",{parentName:"p"},"p_eft")," \xe8 ",(0,r.kt)("inlineCode",{parentName:"p"},"allow"),", allora tutti gli effetti possono essere fusi. Se nessuna regola di negazione \xe8 abbinata, allora la decisione \xe8 di consentire."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Se l'",(0,r.kt)("inlineCode",{parentName:"p"},"expr")," non corrisponde alla condizione ",(0,r.kt)("inlineCode",{parentName:"p"},'"priority(p_eft) || deny"'),", e il ",(0,r.kt)("inlineCode",{parentName:"p"},"policyIndex")," \xe8 pi\xf9 corto di ",(0,r.kt)("inlineCode",{parentName:"p"},"policyLength-1"),", si ",(0,r.kt)("strong",{parentName:"p"},"cortocircuiteranno")," alcuni effetti nel mezzo.")))}m.isMDXComponent=!0}}]);