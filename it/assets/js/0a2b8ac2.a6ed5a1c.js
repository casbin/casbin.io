"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[3674],{2549:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2021/08/19/apisix-casbin-authorization","metadata":{"permalink":"/it/blog/2021/08/19/apisix-casbin-authorization","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/it/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md","source":"@site/i18n/it/docusaurus-plugin-content-blog/2021-08-19-apisix-casbin-authorization.md","title":"Autorizzazione in APISIX utilizzando Casbin","description":"Introduzione","date":"2021-08-19T00:00:00.000Z","formattedDate":"19 agosto 2021","tags":[],"readingTime":5.54,"hasTruncateMarker":false,"authors":[{"name":"Rushikesh Tote","title":"Membro di Casbin","url":"http://github.com/rushitote","imageURL":"https://avatars.githubusercontent.com/rushitote"}],"frontMatter":{"title":"Autorizzazione in APISIX utilizzando Casbin","author":"Rushikesh Tote","authorTitle":"Membro di Casbin","authorURL":"http://github.com/rushitote","authorImageURL":"https://avatars.githubusercontent.com/rushitote"},"nextItem":{"title":"Yang Luo - Vincitore del Google Open Source Peer Bonus","permalink":"/it/blog/2020/04/21/google-award"}},"content":"## Introduzione\\n\\n[APISIX](https://apisix.apache.org/) \xe8 un gateway API cloud nativo ad alte prestazioni e scalabile basato su Nginx e etcd. \xc8 un progetto open source della Apache Software Foundation. Oltre a ci\xf2, ci\xf2 che rende APISIX cos\xec buono \xe8 il supporto di molti ottimi plugin integrati che possono essere utilizzati per implementare funzionalit\xe0 come autenticazione, monitoraggio, routing, ecc. E il fatto che i plugin in APISIX siano ricaricati in modalit\xe0 \\"hot\\" (senza riavvii) lo rende molto dinamico.\\n\\nTuttavia, durante l\'uso di APISIX, potrebbero verificarsi scenari in cui potresti voler aggiungere logica di autorizzazione complessa nella tua applicazione. Questo \xe8 dove authz-casbin potrebbe aiutarti, authz-casbin \xe8 un plugin di APISIX basato su [Lua Casbin](https://github.com/casbin/lua-casbin/) che abilita un\'autorizzazione potente basata su vari modelli di controllo degli accessi. [Casbin](/) \xe8 una libreria di autorizzazione che supporta modelli di controllo degli accessi come ACL, RBAC, ABAC. Inizialmente scritto in Go, \xe8 stato portato in molte lingue e Lua Casbin \xe8 l\'implementazione Lua di Casbin. Lo sviluppo di authz-casbin \xe8 iniziato quando abbiamo proposto un nuovo plugin per l\'autorizzazione nel repository di APISIX ([#4674](https://github.com/apache/apisix/issues/4674)) a cui i membri core hanno dato il loro consenso. E dopo le utili revisioni che hanno portato a alcune modifiche e miglioramenti principali, la PR ([#4710](https://github.com/apache/apisix/pull/4710)) \xe8 stata finalmente unita.\\n\\nIn questo blog, useremo il plugin authz-casbin per mostrare come puoi implementare un modello di autorizzazione basato sul Controllo degli Accessi Basato sui Ruoli (RBAC) in APISIX.\\n\\n**NOTA**: Dovrai utilizzare qualche altro plugin o flusso di lavoro personalizzato per autenticare l\'utente poich\xe9 Casbin far\xe0 solo autorizzazione e non autenticazione.\\n\\n## Creazione di un modello\\n\\nIl plugin utilizza tre parametri per autorizzare qualsiasi richiesta - soggetto, oggetto e azione. Qui, il soggetto \xe8 il valore dell\'intestazione del nome utente, che potrebbe essere qualcosa come `[username: alice]`. Quindi, l\'oggetto \xe8 il percorso URL che viene acceduto e l\'azione \xe8 il metodo di richiesta utilizzato.\\n\\nDiciamo che vogliamo creare un modello con tre risorse nei percorsi - ``/`\\\\`, ``/res1`\\\\` e ``/res2`\\\\`. E vogliamo avere un modello come questo:\\n\\n![immagine](/img/blog/model.png)\\n\\nCi\xf2 significherebbe che tutti gli utenti (``*`\\\\`) come ad esempio ``jack`\\\\` possono accedere alla homepage (``/`\\\\`). E gli utenti con autorizzazioni di ``admin`\\\\` come ``alice`\\\\` e ``bob`\\\\` possono accedere a tutte le pagine e le risorse (come ``res1`\\\\` e ``res2`\\\\`). Inoltre, limitiamo gli utenti senza alcuna autorizzazione di amministratore all\'uso solo del metodo di richiesta ``GET`\\\\`. Per questo scenario, potremmo definire il modello come:\\n\\n```ini\\n[request_definition]\\nr = sub, obj, act\\n\\n[policy_definition]\\np = sub, obj, act\\n\\n[role_definition]\\ng = _, _\\n\\n[policy_effect]\\ne = some(where (p.eft == allow))\\n\\n[matchers]\\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\n```\\n\\n## Creazione di una politica\\n\\nDallo scenario sopra descritto, la politica sarebbe:\\n\\n```csv\\np, *, /, GET\\np, admin, *, *\\ng, alice, admin\\ng, bob, admin\\n```\\n\\nIl matcher dal modello significa:\\n\\n1. ``(g(r.sub, p.sub) || keyMatch(r.sub, p.sub))`\\\\`: O il soggetto della richiesta ha un ruolo come il soggetto della politica o il soggetto della richiesta corrisponde al soggetto della politica in ``keyMatch`\\\\`. ``keyMatch`\\\\` \xe8 una funzione incorporata in Lua Casbin, puoi dare un\'occhiata alla descrizione della funzione e ad altre funzioni simili che potrebbero essere utili [qui](https://github.com/casbin/lua-casbin/blob/master/src/util/BuiltInFunctions.lua).\\n2. ``keyMatch(r.obj, p.obj)`\\\\`: L\'oggetto della richiesta corrisponde all\'oggetto della politica (percorso URL qui).\\n3. ``keyMatch(r.act, p.act)`\\\\`: L\'azione della richiesta corrisponde all\'azione della politica (metodo di richiesta HTTP qui).\\n\\n## Abilitazione del plugin sulla route\\n\\nUna volta creato il modello e la politica, puoi abilitarlo su una route utilizzando l\'API di amministrazione di APISIX. Per abilitarlo utilizzando i percorsi dei file del modello e del policy:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"model_path\\": \\"/path/to/model.conf\\",\\n            \\"policy_path\\": \\"/path/to/policy.csv\\",\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127.0.0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/*\\"\\n}\'\\n```\\n\\nQui, il campo username \xe8 il nome dell\'intestazione che utilizzerai per passare il soggetto. Ad esempio, se passer\xe0 l\'intestazione username come `user: alice`, dovresti usare `\\"username\\": \\"user\\"`.\\n\\nPer utilizzare il testo del modello/policy invece dei file, puoi utilizzare i campi `model` e `policy` al posto di:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"model\\": \\"[request_definition]\\n            r = sub, obj, act\\n\\n            [policy_definition]\\n            p = sub, obj, act\\n\\n            [role_definition]\\n            g = _, _\\n\\n            [policy_effect]\\n            e = some(where (p.eft == allow))\\n\\n            [matchers]\\n            m = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\",\\n\\n            \\"policy\\": \\"p, *, /, GET\\n            p, admin, *, *\\n            g, alice, admin\\n            g, bob, admin\\",\\n\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127.0.0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/*\\"\\n}\'\\n```\\n\\n## Abilitazione del plugin utilizzando un modello/policy globale\\n\\nPotrebbero esserci situazioni in cui potresti voler utilizzare una singola configurazione di modello e policy su pi\xf9 route. Puoi farlo prima inviando una richiesta `PUT` per aggiungere la configurazione del modello e della policy ai metadati del plugin:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/plugin_metadata/authz-casbin -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -i -X PUT -d \'\\n{\\n\\"model\\": \\"[request_definition]\\nr = sub, obj, act\\n\\n[policy_definition]\\np = sub, obj, act\\n\\n[role_definition]\\ng = _, _\\n\\n[policy_effect]\\ne = some(where (p.eft == allow))\\n\\n[matchers]\\nm = (g(r.sub, p.sub) || keyMatch(r.sub, p.sub)) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act)\\",\\n\\n\\"policy\\": \\"p, *, /, GET\\np, admin, *, *\\ng, alice, admin\\ng, bob, admin\\"\\n}\'\\n```\\n\\nE poi per abilitare la stessa configurazione su una rotta, invia una richiesta utilizzando l\'API di Admin:\\n\\n```sh\\ncurl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\\n{\\n    \\"plugins\\": {\\n        \\"authz-casbin\\": {\\n            \\"username\\": \\"username\\"\\n        }\\n    },\\n    \\"upstream\\": {\\n        \\"nodes\\": {\\n            \\"127.0.0.1:1980\\": 1\\n        },\\n        \\"type\\": \\"roundrobin\\"\\n    },\\n    \\"uri\\": \\"/route1/*\\"\\n}\'\\n```\\n\\nQuesto aggiunger\xe0 la configurazione dei metadati del plugin alla rotta. Puoi anche facilmente aggiornare la configurazione dei metadati del plugin rispedendo la richiesta ai metadati del plugin con la configurazione del modello e della politica aggiornati, il plugin aggiorner\xe0 automaticamente tutte le rotte che utilizzano i metadati del plugin.\\n\\n## Casi d\'uso\\n\\n- Il caso d\'uso principale di questo plugin sarebbe nell\'implementazione dell\'autorizzazione nelle tue API. Puoi facilmente aggiungere questo plugin su qualsiasi rotta API che stai utilizzando con il tuo modello di autorizzazione e configurazione della politica.\\n- Se desideri avere un singolo modello di autorizzazione per tutte le tue API, puoi utilizzare il metodo del modello/politica globale. Questo rende facile l\'aggiornamento della politica per tutte le rotte, poich\xe9 devi solo aggiornare i metadati in etcd.\\n- Mentre se desideri utilizzare un modello diverso per ogni rotta diversa, puoi utilizzare il metodo della rotta. Questo \xe8 utile quando diverse route API hanno diversi set di permessi utente. Puoi anche utilizzare questo quando hai a che fare con politiche pi\xf9 grandi, poich\xe9 render\xe0 l\'autorizzazione pi\xf9 veloce quando filtrata in pi\xf9 route."},{"id":"/2020/04/21/google-award","metadata":{"permalink":"/it/blog/2020/04/21/google-award","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/it/docusaurus-plugin-content-blog/2020-04-21-google-award.md","source":"@site/i18n/it/docusaurus-plugin-content-blog/2020-04-21-google-award.md","title":"Yang Luo - Vincitore del Google Open Source Peer Bonus","description":"Oggi, siamo lieti di annunciare che il fondatore di Casbin, Yang Luo \xe8 stato insignito del premio \\"Google Open Source Peer Bonus winners\\" per il suo lavoro su Casbin, Npcap e Nmap nel terzo trimestre del 2019.","date":"2020-04-21T00:00:00.000Z","formattedDate":"21 aprile 2020","tags":[],"readingTime":0.81,"hasTruncateMarker":false,"authors":[{"name":"Casbin","title":"Account Ufficiale","url":"http://github.com/casbin","imageURL":"https://avatars.githubusercontent.com/casbin"}],"frontMatter":{"title":"Yang Luo - Vincitore del Google Open Source Peer Bonus","author":"Casbin","authorTitle":"Account Ufficiale","authorURL":"http://github.com/casbin","authorImageURL":"https://avatars.githubusercontent.com/casbin"},"prevItem":{"title":"Autorizzazione in APISIX utilizzando Casbin","permalink":"/it/blog/2021/08/19/apisix-casbin-authorization"},"nextItem":{"title":"Rielaborazione della nostra Documentazione","permalink":"/it/blog/2018/09/23/new-website"}},"content":"Oggi, siamo lieti di annunciare che il fondatore di Casbin, [Yang Luo](https://github.com/hsluoyz) \xe8 stato insignito del premio \\"Google Open Source Peer Bonus winners\\" per il suo lavoro su [Casbin](/), [Npcap](https://nmap.org/npcap/) e [Nmap](https://nmap.org/) nel terzo trimestre del 2019.\\n\\n![ospb](https://hsluoyz.github.io/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.png)\\n\\n> La lettera originale del premio pu\xf2 essere acceduta [qui](https://github.com/hsluoyz/hsluoyz.github.io/blob/master/download/Open%20Source%20Peer%20Bonus%20Q3%202019%20-%20Yang%20Luo%20-%20OSPB%20Award%20Letter.pdf).\\n\\nIl programma [Google Open Source Peer Bonus](https://opensource.google.com/docs/growing/peer-bonus/) \xe8 descritto come:\\n\\n> _Allo stesso modo in cui un Google Peer Bonus viene utilizzato per riconoscere un collega Googler che ha superato le aspettative, un Open Source Peer Bonus riconosce persone esterne che hanno fatto contributi eccezionali all\'open source._\\n\\nL\'[annuncio per i vincitori del 2019](https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html) \xe8 disponibile all\'indirizzo:\\n\\n> https://opensource.googleblog.com/2020/01/announcing-2019-second-cycle-google.html\\n\\nYang e Casbin sono elencati tra gli sviluppatori e i progetti open source che hanno un impatto rilevante l\xe0 fuori, come Git, TensorFlow, V8, CPython, LLVM, progetti Apache, Angular o Jenkins.\\n\\nSiamo lieti di vedere Casbin riconosciuto in questo modo per il suo contributo all\'open source e alla sicurezza del cloud!\\n\\n_Grazie per volare con Casbin!_"},{"id":"/2018/09/23/new-website","metadata":{"permalink":"/it/blog/2018/09/23/new-website","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/it/docusaurus-plugin-content-blog/2018-09-23-new-website.md","source":"@site/i18n/it/docusaurus-plugin-content-blog/2018-09-23-new-website.md","title":"Rielaborazione della nostra Documentazione","description":"Oggi, abbiamo migrato la documentazione di Casbin dalla GitHub Wiki alla sezione Docs di questo sito web, Docusaurus offre molte fantastiche funzionalit\xe0 come stili Markdown migliori, ricerca full-text, versionamento, traduzione.","date":"2018-09-23T00:00:00.000Z","formattedDate":"23 settembre 2018","tags":[],"readingTime":0.265,"hasTruncateMarker":false,"authors":[{"name":"Yang Luo","title":"Creatore di Casbin","url":"http://github.com/hsluoyz","imageURL":"https://avatars.githubusercontent.com/hsluoyz"}],"frontMatter":{"title":"Rielaborazione della nostra Documentazione","author":"Yang Luo","authorTitle":"Creatore di Casbin","authorURL":"http://github.com/hsluoyz","authorImageURL":"https://avatars.githubusercontent.com/hsluoyz"},"prevItem":{"title":"Yang Luo - Vincitore del Google Open Source Peer Bonus","permalink":"/it/blog/2020/04/21/google-award"},"nextItem":{"title":"node-Casbin: Nuovo Membro della Famiglia Casbin","permalink":"/it/blog/2018/08/27/node-casbin"}},"content":"Oggi, abbiamo migrato la documentazione di Casbin dalla GitHub Wiki alla sezione `Docs` di questo sito web, Docusaurus offre molte fantastiche funzionalit\xe0 come stili Markdown migliori, ricerca full-text, versionamento, traduzione.\\n\\nLa documentazione non \xe8 ancora perfetta e necessita ancora di ottimizzazione. Il codice sorgente \xe8 ospitato\\n\\nQualsiasi contributo o suggerimento \xe8 il benvenuto!"},{"id":"/2018/08/27/node-casbin","metadata":{"permalink":"/it/blog/2018/08/27/node-casbin","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/it/docusaurus-plugin-content-blog/2018-08-27-node-casbin.md","source":"@site/i18n/it/docusaurus-plugin-content-blog/2018-08-27-node-casbin.md","title":"node-Casbin: Nuovo Membro della Famiglia Casbin","description":"Oggi, abbiamo portato con successo Casbin su Node.js, che \xe8 stato chiamato:","date":"2018-08-27T00:00:00.000Z","formattedDate":"27 agosto 2018","tags":[],"readingTime":0.23,"hasTruncateMarker":false,"authors":[{"name":"Zixuan Liu","title":"Manutentore di Casbin","url":"http://github.com/nodece","imageURL":"https://avatars.githubusercontent.com/nodece"}],"frontMatter":{"title":"node-Casbin: Nuovo Membro della Famiglia Casbin","author":"Zixuan Liu","authorTitle":"Manutentore di Casbin","authorURL":"http://github.com/nodece","authorImageURL":"https://avatars.githubusercontent.com/nodece"},"prevItem":{"title":"Rielaborazione della nostra Documentazione","permalink":"/it/blog/2018/09/23/new-website"},"nextItem":{"title":"Casbin Server \xe8 stato lanciato!","permalink":"/it/blog/2018/08/07/launching-casbin-server"}},"content":"Oggi, abbiamo portato con successo Casbin su Node.js, che \xe8 stato chiamato:\\n\\n**node-Casbin** condivide un utilizzo e API simili I middleware per Express, Koa2 e Egg.js sono pronti L\'adattatore di storage per Sequelize \xe8 anche preparato.\\n\\nSpero possa soddisfare le tue esigenze bene :)\\n\\nGitHub: https://github.com/casbin/node-casbin"},{"id":"/2018/08/07/launching-casbin-server","metadata":{"permalink":"/it/blog/2018/08/07/launching-casbin-server","editUrl":"https://github.com/casbin/casbin-website-v2/edit/master/i18n/it/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md","source":"@site/i18n/it/docusaurus-plugin-content-blog/2018-08-07-launching-casbin-server.md","title":"Casbin Server \xe8 stato lanciato!","description":"Alcuni dei nostri clienti chiedono se Casbin pu\xf2 essere utilizzato come servizio invece che come libreria. La risposta \xe8 S\xcc. Oggi, abbiamo lanciato il progetto Casbin Server come soluzione concreta per","date":"2018-08-07T00:00:00.000Z","formattedDate":"7 agosto 2018","tags":[],"readingTime":0.735,"hasTruncateMarker":false,"authors":[{"name":"Helong Zhang","title":"Manutentore di Casbin","url":"http://github.com/BetaCat0","imageURL":"https://avatars.githubusercontent.com/BetaCat0"}],"frontMatter":{"title":"Casbin Server \xe8 stato lanciato!","author":"Helong Zhang","authorTitle":"Manutentore di Casbin","authorURL":"http://github.com/BetaCat0","authorImageURL":"https://avatars.githubusercontent.com/BetaCat0"},"prevItem":{"title":"node-Casbin: Nuovo Membro della Famiglia Casbin","permalink":"/it/blog/2018/08/27/node-casbin"}},"content":"Alcuni dei nostri clienti chiedono se Casbin pu\xf2 essere utilizzato come servizio invece che come libreria. La risposta \xe8 **S\xcc**. Oggi, abbiamo lanciato il progetto [Casbin Server](https://github.com/casbin/casbin-server) come soluzione concreta per\\n\\n**Casbin Server** \xe8 in fase di sviluppo attivo da parte del nostro team principale. Presenta diverse funzionalit\xe0:\\n\\n- Sviluppato esclusivamente in Golang.\\n- Pu\xf2 gestire migliaia di istanze Casbin, consentendo di spostare la logica di applicazione dei criteri da pi\xf9 servizi in un unico Casbin Server.\\n- **gRPC** viene utilizzato per comunicare con Casbin Server. Consideriamo anche di aggiungere il supporto **RESTful** nel prossimo futuro.\\n- \xc8 fornito un portale amministratore web intuitivo per consentire agli amministratori non sviluppatori di gestire tutti i dettagli come istanze Casbin, modelli, archiviazione dei criteri e bilanciamento del carico.\\n\\n\\n\\nIl codice sorgente \xe8 ospitato su GitHub: https://github.com/casbin/casbin-server\\n\\nTutte le segnalazioni di problemi o le richieste di pull sono benvenute :)"}]}')}}]);