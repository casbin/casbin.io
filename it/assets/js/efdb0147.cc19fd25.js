"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[1009],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>g});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=n.createContext({}),p=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},m=function(e){var a=p(e.components);return n.createElement(d.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},s=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,o=e.originalType,d=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=p(t),g=l,c=s["".concat(d,".").concat(g)]||s[g]||u[g]||o;return t?n.createElement(c,r(r({ref:a},m),{},{components:t})):n.createElement(c,r({ref:a},m))}));function g(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=s;var i={};for(var d in a)hasOwnProperty.call(a,d)&&(i[d]=a[d]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var p=2;p<o;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8386:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=t(7462),l=(t(7294),t(3905));const o={id:"rolemanager-api",title:"RoleManager API",description:"L'API RoleManager fornisce un'interfaccia per definire operazioni di gestione dei ruoli. L'aggiunta di una funzione di corrispondenza al RoleManager permette l'uso di caratteri jolly nei nomi dei ruoli e nei domini.",keywords:["rolemanager","API"],authors:["closetool","kiloson-c"]},r=void 0,i={unversionedId:"rolemanager-api",id:"rolemanager-api",title:"RoleManager API",description:"L'API RoleManager fornisce un'interfaccia per definire operazioni di gestione dei ruoli. L'aggiunta di una funzione di corrispondenza al RoleManager permette l'uso di caratteri jolly nei nomi dei ruoli e nei domini.",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/RoleManagerApi.mdx",sourceDirName:".",slug:"/rolemanager-api",permalink:"/it/docs/rolemanager-api",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/RoleManagerApi.mdx",tags:[],version:"current",frontMatter:{id:"rolemanager-api",title:"RoleManager API",description:"L'API RoleManager fornisce un'interfaccia per definire operazioni di gestione dei ruoli. L'aggiunta di una funzione di corrispondenza al RoleManager permette l'uso di caratteri jolly nei nomi dei ruoli e nei domini.",keywords:["rolemanager","API"],authors:["closetool","kiloson-c"]},sidebar:"docs",previous:{title:"RBAC with Conditions API",permalink:"/it/docs/rbac-with-conditions-api"},next:{title:"Advanced usage",permalink:"/it/docs/category/advanced-usage"}},d={},p=[{value:"RoleManager",id:"rolemanager",level:2},{value:"<code>AddNamedMatchingFunc()</code>",id:"addnamedmatchingfunc",level:3},{value:"<code>AddNamedDomainMatchingFunc()</code>",id:"addnameddomainmatchingfunc",level:3},{value:"<code>GetRoleManager()</code>",id:"getrolemanager",level:3},{value:"<code>GetNamedRoleManager()</code>",id:"getnamedrolemanager",level:3},{value:"<code>SetRoleManager()</code>",id:"setrolemanager",level:3},{value:"<code>SetNamedRoleManager()</code>",id:"setnamedrolemanager",level:3},{value:"<code>Clear()</code>",id:"clear",level:3},{value:"<code>AddLink()</code>",id:"addlink",level:3},{value:"<code>DeleteLink()</code>",id:"deletelink",level:3},{value:"<code>HasLink()</code>",id:"haslink",level:3},{value:"<code>GetRoles()</code>",id:"getroles",level:3},{value:"<code>GetUsers()</code>",id:"getusers",level:3},{value:"<code>PrintRoles()</code>",id:"printroles",level:3},{value:"<code>SetLogger()</code>",id:"setlogger",level:3},{value:"<code>GetDomains()</code>",id:"getdomains",level:3}],m=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",a)},u=m("Tabs"),s=m("TabItem"),g={toc:p};function c(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},g,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"rolemanager"},"RoleManager"),(0,l.kt)("p",null,"Il RoleManager fornisce un'interfaccia per definire operazioni di gestione dei ruoli. L'aggiunta di una funzione di corrispondenza al RoleManager permette l'uso di caratteri jolly nei nomi dei ruoli e nei domini."),(0,l.kt)("h3",{id:"addnamedmatchingfunc"},(0,l.kt)("inlineCode",{parentName:"h3"},"AddNamedMatchingFunc()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"AddNamedMatchingFunc")," aggiunge una ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," per Ptype al RoleManager. La ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," verr\xe0 utilizzata durante l'esecuzione del matching dei ruoli."),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    e.AddNamedMatchingFunc("g", "", util.KeyMatch)\n    _, _ = e.AddGroupingPolicies([][]string{{"*", "admin", "domain1"}})\n    _, _ = e.GetRoleManager().HasLink("bob", "admin", "domain1") // -> true, nil\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await e.addNamedMatchingFunc('g', Util.keyMatchFunc);\n    await e.addGroupingPolicies([['*', 'admin', 'domain1']]);\n    await e.getRoleManager().hasLink('bob', 'admin', 'domain1');\n")))),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    e, _ := casbin.NewEnforcer("path/to/model", "path/to/policy")\n    e.AddNamedMatchingFunc("g", "", util.MatchKey)\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    const e = await newEnforcer('path/to/model', 'path/to/policy');\n    await e.addNamedMatchingFunc('g', Util.keyMatchFunc);\n")))),(0,l.kt)("h3",{id:"addnameddomainmatchingfunc"},(0,l.kt)("inlineCode",{parentName:"h3"},"AddNamedDomainMatchingFunc()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"AddNamedDomainMatchingFunc")," aggiunge una ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," per Ptype al RoleManager. La ",(0,l.kt)("inlineCode",{parentName:"p"},"DomainMatchingFunc")," \xe8 simile alla ",(0,l.kt)("inlineCode",{parentName:"p"},"MatchingFunc")," elencata sopra."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    e, _ := casbin.NewEnforcer("path/to/model", "path/to/policy")\n    e.AddNamedDomainMatchingFunc("g", "", util.MatchKey)\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    const e = await newEnforcer('path/to/model', 'path/to/policy');\n    await e.addNamedDomainMatchingFunc('g', Util.keyMatchFunc);\n")))),(0,l.kt)("h3",{id:"getrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetRoleManager()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"GetRoleManager")," ottiene il gestore dei ruoli corrente per ",(0,l.kt)("inlineCode",{parentName:"p"},"g"),"."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    rm := e.GetRoleManager()\n"))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    const rm = await e.getRoleManager();\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm = e.get_role_manager()\n")))),(0,l.kt)("h3",{id:"getnamedrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetNamedRoleManager()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"GetNamedRoleManager")," ottiene il gestore dei ruoli per il tipo Ptype nominato."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm := e.GetNamedRoleManager("g2")\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'    const rm = await e.getNamedRoleManager("g2");\n'))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm = e.get_named_role_manager("g2")\n')))),(0,l.kt)("h3",{id:"setrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetRoleManager()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"SetRoleManager")," imposta il gestore dei ruoli corrente per ",(0,l.kt)("inlineCode",{parentName:"p"},"g"),"."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    e.SetRoleManager(rm)\n"))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    e.setRoleManager(rm);\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm = e.set_role_manager(rm)\n")))),(0,l.kt)("h3",{id:"setnamedrolemanager"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetNamedRoleManager()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"SetNamedRoleManager")," imposta il gestore dei ruoli per il tipo Ptype nominato."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm := e.SetNamedRoleManager("g2", rm)\n'))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm = e.set_role_manager("g2", rm)\n')))),(0,l.kt)("h3",{id:"clear"},(0,l.kt)("inlineCode",{parentName:"h3"},"Clear()")),(0,l.kt)("p",null,"La funzione ",(0,l.kt)("inlineCode",{parentName:"p"},"Clear")," cancella tutti i dati memorizzati e reimposta il gestore dei ruoli al suo stato iniziale."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    rm.Clear()\n"))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.clear();\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm.clear()\n")))),(0,l.kt)("h3",{id:"addlink"},(0,l.kt)("inlineCode",{parentName:"h3"},"AddLink()")),(0,l.kt)("p",null,"AddLink aggiunge il collegamento di ereditariet\xe0 tra due ruoli. ruolo: nome1 e ruolo: nome2.\nIl dominio \xe8 un prefisso per i ruoli (pu\xf2 essere utilizzato per altri scopi)."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.AddLink("u1", "g1", "domain1")\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.addLink('u1', 'g1', 'domain1');\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.add_link("u1", "g1", "domain1")\n')))),(0,l.kt)("h3",{id:"deletelink"},(0,l.kt)("inlineCode",{parentName:"h3"},"DeleteLink()")),(0,l.kt)("p",null,"DeleteLink elimina il collegamento di ereditariet\xe0 tra due ruoli. ruolo: nome1 e ruolo: nome2.\nIl dominio \xe8 un prefisso per i ruoli (pu\xf2 essere utilizzato per altri scopi)."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.DeleteLink("u1", "g1", "domain1")\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.deleteLink('u1', 'g1', 'domain1');\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.delete_link("u1", "g1", "domain1")\n')))),(0,l.kt)("h3",{id:"haslink"},(0,l.kt)("inlineCode",{parentName:"h3"},"HasLink()")),(0,l.kt)("p",null,"HaLink determina se esiste un collegamento tra due ruoli. ruolo: nome1 eredita il ruolo: nome2.\nIl dominio \xe8 un prefisso per i ruoli (pu\xf2 essere utilizzato per altri scopi)."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.HasLink("u1", "g1", "domain1")\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.hasLink('u1', 'g1', 'domain1');\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.has_link("u1", "g1", "domain1")\n')))),(0,l.kt)("h3",{id:"getroles"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetRoles()")),(0,l.kt)("p",null,"OttieniRuoli ottiene i ruoli che un utente eredita.\nIl dominio \xe8 un prefisso per i ruoli (pu\xf2 essere utilizzato per altri scopi)."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.GetRoles("u1", "domain1")\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.getRoles('u1', 'domain1');\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.get_roles("u1", "domain")\n')))),(0,l.kt)("h3",{id:"getusers"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetUsers()")),(0,l.kt)("p",null,"GetUsers ottiene gli utenti che ereditano un ruolo.\nIl dominio \xe8 un prefisso per gli utenti (pu\xf2 essere utilizzato per altri scopi)."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'    rm.GetUsers("g1")\n'))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.getUsers('g1');\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    rm.get_users("g1")\n')))),(0,l.kt)("h3",{id:"printroles"},(0,l.kt)("inlineCode",{parentName:"h3"},"PrintRoles()")),(0,l.kt)("p",null,"PrintRoles stampa tutti i ruoli nel log."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    rm.PrintRoles()\n"))),(0,l.kt)(s,{value:"Node.js",label:"Node.js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"    await rm.printRoles();\n"))),(0,l.kt)(s,{value:"Python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"    rm.print_roles()\n")))),(0,l.kt)("h3",{id:"setlogger"},(0,l.kt)("inlineCode",{parentName:"h3"},"SetLogger()")),(0,l.kt)("p",null,"SetLogger imposta il logger del gestore dei ruoli."),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    logger := log.DefaultLogger{}\n    logger.EnableLog(true)\n    rm.SetLogger(&logger)\n    _ = rm.PrintRoles()\n")))),(0,l.kt)("h3",{id:"getdomains"},(0,l.kt)("inlineCode",{parentName:"h3"},"GetDomains()")),(0,l.kt)("p",null,"GetDomains ottiene i domini che un utente possiede"),(0,l.kt)("p",null,"Ad esempio:"),(0,l.kt)(u,{groupId:"langs",mdxType:"Tabs"},(0,l.kt)(s,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"    result, err := rm.GetDomains(name)\n")))))}c.isMDXComponent=!0}}]);