"use strict";(self.webpackChunkcasbin_website_v2=self.webpackChunkcasbin_website_v2||[]).push([[2817],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var g=r.createContext({}),p=function(e){var t=r.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(g.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,g=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),c=a,m=u["".concat(g,".").concat(c)]||u[c]||d[c]||o;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var g in t)hasOwnProperty.call(t,g)&&(i[g]=t[g]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"log-error",title:"Log & Error Handling",description:"\u041b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f \u0442\u0430 \u043e\u0431\u0440\u043e\u0431\u043a\u0430 \u043f\u043e\u043c\u0438\u043b\u043e\u043a \u0443 Casbin",keywords:["log","error","error handling"],authors:["hsluoyz"]},l=void 0,i={unversionedId:"log-error",id:"log-error",title:"Log & Error Handling",description:"\u041b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f \u0442\u0430 \u043e\u0431\u0440\u043e\u0431\u043a\u0430 \u043f\u043e\u043c\u0438\u043b\u043e\u043a \u0443 Casbin",source:"@site/i18n/uk/docusaurus-plugin-content-docs/current/LogError.mdx",sourceDirName:".",slug:"/log-error",permalink:"/uk/docs/log-error",draft:!1,editUrl:"https://github.com/casbin/casbin-website-v2/edit/master/docs/LogError.mdx",tags:[],version:"current",frontMatter:{id:"log-error",title:"Log & Error Handling",description:"\u041b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f \u0442\u0430 \u043e\u0431\u0440\u043e\u0431\u043a\u0430 \u043f\u043e\u043c\u0438\u043b\u043e\u043a \u0443 Casbin",keywords:["log","error","error handling"],authors:["hsluoyz"]},sidebar:"docs",previous:{title:"Command-line Tools",permalink:"/uk/docs/command-line-tools"},next:{title:"Frontend Usage",permalink:"/uk/docs/frontend"}},g={},p=[{value:"\u041b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f",id:"\u043b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f",level:2},{value:"Use different loggers for different enforcers",id:"use-different-loggers-for-different-enforcers",level:3},{value:"Supported loggers",id:"supported-loggers",level:4},{value:"How to write a logger",id:"how-to-write-a-logger",level:4},{value:"Error handling",id:"error-handling",level:2},{value:"Enable and disable",id:"enable-and-disable",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=s("Tabs"),u=s("TabItem"),c={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u043b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f"},"\u041b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f"),(0,a.kt)("p",null,"Casbin \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 \u0432\u0431\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0439 ",(0,a.kt)("inlineCode",{parentName:"p"},"log")," \u0434\u043b\u044f \u0432\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044f \u043b\u043e\u0433\u0456\u0432 \u0443 \u043a\u043e\u043d\u0441\u043e\u043b\u044c, \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-log"},"2017/07/15 19:43:56 [Request: alice, data1, read ---\x3e true]\n")),(0,a.kt)("p",null,"\u041b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f \u0437\u0430 \u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u043d\u0435 \u0432\u0432\u0456\u043c\u043a\u043d\u0435\u043d\u0435. \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0456\u043c\u043a\u043d\u0443\u0442\u0438 \u0430\u0431\u043e \u0432\u0438\u043c\u043a\u043d\u0443\u0442\u0438 \u0439\u043e\u0433\u043e \u0437\u0430 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableLog()")," \u0430\u0431\u043e \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"For Golang: We already support logging the model, enforce request, role, and policy in Golang. \u0412\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0432\u043b\u0430\u0441\u043d\u0438\u0439 \u043b\u043e\u0433 \u0434\u043b\u044f \u043b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f Casbin.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"For Python: PyCasbin leverages the default Python logging mechanism. PyCasbin makes a call to ",(0,a.kt)("inlineCode",{parentName:"p"},"logging.getLogger()")," to set the logger. No special logging configuration is needed other than initializing the logger in the parent application. If no logging is initialized within the parent application, you will not see any log messages from PyCasbin. At the same time, when you enable logs in PyCasbin, you can specify the logging configuration through the parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"logging_config"),". If no configuration is specified, it will use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/pycasbin/blob/c33cabfa0ac65cd09cf812a65e71794d64cb5132/casbin/util/log.py#L6C1-L6C1"},"default log configuration"),". For other PyCasbin extensions, you can refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/4.2/topics/logging/"},"Django logging docs")," if you are a Django user. \u0414\u043b\u044f \u0456\u043d\u0448\u0438\u0445 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432 Python, \u0432\u0430\u043c \u0441\u043b\u0456\u0434 \u0437\u0432\u0435\u0440\u043d\u0443\u0442\u0438\u0441\u044f \u0434\u043e ",(0,a.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/logging.config.html"},"\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u0457 \u043b\u043e\u0433\u0443\u0432\u0430\u043d\u043d\u044f Python")," \u0434\u043b\u044f \u043d\u0430\u043b\u0430\u0448\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043b\u043e\u0433\u0435\u0440\u0430.")),(0,a.kt)("h3",{id:"use-different-loggers-for-different-enforcers"},"Use different loggers for different enforcers"),(0,a.kt)("p",null,"Every enforcer can have its own logger to log information, and it can be changed at runtime."),(0,a.kt)("p",null,"And you can use a proper logger via the last parameter of ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),". If you are using this way to initialize your enforcer, you don't need to use the enabled parameter because the priority of the enabled field in the logger is higher."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"// Set a default logger as enforcer e1's logger.\n// This operation can also be seen as changing the logger of e1 at runtime.\ne1.SetLogger(&Log.DefaultLogger{})\n\n// Set another logger as enforcer e2's logger.\ne2.SetLogger(&YouOwnLogger)\n\n// Set your logger when initializing enforcer e3.\ne3, _ := casbin.NewEnforcer(\"examples/rbac_model.conf\", a, logger)\n")),(0,a.kt)("h4",{id:"supported-loggers"},"Supported loggers"),(0,a.kt)("p",null,"We provide some loggers to help you log information."),(0,a.kt)(d,{groupId:"langs",mdxType:"Tabs"},(0,a.kt)(u,{value:"Go",label:"Go",default:!0,mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Logger"),(0,a.kt)("th",{parentName:"tr",align:null},"Author"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/casbin/blob/master/log/default_logger.go"},"Default logger (built-in)")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"The default logger using golang log.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/casbin/zap-logger"},"Zap logger")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Using ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/uber-go/zap"},"zap"),", provide json encoded log and you can customize more with your own zap-logger."))))),(0,a.kt)(u,{value:"PHP",label:"PHP",mdxType:"TabItem"},(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Logger"),(0,a.kt)("th",{parentName:"tr",align:null},"Author"),(0,a.kt)("th",{parentName:"tr",align:null},"\u041e\u043f\u0438\u0441"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/php-casbin/psr3-bridge"},"psr3-bridge logger")),(0,a.kt)("td",{parentName:"tr",align:null},"Casbin"),(0,a.kt)("td",{parentName:"tr",align:null},"Provides a ",(0,a.kt)("a",{parentName:"td",href:"https://www.php-fig.org/psr/psr-3/"},"PSR-3")," compliant bridge.")))))),(0,a.kt)("h4",{id:"how-to-write-a-logger"},"How to write a logger"),(0,a.kt)("p",null,"Your logger should implement the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casbin/casbin/blob/master/log/logger.go#L20"},"Logger")," interface."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Method"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"EnableLog()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Control whether to print the message.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"IsEnabled()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Show the current logger's enabled status.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogModel()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Log info related to the model.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogEnforce()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Log info related to enforcing.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogRole()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Log info related to the role.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"LogPolicy()"),(0,a.kt)("td",{parentName:"tr",align:null},"mandatory"),(0,a.kt)("td",{parentName:"tr",align:null},"Log info related to the policy.")))),(0,a.kt)("p",null,"You can pass your custom ",(0,a.kt)("inlineCode",{parentName:"p"},"logger")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.SetLogger()"),"."),(0,a.kt)("p",null,"Here is an example of how to customize a logger for Golang:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "fmt"\n    "log"\n    "strings"\n)\n\n// DefaultLogger is the implementation for a Logger using golang log.\ntype DefaultLogger struct {\n    enabled bool\n}\n\nfunc (l *DefaultLogger) EnableLog(enable bool) {\n    l.enabled = enable\n}\n\nfunc (l *DefaultLogger) IsEnabled() bool {\n    return l.enabled\n}\n\nfunc (l *DefaultLogger) LogModel(model [][]string) {\n    if !l.enabled {\n        return\n    }\n    var str strings.Builder\n    str.WriteString("Model: ")\n    for _, v := range model {\n        str.WriteString(fmt.Sprintf("%v\\n", v))\n    }\n\n    log.Println(str.String())\n}\n\nfunc (l *DefaultLogger) LogEnforce(matcher string, request []interface{}, result bool, explains [][]string) {\n    if !l.enabled {\n        return\n    }\n\n    var reqStr strings.Builder\n    reqStr.WriteString("Request: ")\n    for i, rval := range request {\n        if i != len(request)-1 {\n            reqStr.WriteString(fmt.Sprintf("%v, ", rval))\n        } else {\n            reqStr.WriteString(fmt.Sprintf("%v", rval))\n        }\n    }\n    reqStr.WriteString(fmt.Sprintf(" ---\x3e %t\\n", result))\n\n    reqStr.WriteString("Hit Policy: ")\n    for i, pval := range explains {\n        if i != len(explains)-1 {\n            reqStr.WriteString(fmt.Sprintf("%v, ", pval))\n        } else {\n            reqStr.WriteString(fmt.Sprintf("%v \\n", pval))\n        }\n    }\n\n    log.Println(reqStr.String())\n}\n\nfunc (l *DefaultLogger) LogPolicy(policy map[string][][]string) {\n    if !l.enabled {\n        return\n    }\n\n    var str strings.Builder\n    str.WriteString("Policy: ")\n    for k, v := range policy {\n        str.WriteString(fmt.Sprintf("%s : %v\\n", k, v))\n    }\n\n    log.Println(str.String())\n}\n\nfunc (l *DefaultLogger) LogRole(roles []string) {\n    if !l.enabled {\n        return\n    }\n\n    log.Println("Roles: ", roles)\n}\n')),(0,a.kt)("h2",{id:"error-handling"},"Error handling"),(0,a.kt)("p",null,"Errors or panics may occur when you use Casbin for reasons like:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Invalid syntax in the model file (.conf)."),(0,a.kt)("li",{parentName:"ol"},"Invalid syntax in the policy file (.csv)."),(0,a.kt)("li",{parentName:"ol"},"Custom errors from storage adapters, e.g., MySQL fails to connect."),(0,a.kt)("li",{parentName:"ol"},"Casbin's bug.")),(0,a.kt)("p",null,"There are five main functions you may need to be aware of for errors or panics:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Function"),(0,a.kt)("th",{parentName:"tr",align:null},"Behavior on error"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#NewEnforcer"},"NewEnforcer()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns an error")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.LoadModel"},"LoadModel()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns an error")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.LoadPolicy"},"LoadPolicy()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns an error")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.SavePolicy"},"SavePolicy()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns an error")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://godoc.org/github.com/casbin/casbin#Enforcer.Enforce"},"Enforce()")),(0,a.kt)("td",{parentName:"tr",align:null},"Returns an error")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()")," calls ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadModel()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"LoadPolicy()")," internally. So you don't have to call the latter two when using ",(0,a.kt)("inlineCode",{parentName:"p"},"NewEnforcer()"),".")),(0,a.kt)("h2",{id:"enable-and-disable"},"Enable and disable"),(0,a.kt)("p",null,"The enforcer can be disabled via the ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.EnableEnforce()")," function. When it's disabled, ",(0,a.kt)("inlineCode",{parentName:"p"},"Enforcer.Enforce()")," will always return ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". Other operations like adding or removing policies are not affected. Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'e := casbin.NewEnforcer("examples/basic_model.conf", "examples/basic_policy.csv")\n\n// Will return false.\n// By default, the enforcer is enabled.\ne.Enforce("non-authorized-user", "data1", "read")\n\n// Disable the enforcer at runtime.\ne.EnableEnforce(false)\n\n// Will return true for any request.\ne.Enforce("non-authorized-user", "data1", "read")\n\n// Enable the enforcer again.\ne.EnableEnforce(true)\n\n// Will return false.\ne.Enforce("non-authorized-user", "data1", "read")\n')))}m.isMDXComponent=!0}}]);